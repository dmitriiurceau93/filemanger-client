{"version":3,"sources":["config.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Layout.js","pages/Login.js","pages/Signup.js","pages/Home.js","helpers/CustomHook.js","helpers/RestAPI.js","helpers/ImageGroup.js","helpers/MatchImageResource.js","helpers/AvailableArea.js","containers/Views.js","pages/Drive.js","pages/Directory.js","routes.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["config","authSuccess","token","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","CustomLayout","authenticated","this","props","Fragment","Menu","fixed","className","Item","as","NavLink","exact","to","name","src","alt","header","onClick","children","React","Component","withRouter","connect","state","auth","loading","login","username","password","axios","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authLogin","useState","user","setUser","handleChange","e","target","value","Layout","Grid","textAlign","verticalAlign","Column","Header","color","message","Form","size","onSubmit","preventDefault","Segment","stacked","Input","onChange","fluid","icon","iconPosition","placeholder","Button","disabled","Message","signup","email","password1","password2","authSignup","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","DesktopContainer","hideFixedMenu","setState","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","maxWidth","onlyMobile","ResponsiveContainer","Home","style","padding","vertical","container","stackable","Row","width","fontSize","floated","Image","bordered","rounded","useEventListener","eventName","handler","element","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","getFiles","Promise","resolve","reject","getItem","console","warn","getFilesByDirectory","directory","getSignedPostUrl","formData","a","append","result","uploadChunk","url","chunk","index","callback","onUploadProgress","progressEvent","loaded","put","log","uploadSingleFile","file","FormData","Object","keys","fields","forEach","completeMultiUpload","parts","uploadId","JSON","stringify","completeUpload","completeFolderUpload","parentId","getMultiPartUploadId","folderSignedUrls","fileSingedUrl","downloadSingleFile","onDownloadProgress","responseType","get","createFolder","parent_id","getAllFolders","getFolders","imageGroup16","imageGroup128","archive","exe","video","audo","text","msdos","shellscript","doc","spreadsheet","powerpoint","pdf","getting_started","unkown","matchImageResource16","includes","matchImageResource128","path","audio","getBase64BackgroundImage","reader","FileReader","onload","backgroundImage","backgroundRepeat","backgroundSize","height","readAsDataURL","availableUploadArea","availableDownloadArea","FileViews","extra_id","access","id","image_style","trigger","position","on","arrow","isMobileOnly","onHandleSide","xmlns","viewBox","version","stroke","fillRule","fill","fillOpacity","d","ListViews","date","cur_date","moment","format","file_size","extra_type_id","onDoubleClick","history","push","pathname","location","length","x","y","focusable","owner","last_modified","bytes","i","parseInt","Math","floor","round","pow","bytesToSize","FolderViews","unselectable","UploadViews","CustomToast","closeToast","scroll","scrollToBottom","containerId","toast","configure","Drive","Modal","setAppElement","fileRef","folderRef","inputRef","foldersRef","totalSizeRef","downloadedRef","is_page_loaded","setPageLoaded","is_uploadingModal","setUploadingModal","is_downloadingModal","setDownloadingModal","is_creatingModal","setCreatingModal","is_minimized","setMinimize","is_uploaded","setUploaded","is_downloaded","setDownloaded","is_context","setContext","is_triggerable","setContextTrigger","is_gridType","setViewType","is_mobilePopup","setMobilePopup","is_mobileSide","setMobileSide","order_desc","setOrder","file_count","setFileCount","total_file_count","setTotalFileCount","upload_percent","setUploadPercent","download_percent","setDownloadPercentage","is_download_failed","setDownloadFailed","is_upload_failed","setUploadFailed","uploading_files","setUploadingFiles","uploading_folders","setUploadingFolders","files","setFiles","content_type","quick_files","setQuickFiles","quick_file","setQuickFile","selected_file","setSelectedFile","selected_folder","setSelectedFolder","new_folder_title","setFolderTitle","folders","setFolders","CHUNK_SIZE","CHUNK_LIMIT","LIMIT","zip","JSZip","downloadZip","quick_arr","item","file_arr","concat","uploaded","eventContextHandler","useCallback","button","getAttribute","cur","split","find","folder","handleSortOrder","ordered_files","ordered_folders","sort","b","localeCompare","handleDropdown","click","webkitdirectory","process","lengthComputable","downloadingPercentage","downloadBlob","blob","blobUrl","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","clickHandler","revokeObjectURL","dispatchEvent","MouseEvent","bubbles","cancelable","view","removeChild","DownloadFileFromS3","signed_url","mimeType","fileName","Blob","handleClick","foo","signed_urls","total_size","generateAsync","content","saveAs","loadedOffset","waitUpload","mpuId","partNo","response","etag","headers","substring","uploadMinorFile","file_data","totalFileSize","progress","Array","onHandleProgress","sum","reduce","parseFloat","toFixed","fileResponse","complete","uploadChunks","chunks","promises","map","c","all","calculateChunks","minChunksCount","handleChangeFile","overLimit","values","dark","POSITION","TOP_CENTER","hideProgressBar","closeOnClick","pauseOnHover","draggable","scrollToTop","chunkCounts","mpu_id","_offset","readLength","slice","res_arr","BOTTOM_CENTER","handleChangeFolder","webkitRelativePath","arr","count","closeModal","closeCreateModal","onHandleMobilePopupOpen","onHandleMobilePopupItem","onHandleMobileSideOpen","onHandleMobileSideItem","bind","useGesture","onMouseDown","dateFormat","isOpen","onRequestClose","overlayClassName","points","ReactHoverObserver","isHovering","ele","element_name","scroller","scrollTo","duration","delay","offset","smooth","onHandleUploadFileSelect","onHandleUploadFolderSelect","onAfterOpen","focus","select","defaultValue","ref","disable","visible","Dropdown","labeled","label","Divider","Link","labelPosition","div","data-value","class","modified_date","TransitionablePortal","open","onClose","Icon","Label","transition","animation","created_date","isIOS","divider","hidden","multiple","Dimmer","active","inverted","Loader","Directory","cur_dir","setCurrentDirectory","routeTree","setRouteTree","mobileCurRoute","setMobileCurRoute","validateURL","is_valid","startsWith","substr","directoryToID","dir","paths","filter","el","current_folder","available_folders","prev_folder","prev_folders","sel","parent","setRoutes","routes","route","full_path","cur_route","PublicRoute","component","Login","Signup","render","PrivateRoute","App","onAuthCheck","isAuthenticated","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","initialState","store","createStore","applyMiddleware","thunk","app","ReactDOM","getElementById","origin","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qTAAaA,EAEI,4BCQJC,EAAc,SAACC,GAC1B,MAAO,CACLC,KCXwB,eDYxBD,MAAOA,IAIEE,EAAW,SAACC,GACvB,MAAO,CACLF,KCjBqB,YDkBrBE,MAAOA,IAIEC,EAAS,WAGpB,OAFAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACjB,CACLL,KCzBuB,gBD6BdM,EAAmB,SAACC,GAC/B,OAAO,SAACC,GACNC,YAAW,WACTD,EAASL,OACS,IAAjBI,K,4HE9BDG,E,uKACM,IAAD,OACCC,EAAkBC,KAAKC,MAAvBF,cACR,OACE,kBAAC,IAAMG,SAAP,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAM,MAAMC,UAAU,UAC1B,kBAACF,EAAA,EAAKG,KAAN,CACEC,GAAIC,IACJC,OAAK,EACLC,GAAG,IACHC,KAAK,OACLN,UAAU,aAEV,yBAAKO,IAAK,mBAAoBC,IAAI,UAEpC,yBAAKR,UAAU,WACZN,EACC,kBAAC,IAAMG,SAAP,KACE,kBAACC,EAAA,EAAKG,KAAN,CACEC,GAAIC,IACJC,OAAK,EACLC,GAAG,SACHC,KAAK,aAEP,kBAACR,EAAA,EAAKG,KAAN,CAAWQ,QAAM,EAACC,QAAS,kBAAM,EAAKd,MAAMV,WAA5C,WAKF,kBAAC,IAAMW,SAAP,KACE,kBAACC,EAAA,EAAKG,KAAN,CAAWQ,QAAM,EAACP,GAAIC,IAASC,OAAK,EAACC,GAAG,UAAxC,SAGA,kBAACP,EAAA,EAAKG,KAAN,CAAWQ,QAAM,EAACP,GAAIC,IAASC,OAAK,EAACC,GAAG,WAAxC,aAOPV,KAAKC,MAAMe,c,GAxCOC,IAAMC,WA0DlBC,cACbC,aAbsB,SAACC,GACvB,MAAO,CACLtB,cAAoC,OAArBsB,EAAMC,KAAKnC,UAIH,SAACS,GAC1B,MAAO,CACLL,OAAQ,kBAAMK,EAASL,SAKzB6B,CAA6CtB,IC+BhCsB,eAdS,SAACC,GACvB,MAAO,CACLE,QAASF,EAAMC,KAAKC,QACpBjC,MAAO+B,EAAMC,KAAKhC,MAClBH,MAAOkC,EAAMC,KAAKnC,UAIK,SAACS,GAC1B,MAAO,CACL4B,MAAO,SAACC,EAAUC,GAAX,OAAwB9B,EHpDV,SAAC6B,EAAUC,GAClC,OAAO,SAAC9B,GACNA,EArCK,CACLR,KCNsB,eD2CtBuC,IACGC,KADH,UACW3C,EADX,qBACoD,CAChDwC,SAAUA,EACVC,SAAUA,IAEXG,MAAK,SAACC,GACL,IAAM3C,EAAQ2C,EAAIC,KAAKC,IACjBC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvD3C,aAAa4C,QAAQ,QAASjD,GAC9BK,aAAa4C,QAAQ,iBAAkBH,GACvCrC,EAASV,EAAYC,IACrBS,EAASF,EAAiB,UAE3B2C,OAAM,SAACC,GACN1C,EAASP,EAASiD,QGmCkBC,CAAUd,EAAUC,QAIjDN,EAlFD,SAACnB,GAAW,IAChBX,EAAmBW,EAAnBX,MAAOiC,EAAYtB,EAAZsB,QADQ,EAECiB,mBAAS,IAFV,mBAEhBC,EAFgB,KAEVC,EAFU,KAIjBC,EAAe,SAACC,GACpBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOlC,KAAOiC,EAAEC,OAAOC,UAQ/C,OACE,kBAACC,EAAD,KACE,yBAAK1C,UAAU,cACb,kBAAC2C,EAAA,EAAD,CAAMC,UAAU,SAASC,cAAc,UACrC,kBAACF,EAAA,EAAKG,OAAN,CAAa9C,UAAU,SACrB,kBAAC+C,EAAA,EAAD,CAAQ7C,GAAG,KAAK8C,MAAM,OAAOJ,UAAU,UAAvC,0BAGC3D,GAAS,2BAAIA,EAAMgE,SAEpB,kBAAC,IAAMpD,SAAP,KACE,kBAACqD,EAAA,EAAD,CAAMC,KAAK,QAAQC,SAhBV,SAACb,GACpBA,EAAEc,iBACFzD,EAAMuB,MAAMiB,EAAKhB,SAAUgB,EAAKf,YAepB,kBAACiC,EAAA,EAAD,CAASC,SAAO,GACd,kBAACL,EAAA,EAAKM,MAAN,CACEC,SAAUnB,EACVG,MAAOL,EAAKhB,SACZd,KAAK,WACLoD,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,aAEd,kBAACX,EAAA,EAAKM,MAAN,CACEC,SAAUnB,EACVoB,OAAK,EACLjB,MAAOL,EAAKf,SACZf,KAAK,WACLqD,KAAK,OACLC,aAAa,OACbC,YAAY,WACZ9E,KAAK,aAGP,kBAAC+E,EAAA,EAAD,CACEd,MAAM,OACNU,OAAK,EACLP,KAAK,QACLjC,QAASA,EACT6C,SAAU7C,GALZ,WAWJ,kBAAC8C,EAAA,EAAD,mBACa,kBAAC,IAAD,CAAS3D,GAAG,WAAZ,oBC4CZU,eAfS,SAACC,GACvB,MAAO,CACLE,QAASF,EAAMC,KAAKC,QACpBjC,MAAO+B,EAAMC,KAAKhC,MAClBH,MAAOkC,EAAMC,KAAKnC,UAIK,SAACS,GAC1B,MAAO,CACL0E,OAAQ,SAAC7C,EAAU8C,EAAOC,EAAWC,GAA7B,OACN7E,EJlDoB,SAAC6B,EAAU8C,EAAOC,EAAWC,GACrD,OAAO,SAAC7E,GACNA,EA3DK,CACLR,KCNsB,eDiEtBuC,IACGC,KADH,UACW3C,EADX,4BAC2D,CACvDwC,SAAUA,EACV8C,MAAOA,EACPC,UAAWA,EACXC,UAAWA,IAEZ5C,MAAK,SAACC,GACL,IAAM3C,EAAQ2C,EAAIC,KAAKC,IACjBC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvD3C,aAAa4C,QAAQ,QAASjD,GAC9BK,aAAa4C,QAAQ,iBAAkBH,GACvCrC,EAASV,EAAYC,IACrBS,EAASF,EAAiB,UAE3B2C,OAAM,SAACC,GACN1C,EAASP,EAASiD,QI+BXoC,CAAWjD,EAAU8C,EAAOC,EAAWC,QAIvCrD,EAtGA,SAACnB,GAAW,IACjBX,EAAmBW,EAAnBX,MAAOiC,EAAYtB,EAAZsB,QADS,EAEAiB,mBAAS,IAFT,mBAEjBC,EAFiB,KAEXC,EAFW,KASlBC,EAAe,SAACC,GACpBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOlC,KAAOiC,EAAEC,OAAOC,UAG/C,OACE,kBAACC,EAAD,KACE,yBAAK1C,UAAU,cACb,kBAAC2C,EAAA,EAAD,CAAMC,UAAU,SAASC,cAAc,UACrC,kBAACF,EAAA,EAAKG,OAAN,CAAa9C,UAAU,SACrB,kBAAC+C,EAAA,EAAD,CAAQ7C,GAAG,KAAK8C,MAAM,OAAOJ,UAAU,UAAvC,0BAGC3D,GAAS,2BAAIW,EAAMX,MAAMgE,SAE1B,kBAAC,IAAMpD,SAAP,KACE,kBAACqD,EAAA,EAAD,CAAMC,KAAK,QAAQC,SApBV,SAACb,GACpBA,EAAEc,iBACFzD,EAAMqE,OAAO7B,EAAKhB,SAAUgB,EAAK8B,MAAO9B,EAAK+B,UAAW/B,EAAKgC,aAmBjD,kBAACd,EAAA,EAAD,CAASC,SAAO,GACd,kBAACL,EAAA,EAAKM,MAAN,CACEC,SAAUnB,EACVG,MAAOL,EAAKhB,SACZd,KAAK,WACLoD,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,aAEd,kBAACX,EAAA,EAAKM,MAAN,CACEC,SAAUnB,EACVG,MAAOL,EAAK8B,MACZ5D,KAAK,QACLoD,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,mBAEd,kBAACX,EAAA,EAAKM,MAAN,CACEC,SAAUnB,EACVoB,OAAK,EACLjB,MAAOL,EAAK+B,UACZ7D,KAAK,YACLqD,KAAK,OACLC,aAAa,OACbC,YAAY,WACZ9E,KAAK,aAEP,kBAACmE,EAAA,EAAKM,MAAN,CACEC,SAAUnB,EACVoB,OAAK,EACLjB,MAAOL,EAAKgC,UACZ9D,KAAK,YACLqD,KAAK,OACLC,aAAa,OACbC,YAAY,mBACZ9E,KAAK,aAGP,kBAAC+E,EAAA,EAAD,CACEd,MAAM,OACNU,OAAK,EACLP,KAAK,QACLjC,QAASA,EACT6C,SAAU7C,GALZ,YAWJ,kBAAC8C,EAAA,EAAD,iCAC2B,kBAAC,IAAD,CAAS3D,GAAG,UAAZ,kB,oCC9EnCiE,EAAW,WAEf,MADgC,qBAAXC,OACNC,IAAWC,WAAWC,SAAWH,OAAOI,YAGnDC,E,4MACJ5D,MAAQ,G,EAER6D,cAAgB,kBAAM,EAAKC,SAAS,CAAE/E,OAAO,K,EAC7CgF,cAAgB,kBAAM,EAAKD,SAAS,CAAE/E,OAAO,K,uDAEnC,IACAY,EAAahB,KAAKC,MAAlBe,SACUhB,KAAKqB,MAAfjB,MAER,OACE,kBAACyE,EAAA,EAAD,CAAYF,SAAUA,EAAUI,SAAUF,IAAWC,WAAWC,UAC9D,kBAACM,EAAA,EAAD,CACEC,MAAM,EACNC,eAAgBvF,KAAKoF,cACrBI,sBAAuBxF,KAAKkF,gBAE7BlE,O,GAjBsBE,aA2BzBuE,E,4MACJpE,MAAQ,G,EAERqE,kBAAoB,kBAAM,EAAKP,SAAS,CAAEQ,eAAe,K,EAEzDC,aAAe,kBAAM,EAAKT,SAAS,CAAEQ,eAAe,K,uDAE1C,IACA3E,EAAahB,KAAKC,MAAlBe,SACkBhB,KAAKqB,MAAvBsE,cAER,OACE,kBAACd,EAAA,EAAD,CACEtE,GAAIsF,IAAQC,SACZnB,SAAUA,EACVoB,SAAUlB,IAAWmB,WAAWD,UAE/B/E,O,GAjBqBE,aA2BxB+E,EAAsB,SAAC,GAAD,IAAGjF,EAAH,EAAGA,SAAH,OAC1B,6BACE,kBAAC,EAAD,KAAmBA,GACnB,kBAAC,EAAD,KAAkBA,KAQTkF,EAAO,kBAClB,kBAACnD,EAAD,KACE,kBAAC,EAAD,KACE,kBAACY,EAAA,EAAD,CAASwC,MAAO,CAAEC,QAAS,WAAaC,UAAQ,GAC9C,kBAACrD,EAAA,EAAD,CAAMsD,WAAS,EAACC,WAAS,EAACrD,cAAc,UACtC,kBAACF,EAAA,EAAKwD,IAAN,KACE,kBAACxD,EAAA,EAAKG,OAAN,CAAasD,MAAO,GAClB,kBAACrD,EAAA,EAAD,CAAQ7C,GAAG,KAAK4F,MAAO,CAAEO,SAAU,QAAnC,oCAGA,uBAAGP,MAAO,CAAEO,SAAU,WAAtB,4KAKA,kBAACtD,EAAA,EAAD,CAAQ7C,GAAG,KAAK4F,MAAO,CAAEO,SAAU,QAAnC,kCAGA,uBAAGP,MAAO,CAAEO,SAAU,WAAtB,qGAKF,kBAAC1D,EAAA,EAAKG,OAAN,CAAawD,QAAQ,QAAQF,MAAO,GAClC,kBAACG,EAAA,EAAD,CACEC,UAAQ,EACRC,SAAO,EACPtD,KAAK,QACL5C,IAAI,gE,mOC7GPmG,GAAmB,SAACC,EAAWC,GAA+B,IAAtBC,EAAqB,uDAAXtC,OAEvDuC,EAAeC,mBAMrBC,qBAAU,WACRF,EAAaG,QAAUL,IACtB,CAACA,IAEJI,qBACE,WAIE,GADoBH,GAAWA,EAAQK,iBACvC,CAGA,IAAMC,EAAgB,SAACC,GAAD,OAAWN,EAAaG,QAAQG,IAMtD,OAHAP,EAAQK,iBAAiBP,EAAWQ,GAG7B,WACLN,EAAQQ,oBAAoBV,EAAWQ,OAG3C,CAACR,EAAWE,KC7BHS,GAAW,WACtB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BnG,IACGC,KADH,UACW3C,EADX,oBACmD,CAC/CE,MAAOK,aAAauI,QAAQ,WAE7BlG,MAAK,SAACC,GACL+F,EAAQ/F,EAAIC,SAEbM,OAAM,SAACC,GACN0F,QAAQC,KAAK3F,GACbwF,EAAOxF,UAKF4F,GAAsB,SAACC,GAClC,OAAO,IAAIP,SAAQ,SAACC,EAASC,GAC3BnG,IACGC,KADH,UACW3C,EADX,mCACkE,CAC9DE,MAAOK,aAAauI,QAAQ,SAC5BI,cAEDtG,MAAK,SAACC,GACL+F,EAAQ/F,EAAIC,SAEbM,OAAM,SAACC,GACN0F,QAAQC,KAAK3F,GACbwF,EAAOxF,UAKF8F,GAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAC9BD,EAASE,OAAO,QAAS/I,aAAauI,QAAQ,UADhB,kBAGPpG,IAAMC,KAAN,UAAc3C,EAAd,6BAA+DoJ,GAHxD,cAGtBG,EAHsB,yBAIrB,CAAElJ,MAAO,KAAMyC,KAAMyG,IAJA,yDAMrB,CAAElJ,MAAM,EAAD,GAASyC,KAAM,OAND,yDAAH,sDAUhB0G,GAAW,uCAAG,WAAOC,EAAKC,EAAOC,EAAOC,GAA1B,iBAAAP,EAAA,6DAErBrJ,EAAS,CACX6J,iBAAkB,SAAAC,GAChBF,EAASE,EAAcC,OAAQJ,KAJV,kBASFjH,IAAMsH,IAAIP,EAAKC,EAAO1J,GATpB,cASjBuJ,EATiB,yBAUhB,CAAElJ,MAAO,KAAMyC,KAAMyG,IAVL,uCAYvBR,QAAQkB,IAAR,MAZuB,kBAahB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OAbN,yDAAH,4DAiBXoH,GAAgB,uCAAG,WAAOpH,EAAMqH,EAAMP,GAAnB,mBAAAP,EAAA,6DAExBD,EAAW,IAAIgB,SACrBC,OAAOC,KAAKxH,EAAKyH,QAAQC,SAAQ,SAAAzH,GAC/BqG,EAASE,OAAOvG,EAAKD,EAAKyH,OAAOxH,OAInCqG,EAASE,OAAO,OAAQa,GAEpBnK,EAAS,CACX6J,iBAAkB,SAAAC,GAChBF,EAASE,EAAcC,OAAQ,KAZL,kBAiBPrH,IAAMC,KAAKG,EAAK2G,IAAKL,EAAUpJ,GAjBxB,cAiBtBuJ,EAjBsB,yBAkBrB,CAAElJ,MAAO,KAAMyC,KAAMyG,IAlBA,yCAoB5BR,QAAQkB,IAAI,QAAZ,MApB4B,kBAqBrB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OArBD,0DAAH,0DA0BhB2H,GAAmB,uCAAG,WAAON,EAAMjB,EAAWwB,EAAOC,EAAUxK,EAAMoE,GAA/C,iBAAA8E,EAAA,6DAE7BD,EAAW,IAAIgB,UACVd,OAAO,WAAYqB,GAC5BvB,EAASE,OAAO,QAAS/I,aAAauI,QAAQ,UAC9CM,EAASE,OAAO,OAAQa,GACxBf,EAASE,OAAO,OAAQnJ,GACxBiJ,EAASE,OAAO,OAAQ/E,GACxB6E,EAASE,OAAO,YAAaJ,GAE7BE,EAASE,OAAO,QAASsB,KAAKC,UAAUH,IAVP,mBAaVhI,IAClBC,KADkB,UACV3C,EADU,+BACyCoJ,GAd/B,eAazBG,EAbyB,yBAexB,CAAElJ,MAAO,KAAMyC,KAAMyG,IAfG,yCAiB/BR,QAAQkB,IAAR,MAjB+B,kBAkBxB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OAlBE,0DAAH,gEAsBnBgI,GAAc,uCAAG,WAAOX,EAAMjB,EAAW/I,EAAMoE,GAA9B,iBAAA8E,EAAA,6DAExBD,EAAW,IAAIgB,UACVd,OAAO,QAAS/I,aAAauI,QAAQ,UAC9CM,EAASE,OAAO,OAAQa,GACxBf,EAASE,OAAO,OAAQnJ,GACxBiJ,EAASE,OAAO,OAAQ/E,GACxB6E,EAASE,OAAO,YAAaJ,GAPD,kBAULxG,IAClBC,KADkB,UACV3C,EADU,qCAC+CoJ,GAX1C,cAUpBG,EAVoB,yBAYnB,CAAElJ,MAAO,KAAMyC,KAAMyG,IAZF,yCAc1BR,QAAQkB,IAAR,MAd0B,kBAenB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OAfH,0DAAH,4DAmBdiI,GAAoB,uCAAG,WAAO7B,EAAW8B,GAAlB,iBAAA3B,EAAA,6DAE9BD,EAAW,IAAIgB,UACVd,OAAO,WAAY0B,GAC5B5B,EAASE,OAAO,QAAS/I,aAAauI,QAAQ,UAC9CM,EAASE,OAAO,YAAaJ,GALK,kBAQXxG,IAClBC,KADkB,UACV3C,EADU,qCAC+CoJ,GATpC,cAQ1BG,EAR0B,yBAUzB,CAAElJ,MAAO,KAAMyC,KAAMyG,IAVI,yCAYhCR,QAAQkB,IAAR,MAZgC,kBAazB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OAbG,0DAAH,wDAkBpBmI,GAAoB,uCAAG,WAAOd,EAAMjB,GAAb,iBAAAG,EAAA,6DAE9BD,EAAW,IAAIgB,UACVd,OAAO,OAAQa,GACxBf,EAASE,OAAO,YAAaJ,GAC7BE,EAASE,OAAO,QAAS/I,aAAauI,QAAQ,UALZ,kBAQXpG,IAClBC,KADkB,UACV3C,EADU,+BACyCoJ,GAT9B,cAQ1BG,EAR0B,yBAUzB,CAAElJ,MAAO,KAAMyC,KAAMyG,IAVI,yCAYhCR,QAAQkB,IAAR,MAZgC,kBAazB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OAbG,0DAAH,wDA8BpBoI,GAAgB,uCAAG,WAAO9B,GAAP,eAAAC,EAAA,6DAE9BD,EAASE,OAAO,QAAS/I,aAAauI,QAAQ,UAFhB,kBAIPpG,IAClBC,KADkB,UACV3C,EADU,mCAC6CoJ,GALtC,cAItBG,EAJsB,yBAMrB,CAAElJ,MAAO,KAAMyC,KAAMyG,IANA,uCAQ5BR,QAAQkB,IAAR,MAR4B,kBASrB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OATD,yDAAH,sDAahBqI,GAAa,uCAAG,WAAO/B,GAAP,eAAAC,EAAA,6DAE3BD,EAASE,OAAO,QAAS/I,aAAauI,QAAQ,UAFnB,kBAIJpG,IAClBC,KADkB,UACV3C,EADU,gCAC0CoJ,GALtC,cAInBG,EAJmB,yBAMlB,CAAElJ,MAAO,KAAMyC,KAAMyG,IANH,uCAQzBR,QAAQkB,IAAR,MARyB,kBASlB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OATJ,yDAAH,sDAabsI,GAAkB,uCAAG,WAAO3B,EAAKG,GAAZ,iBAAAP,EAAA,6DAG5BrJ,EAAS,CACXqL,mBAAoB,SAAAvB,GAClBF,EAASE,IAEXwB,aAAc,QAPgB,kBAWT5I,IAAM6I,IAAI9B,EAAKzJ,GAXN,cAWxBuJ,EAXwB,yBAYvB,CAAElJ,MAAO,KAAMyC,KAAMyG,EAAOzG,OAZL,uCAc9BiG,QAAQkB,IAAI,QAAZ,MAd8B,kBAevB,CAAE5J,MAAM,EAAD,GAASyC,KAAM,OAfC,yDAAH,wDAkClB0I,GAAe,SAAC9J,EAAM+J,GACjC,OAAO,IAAI9C,SAAQ,SAACC,EAASC,GAC3BnG,IACGC,KADH,UACW3C,EADX,gBAC+C,CAC3C0B,OACA+J,YACAvL,MAAOK,aAAauI,QAAQ,WAE7BlG,MAAK,SAACC,GACL+F,EAAQ/F,EAAIC,SAEbM,OAAM,SAACC,GACN0F,QAAQC,KAAK3F,GACbwF,EAAOxF,UAKFqI,GAAgB,WAC3B,OAAO,IAAI/C,SAAQ,SAACC,EAASC,GAC3BnG,IACGC,KADH,UACW3C,EADX,iBACgD,CAC5CE,MAAOK,aAAauI,QAAQ,WAE7BlG,MAAK,SAACC,GACL+F,EAAQ/F,EAAIC,SAEbM,OAAM,SAACC,GACN0F,QAAQC,KAAK3F,GACbwF,EAAOxF,UAKFsI,GAAa,SAACF,GACzB,OAAO,IAAI9C,SAAQ,SAACC,EAASC,GAC3BnG,IACGC,KADH,UACW3C,EADX,aAC4C,CACxCE,MAAOK,aAAauI,QAAQ,SAC5B2C,cAED7I,MAAK,SAACC,GACL+F,EAAQ/F,EAAIC,SAEbM,OAAM,SAACC,GACN0F,QAAQC,KAAK3F,GACbwF,EAAOxF,UC5RFuI,GAET,yEAFSA,GAIT,6EAJSA,GAMT,4EANSA,GASC,wDATDA,GAWT,mFAXSA,GAYG,sDAZHA,GAcT,kFAdSA,GAeG,sDAfHA,GAiBT,2EAjBSA,GAqBT,+EArBSA,GAuBT,kFAvBSA,GAwBJ,oEAxBIA,GAyBJ,oEAzBIA,GA0BL,kEA1BKA,GA4BT,qFA5BSA,GA8BT,mFA9BSA,GAgCT,kFAhCSA,GAkCT,yFAGSC,GAAgB,CAC3BC,QACE,uFACFC,IACE,mFACFC,MAAO,qEACPC,KAAM,qEACNC,KAAM,mEACNC,MACE,sFACFC,YACE,oFACFjC,KACE,mFACFkC,IACE,6EACFC,YACE,oFACFC,WACE,mFACFC,IACE,4EACFC,gBAAiB,kDACjBC,OACE,2FC3DSC,GAAuB,SAAC3L,GACnC,OAAOA,EAAMb,KAAKyM,SAAS,eACvBhB,GACA5K,EAAMb,KAAKyM,SAAS,SACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,UAAY5L,EAAMb,KAAKyM,SAAS,OACpDhB,GACA5K,EAAMb,KAAKyM,SAAS,eAAiB5L,EAAMb,KAAKyM,SAAS,gBACzDhB,GACA5K,EAAMb,KAAKyM,SAAS,OACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,YACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,QACpB5L,EAAMb,KAAKyM,SAAS,QACpB5L,EAAMb,KAAKyM,SAAS,cACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,SACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,SACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,SACpB5L,EAAMb,KAAKyM,SAAS,iBACpB5L,EAAMb,KAAKyM,SAAS,QACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,gBACpB5L,EAAMb,KAAKyM,SAAS,QACpB5L,EAAMb,KAAKyM,SAAS,WACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,eACpB5L,EAAMb,KAAKyM,SAAS,wBACpB5L,EAAMb,KAAKyM,SAAS,SACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,mBACpBhB,GACA5K,EAAMb,KAAKyM,SAAS,OACpBhB,IACA5K,EAAMb,KAAKyM,SAAS,gBACpBhB,KAIOiB,GAAwB,SAAC7L,GACpC,OAAOA,EAAMb,KAAKyM,SAAS,gBAEvB5L,EAAMb,KAAKyM,SAAS,SADpB5L,EAAM8L,KAGN9L,EAAMb,KAAKyM,SAAS,UAAY5L,EAAMb,KAAKyM,SAAS,OACpDf,GAAcS,YACdtL,EAAMb,KAAKyM,SAAS,eAAiB5L,EAAMb,KAAKyM,SAAS,gBACzDf,GAAcU,WACdvL,EAAMb,KAAKyM,SAAS,OACpBf,GAAcW,IACdxL,EAAMb,KAAKyM,SAAS,YACpBf,GAAcQ,IACdrL,EAAMb,KAAKyM,SAAS,QACpB5L,EAAMb,KAAKyM,SAAS,QACpB5L,EAAMb,KAAKyM,SAAS,cACpBf,GAAcC,QACd9K,EAAMb,KAAKyM,SAAS,SACpBf,GAAcG,MACdhL,EAAMb,KAAKyM,SAAS,SACpBf,GAAckB,MACd/L,EAAMb,KAAKyM,SAAS,SACpB5L,EAAMb,KAAKyM,SAAS,iBACpB5L,EAAMb,KAAKyM,SAAS,QACpBf,GAAcK,KACdlL,EAAMb,KAAKyM,SAAS,gBACpB5L,EAAMb,KAAKyM,SAAS,QACpB5L,EAAMb,KAAKyM,SAAS,WACpBf,GAAcO,YACdpL,EAAMb,KAAKyM,SAAS,eACpB5L,EAAMb,KAAKyM,SAAS,wBACpB5L,EAAMb,KAAKyM,SAAS,SACpBf,GAAca,OACd1L,EAAMb,KAAKyM,SAAS,mBACpBf,GAAcM,MACdnL,EAAMb,KAAKyM,SAAS,OACpBf,GAAcE,KACd/K,EAAMb,KAAKyM,SAAS,gBACpBf,GAAc1B,OAIP6C,GAA2B,SAAC7C,GACvC,IAAI8C,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUxJ,GAQxB,MAPoB,CAClByJ,gBAAgB,OAAD,OAASzJ,EAAEC,OAAO2F,OAAlB,KACf8D,iBAAkB,YAClBC,eAAgB,QAChB9F,MAAO,OACP+F,OAAQ,SAIZN,EAAOO,cAAcrD,IClGVsD,GAAsB,CACjC,cACA,aACA,cACA,qBACA,gBACA,gBACA,cACA,cACA,WACA,gBAGWC,GAAwB,CACnC,aACA,OACA,QACA,cACA,WACA,WACA,UACA,YACA,UACA,WACA,cACA,WC2FWC,GAAYzL,aAxGR,SAAClB,GAChB,IAAM4M,EAAW5M,EAAM6M,OAAS7M,EAAM8M,GAAK,IAAM9M,EAAM6M,OAAS7M,EAAM8M,GAChEC,EAAc,CAClBX,gBAAgB,OAAD,OAASpM,EAAM8L,KAAf,KACfO,iBAAkB,YAClBC,eAAgB,QAChB9F,MAAO,OACP+F,OAAQ,QAEV,OACE,yBAAKnM,UAAU,YAAY0M,GAAI,kBAAoBF,GAChD5M,EAAMb,KAAKyM,SAAS,SACnB,yBACExL,UAAU,yBACV0M,GAAI,mBAAqBF,GAEzB,yBACExM,UAAU,QACV0M,GAAI,cAAgBF,EACpB1G,MAAO6G,KAIX,yBAAK3M,UAAU,aAAa0M,GAAI,mBAAqBF,GACnD,yBACEjM,IAAKkL,GAAsB7L,GAC3BY,IAAKZ,EAAMU,KACXN,UAAU,OACV0M,GAAI,aAAeF,KAIzB,yBAAKxM,UAAU,cAAc0M,GAAI,oBAAsBF,GACrD,yBAAKxM,UAAU,WAAW0M,GAAI,iBAAmBF,GAC/C,yBACEjM,IAAKgL,GAAqB3L,GAC1BY,IAAKZ,EAAMU,KACXN,UAAU,OACV0M,GAAI,aAAeF,KAGvB,yBAAKxM,UAAU,WAAW0M,GAAI,iBAAmBF,GAC/C,kBAAC,KAAD,CACEI,QACE,4BAAQ5M,UAAU,UAAU0M,GAAI,gBAAkBF,GAC/C5M,EAAMU,MAGXuM,SAAS,aACTC,GAAG,QACHC,OAAO,GAEP,6BAAMnN,EAAMU,QAGf0M,iBAA6B,IAAbpN,EAAM8M,IACrB,yBACE1M,UAAU,WACV0M,GAAI,iBAAmB9M,EAAM8M,GAAK,UAClChM,QAAS,kBAAMd,EAAMqN,iBAErB,yBACEC,MAAM,6BACN9G,MAAM,OACN+G,QAAQ,YACRC,QAAQ,MACRjB,OAAO,QAEP,uBAAGO,GAAG,YACJ,0BACE5G,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,gKAEJ,0BACE3H,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,8KAEJ,0BACE3H,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,sLA0JPC,GAAY5M,aA9IR,SAAClB,GAChB,IAcoB+N,EAddC,EAAWC,KAAO,IAAIhM,MAAQiM,OAAO,gBACrCC,EAAYnO,EAAMuD,KAClB6K,EACW,WAAfpO,EAAMb,KAAoB,WAAaa,EAAM8M,GAAK,SAAW9M,EAAM8M,GAC/DF,EAAW5M,EAAM6M,OACnBuB,EAAgB,IAAMpO,EAAM6M,OAC5BuB,EAYJ,OACE,yBACEhO,UAAU,YACV0M,GAAI,YAAcF,EAClByB,cAAe,iBACE,WAAfrO,EAAMb,OACLiO,iBACDpN,EAAMsO,QAAQC,KAAK,CACjBC,SACkE,MAAhExO,EAAMyO,SAASD,SAASxO,EAAMyO,SAASD,SAASE,OAAS,GAAzD,UACO1O,EAAMyO,SAASD,SADtB,YACkCxO,EAAMU,MADxC,UAEOV,EAAMyO,SAASD,UAFtB,OAEiCxO,EAAMU,MACzCU,MAAO,CAAEV,KAAMV,EAAMU,KAAMoM,GAAI9M,EAAM8M,QAIzC,yBAAK1M,UAAU,UAAU0M,GAAI,UAAYF,GACvC,yBAAKxM,UAAU,WAAW0M,GAAI,WAAaF,GACzB,WAAf5M,EAAMb,MACL,yBACEwB,IAAKgL,GAAqB3L,GAC1BY,IAAKZ,EAAMU,KACXN,UAAU,OACV0M,GAAI,OAASF,IAGD,WAAf5M,EAAMb,MACL,yBACEwP,EAAE,MACFC,EAAE,MACFC,UAAU,QACVtB,QAAQ,YACRhB,OAAO,OACP/F,MAAM,OACNmH,KAAK,WAEL,2BACE,0BAAME,EAAE,gGACR,0BAAMA,EAAE,gBAAgBF,KAAK,YAKrC,yBAAKvN,UAAU,WAAW0M,GAAI,WAAaF,GACzC,kBAAC,KAAD,CACEI,QACE,4BAAQ5M,UAAU,UAAU0M,GAAI,UAAYF,GACzC5M,EAAMU,MAGXuM,SAAS,aACTC,GAAG,QACHC,OAAO,GAEP,6BAAMnN,EAAMU,SAIjB0M,iBAA6B,IAAbpN,EAAM8M,IACrB,yBACE1M,UAAU,WACV0M,GAAI,WAAasB,EAAgB,UACjCtN,QAAS,kBAAMd,EAAMqN,iBAErB,yBACEC,MAAM,6BACN9G,MAAM,OACN+G,QAAQ,YACRC,QAAQ,MACRjB,OAAO,QAEP,uBAAGO,GAAG,YACJ,0BACE5G,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,gKAEJ,0BACE3H,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,8KAEJ,0BACE3H,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,kLAMVT,iBACA,yBAAKhN,UAAU,WAAW0M,GAAI,WAAaF,GACzC,8BAAO5M,EAAM8O,MAAQ9O,EAAM8O,MAAQ,QAGrC1B,iBACA,yBAAKhN,UAAU,cAAc0M,GAAI,cAAgBF,GAC/C,8BACG5M,EAAM+O,eAnHGhB,EAmHwB/N,EAAM+O,cAlHzCd,KAAOF,GAAMG,OAAO,iBAkHsCF,KAI7DZ,iBACA,yBAAKhN,UAAU,UAAU0M,GAAI,UAAYF,GACvC,8BAAO5M,EAAMuD,KAhID,SAACyL,GAEnB,GAAc,IAAVA,EAAa,MAAO,SACxB,IAAIC,EAAIC,SAASC,KAAKC,MAAMD,KAAKlG,IAAI+F,GAASG,KAAKlG,IAAI,QACvD,OAAOkG,KAAKE,MAAML,EAAQG,KAAKG,IAAI,KAAML,GAAI,GAAK,IAHtC,CAAC,QAAS,KAAM,KAAM,KAAM,MAGsBA,GA4HpCM,CAAYpB,GAAa,UAyG1CqB,GAActO,aAjGR,SAAClB,GAClB,OACE,yBACEI,UAAU,cACV0M,GAAI,sBAAwB9M,EAAM8M,GAClCuB,cAAe,YACZjB,iBACCpN,EAAMsO,QAAQC,KAAK,CACjBC,SAEE,MADAxO,EAAMyO,SAASD,SAASxO,EAAMyO,SAASD,SAASE,OAAS,GAAzD,UAEO1O,EAAMyO,SAASD,SAFtB,YAEkCxO,EAAMU,MAFxC,UAGOV,EAAMyO,SAASD,UAHtB,OAGiCxO,EAAMU,MACzCU,MAAO,CAAEV,KAAMV,EAAMU,KAAMoM,GAAI9M,EAAM8M,QAI3C,yBAAK1M,UAAU,WAAW0M,GAAI,mBAAqB9M,EAAM8M,IACvD,yBACE6B,EAAE,MACFC,EAAE,MACFC,UAAU,QACVtB,QAAQ,YACRhB,OAAO,OACP/F,MAAM,OACNmH,KAAK,WAEL,2BACE,0BAAME,EAAE,gGACR,0BAAMA,EAAE,gBAAgBF,KAAK,YAInC,yBAAKvN,UAAU,WAAW0M,GAAI,mBAAqB9M,EAAM8M,IACvD,kBAAC,KAAD,CACEE,QACE,4BAAQ5M,UAAU,UAAU0M,GAAI,kBAAoB9M,EAAM8M,IACvD9M,EAAMU,MAGXuM,SAAS,aACTC,GAAG,QACHC,OAAO,EACPsC,aAAa,MAEb,6BAAMzP,EAAMU,QAGf0M,iBAA6B,IAAbpN,EAAM8M,IACrB,yBACE1M,UAAU,WACV0M,GAAI,mBAAqB9M,EAAM8M,GAC/BhM,QAAS,kBAAMd,EAAMqN,iBAErB,yBACEC,MAAM,6BACN9G,MAAM,OACN+G,QAAQ,YACRC,QAAQ,MACRjB,OAAO,QAEP,uBAAGO,GAAG,YACJ,0BACE5G,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,gKAEJ,0BACE3H,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,8KAEJ,0BACE3H,MAAO,CACLuH,OAAQ,OACRC,SAAU,UACVC,KAAM,UACNC,YAAa,GAEfC,EAAE,qLAYL6B,GAAc,SAAC1P,GAC1B,OACE,yBAAKI,UAAU,oBACb,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CAAcjB,KAAK,UAAUiE,MAAM,OAAOhD,UAAU,aAErDJ,EAAMmJ,KAAKhK,KAAKyM,SAAS,SACxB,yBACExL,UAAU,0BAEV,yBACEA,UAAU,QACV8F,MAAO8F,GAAyBhM,EAAMmJ,SAI1C,yBAAK/I,UAAU,cACb,yBACEO,IAAKkL,GAAsB7L,EAAMmJ,MACjCvI,IAAKZ,EAAMmJ,KAAKzI,KAChBN,UAAU,UAIhB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YACb,yBACEO,IAAKgL,GAAqB3L,EAAMmJ,MAChCvI,IAAKZ,EAAMmJ,KAAKzI,KAChBN,UAAU,UAGd,yBAAKA,UAAU,YACb,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,WACfJ,EAAMmJ,KAAKzI,MAGhBuM,SAAS,aACTC,GAAG,QACHC,OAAO,GAEP,6BAAMnN,EAAMmJ,KAAKzI,W,+BC1VvBiP,GAAc,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAY1E,EAAiB,EAAjBA,KAAM/L,EAAW,EAAXA,KAKvC,OACE,yBAAKiB,UAAU,qBACb,+BAAQ8K,IACG,aAAT/L,GAAgC,UAATA,IAAqB,uBAAG2B,QAP1B,WACzB8O,IACAC,iBAAOC,eAAe,CAAEC,YAAa,mBAKW,YAIpDC,KAAMC,YAEC,IAAMC,GAAQ,SAAClQ,GACpBmQ,KAAMC,cAAc,SACpB,IAAMC,EAAUlJ,mBACVmJ,EAAYnJ,mBACZoJ,EAAWpJ,mBACXqJ,EAAarJ,mBACbsJ,EAAetJ,mBACfuJ,EAAgBvJ,mBAPQ,EASU5E,oBAAS,GATnB,mBASvBoO,EATuB,KASPC,EATO,OAUiBrO,oBAAS,GAV1B,mBAUvBsO,EAVuB,KAUJC,EAVI,OAWqBvO,oBAAS,GAX9B,mBAWvBwO,EAXuB,KAWFC,EAXE,OAYezO,oBAAS,GAZxB,mBAYvB0O,EAZuB,KAYLC,EAZK,OAaM3O,oBAAS,GAbf,mBAavB4O,EAbuB,KAaTC,EAbS,OAcK7O,oBAAS,GAdd,mBAcvB8O,EAduB,KAcVC,EAdU,OAeS/O,oBAAS,GAflB,mBAevBgP,EAfuB,KAeRC,EAfQ,OAgBGjP,oBAAS,GAhBZ,oBAgBvBkP,GAhBuB,MAgBXC,GAhBW,SAiBcnP,oBAAS,GAjBvB,qBAiBvBoP,GAjBuB,MAiBPC,GAjBO,SAkBKrP,oBAAS,GAlBd,qBAkBvBsP,GAlBuB,MAkBVC,GAlBU,SAmBWvP,oBAAS,GAnBpB,qBAmBvBwP,GAnBuB,MAmBPC,GAnBO,SAoBSzP,oBAAS,GApBlB,qBAoBvB0P,GApBuB,MAoBRC,GApBQ,SAqBC3P,oBAAS,GArBV,qBAqBvB4P,GArBuB,MAqBXC,GArBW,SAsBK7P,mBAAS,GAtBd,qBAsBvB8P,GAtBuB,MAsBXC,GAtBW,SAuBgB/P,mBAAS,GAvBzB,qBAuBvBgQ,GAvBuB,MAuBLC,GAvBK,SAwBajQ,mBAAS,GAxBtB,qBAwBvBkQ,GAxBuB,MAwBPC,GAxBO,SAyBoBnQ,mBAAS,GAzB7B,qBAyBvBoQ,GAzBuB,MAyBLC,GAzBK,SA2BkBrQ,oBAAS,GA3B3B,qBA2BvBsQ,GA3BuB,MA2BHC,GA3BG,SA4BcvQ,oBAAS,GA5BvB,qBA4BvBwQ,GA5BuB,MA4BLC,GA5BK,SA8BezQ,mBAAS,IA9BxB,qBA8BvB0Q,GA9BuB,MA8BNC,GA9BM,SA+BmB3Q,mBAAS,IA/B5B,qBA+BvB4Q,GA/BuB,MA+BJC,GA/BI,SAgCJ7Q,mBAAS,IAhCL,qBAgCvB8Q,GAhCuB,MAgChBC,GAhCgB,SAiCO/Q,mBAAS,CAC5C,CACEuJ,KAAMjB,GAAcY,gBACpB8H,aAAc,oBACd7S,KAAM,kBACN6C,KAAM,GACNuJ,GAAI,KAvCsB,qBAiCvB0G,GAjCuB,MAiCVC,GAjCU,SA0CKlR,mBAAS,IA1Cd,qBA0CvBmR,GA1CuB,MA0CXC,GA1CW,SA2CWpR,mBAAS,IA3CpB,qBA2CvBqR,GA3CuB,MA2CRC,GA3CQ,SA4CetR,mBAAS,IA5CxB,qBA4CvBuR,GA5CuB,MA4CNC,GA5CM,SA6CaxR,mBAAS,mBA7CtB,qBA6CvByR,GA7CuB,MA6CLC,GA7CK,SA8CA1R,mBAAS,IA9CT,qBA8CvB2R,GA9CuB,MA8CdC,GA9Cc,MA+C9B3D,EAAWnJ,QAAU6M,GAErB,IAAME,GAAajF,KAAKG,IAAI,KAAM,GAC5B+E,GAAc,EAAIlF,KAAKG,IAAI,KAAM,GACjCgF,GAAQ,EAAInF,KAAKG,IAAI,KAAM,GAE7BiF,GAAM,IAAIC,KACVC,GAAc,KAElBrN,qBAAU,WACRwJ,GAAc,KACb,CAACsD,KAEJ9M,qBAAU,WACRM,KAAW9F,MAAK,SAACC,GACf,GAAIA,EAAI6M,OAAS,EAAG,CAClB,IAAMgG,EAAY,GAClB7S,EAAI2H,SAAQ,SAACmL,EAAM1F,GACbpN,EAAI6M,OAAS,EACXO,EAAIpN,EAAI6M,OAAS,GACnBgG,EAAUnG,KAAKoG,GAGb1F,EAAIpN,EAAI6M,QACVgG,EAAUnG,KAAKoG,MAIrBlB,GAAciB,GACd,IAAME,EAAW,CACf,CACE9I,KAAMjB,GAAcY,gBACpB8H,aAAc,oBACd7S,KAAM,kBACN6C,KAAM,GACNuJ,GAAI,IAEN+H,OAAOhT,GACTyR,GAASsB,QAETtB,GAASzR,GAEX8I,GAAW,GAAG/I,MAAK,SAACC,GAClBsS,GAAWtS,WAGd,IAEHuF,qBAAU,WACJiK,GACF3J,KAAW9F,MAAK,SAACC,GACf,GAAIoR,GAAgBvE,OAAS,EAAG,CAC9B,IAAK,IAAI/F,EAAQ,EAAGA,EAAQsK,GAAgBvE,OAAQ/F,IAClD,IAAK,IAAIsG,EAAIpN,EAAI6M,OAAS,EAAGO,GAAK,EAAGA,IACnC,GAAIpN,EAAIoN,GAAGvO,OAASuS,GAAgBtK,GAAOjI,MAAQwO,SAASrN,EAAIoN,GAAG1L,QAAU2L,SAAS+D,GAAgBtK,GAAOpF,MAAO,CAClH0P,GAAgBtK,GAAOmM,UAAW,EAClC,MAIN5B,GAAkBD,IAEpB,GAAIpR,EAAI6M,OAAS,EAAG,CAClB,IAAMgG,EAAY,GAClB7S,EAAI2H,SAAQ,SAACmL,EAAM1F,GACbpN,EAAI6M,OAAS,EACXO,EAAIpN,EAAI6M,OAAS,GACnBgG,EAAUnG,KAAKoG,GAGb1F,EAAIpN,EAAI6M,QACVgG,EAAUnG,KAAKoG,MAIrBlB,GAAciB,GACd,IAAME,EAAW,CACf,CACE9I,KAAMjB,GAAcY,gBACpB8H,aAAc,oBACd7S,KAAM,kBACN6C,KAAM,GACNuJ,GAAI,IAEN+H,OAAOhT,GACTyR,GAASsB,QAETtB,GAASzR,GAEX8I,GAAW,GAAG/I,MAAK,SAACC,GAClB,GAAIsR,GAAkBzE,OAAS,EAAG,CAChC,IAAK,IAAI/F,EAAQ,EAAGA,EAAQwK,GAAkBzE,OAAQ/F,IACpD,IAAK,IAAIsG,EAAIpN,EAAI6M,OAAS,EAAGO,GAAK,EAAGA,IACnC,GAAIpN,EAAIoN,GAAGvO,OAASyS,GAAkBxK,GAAOjI,KAAM,CACjDyS,GAAkBxK,GAAOmM,UAAW,EACpC,MAIN1B,GAAoBD,IAEtBgB,GAAWtS,WAIhB,CAACwP,IAEJjK,qBAAU,WACRoL,GAAkBD,GAAmBF,MACpC,CAACA,KAEJ,IAAM0C,GAAsBC,uBAC1B,SAACrS,GACC,GAAiB,IAAbA,EAAEsS,QAAiB7H,gBAkDrBwE,IAAkB,QAjDlB,GACEnF,GAAoBb,SAASjJ,EAAEC,OAAOkK,KACtCL,GAAoBb,SAASjJ,EAAEC,OAAOsS,aAAa,eAEnDtD,IAAkB,GAClBF,IAAW,QACN,GAAIhF,GAAsBd,SAASjJ,EAAEC,OAAOxC,WAAY,CAC7D,IAAM+U,EAAMxS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC7BjW,EAAOwD,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC9BvI,EAASlK,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAClCzS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GACvB,GACJ,GAAY,MAARD,EAGF,GAFAvD,IAAkB,GAClBF,IAAW,GACE,SAATvS,EAEF,GADA4U,GAAkB,IACH,WAAXlH,EAAqB,CACvB,IAAM1D,EAAOkK,GAAMgC,MAAK,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MACvDtB,GAAgB1K,GAChBwK,GAAa,QACR,CACL,IAAMxK,EAAOqK,GAAY6B,MACvB,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MAEjCxB,GAAaxK,GACb0K,GAAgB,QAEb,CACLA,GAAgB,IAChBF,GAAa,IACb,IAAM2B,EAAS9E,EAAWnJ,QAAQgO,MAChC,SAACC,GAAD,OAAYA,EAAOxI,KAAOoC,SAASiG,MAErCpB,GAAkBuB,QAGpB1D,IAAkB,GAClBiC,GAAgB,IAChBF,GAAa,IACbI,GAAkB,SAGpBnC,IAAkB,GAClBiC,GAAgB,IAChBF,GAAa,IACbI,GAAkB,MAMxB,CAACtC,GAAY4B,KAGTkC,GAAkBP,uBACtB,SAACrS,GACCyP,IAAUD,IACV,IAAIqD,EAAgB,GAChBC,EAAkB,GAClBtD,IACFqD,EAAgBnC,GAAMqC,MAAK,SAACrN,EAAGsN,GAAJ,OAAUtN,EAAE3H,KAAKkV,cAAcD,EAAEjV,SAC5D+U,EAAkBvB,GAAQwB,MAAK,SAACrN,EAAGsN,GAAJ,OAAUtN,EAAE3H,KAAKkV,cAAcD,EAAEjV,WAEhE8U,EAAgBnC,GAAMqC,MAAK,SAACrN,EAAGsN,GAAJ,OAAUA,EAAEjV,KAAKkV,cAAcvN,EAAE3H,SAC5D+U,EAAkBvB,GAAQwB,MAAK,SAACrN,EAAGsN,GAAJ,OAAUA,EAAEjV,KAAKkV,cAAcvN,EAAE3H,UAElE4S,GAASkC,GACTrB,GAAWsB,KAEb,CAACtD,GAAYkB,GAAOa,KAGhB2B,GAAiB,SAAC1W,GACT,eAATA,GACF+R,GAAiB,GAEN,gBAAT/R,GACFkR,EAAQhJ,QAAQyO,QAEL,kBAAT3W,IACFmR,EAAUjJ,QAAQa,WAAY,EAC9BoI,EAAUjJ,QAAQ0O,iBAAkB,EACpCzF,EAAUjJ,QAAQyO,UAIhBE,GAAU,SAACxO,GACf,GAAKA,EAAMyO,iBAAX,CACA,IAAMlN,EAASvB,EAAMuB,OAAS2H,EAAcrJ,QACxC6O,EAAwB/G,KAAKC,MAAMrG,EAAS0H,EAAapJ,QAAU,KACvEuL,GAAsBsD,KAGlBC,GAAe,SAACC,GAA6B,IAAvB1V,EAAsB,uDAAf,WAE3B2V,EAAUC,IAAIC,gBAAgBH,GAG9BI,EAAOC,SAASC,cAAc,KAGpCF,EAAKG,KAAON,EACZG,EAAKI,SAAWlW,EAGhB+V,SAASI,KAAKC,YAAYN,GAE1B,IAAMO,EAAe,SAAfA,IACJnX,YAAW,WACT0W,IAAIU,gBAAgBX,GACpBG,EAAK/O,oBAAoB,QAASsP,KACjC,MAGLP,EAAKlP,iBAAiB,QAASyP,GAAc,GAI7CP,EAAKS,cACH,IAAIC,WAAW,QAAS,CACtBC,SAAS,EACTC,YAAY,EACZC,KAAM1S,UAKV8R,SAASI,KAAKS,YAAYd,IAGtBe,GAAkB,uCAAG,WAAOpY,EAAMqY,GAAb,qBAAAnP,EAAA,sEACJ+B,GAAmBoN,EAAW/O,IAAKuN,IAD/B,QACnBzN,EADmB,QAEdlJ,MACTyT,IAAkB,IAGlBpC,EAAcrJ,QAAUqJ,EAAcrJ,QAAUkB,EAAOzG,KAAKyB,KAExDkU,EAAWD,EAAWrY,KACtBuY,EAAWF,EAAWzV,IACtBqU,EAAO,IAAIuB,KAAK,CAACpP,EAAOzG,MAAO,CAAE3C,KAAMsY,IAC9B,WAATtY,EAAmBsV,GAAYtL,KAAKuO,EAAUtB,GAChC,SAATjX,GAAiBgX,GAAaC,EAAMsB,IAZtB,2CAAH,wDAgBlBE,GAAW,uCAAG,WAAOjV,EAAGb,GAAV,qCAAAuG,EAAA,yDACD,eAAbvG,EAAK+V,KACP3G,GAAiB,GAEF,gBAAbpP,EAAK+V,KACPxH,EAAQhJ,QAAQyO,QAED,kBAAbhU,EAAK+V,MACPvH,EAAUjJ,QAAQa,WAAY,EAC9BoI,EAAUjJ,QAAQ0O,iBAAkB,EACpCzF,EAAUjJ,QAAQyO,SAEH,aAAbhU,EAAK+V,IAZS,oBAahBjF,GAAsB,GACtBE,IAAkB,IACdc,KAAiBA,GAAc9H,KAfnB,wBAgBdkF,GAAoB,GACpBQ,GAAc,IAEVpJ,EAAW,IAAIgB,UACVd,OAAO,OAAQsL,GAAc9G,IApBxB,UAsBO3C,GAAc/B,GAtBrB,QAsBRG,EAtBQ,OAuBRuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAAS0E,GAAcrQ,MAC9CmN,EAAcrJ,QAAU,EACf4H,EAAI,EA3BC,aA2BEA,EAAI6I,EAAYpJ,QA3BlB,kCA4BN6I,GAAmB,OAAQO,EAAY7I,IA5BjC,QA2B0BA,IA3B1B,wBA8BduC,GAAc,GA9BA,YAgCZkC,KAAcA,GAAW5H,KAhCb,wBAiCdkF,GAAoB,GACpBQ,GAAc,IAEVpJ,EAAW,IAAIgB,UACVd,OAAO,OAAQoL,GAAW5G,IArCrB,UAuCO3C,GAAc/B,GAvCrB,QAuCRG,EAvCQ,OAwCRuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAASwE,GAAWnQ,MAC3CmN,EAAcrJ,QAAU,EACf4H,EAAI,EA5CC,aA4CEA,EAAI6I,EAAYpJ,QA5ClB,kCA6CN6I,GAAmB,OAAQO,EAAY7I,IA7CjC,QA4C0BA,IA5C1B,wBA+CduC,GAAc,GA/CA,YAiDZsC,KAAmBA,GAAgBhH,GAjDvB,wBAkDdkE,GAAoB,GACpBQ,GAAc,IACVpJ,EAAW,IAAIgB,UACVd,OAAO,SAAUwL,GAAgBhH,IAE1C2H,GAAcF,GAAIe,OAAOxB,GAAgBpT,MAvD3B,UAyDOwJ,GAAiB9B,GAzDxB,QAyDRG,EAzDQ,OA0DRuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YACrCrH,EAAapJ,QAAUkB,EAAOzG,KAAKA,KAAKiW,WACxCrH,EAAcrJ,QAAU,EAEf4H,EAAI,EA9DC,aA8DEA,EAAI6I,EAAYpJ,QA9DlB,kCA+DN6I,GAAmB,SAAUO,EAAY7I,IA/DnC,QA8D0BA,IA9D1B,wBAkEdsF,GAAIyD,cAAc,CAAE7Y,KAAM,SACvByC,MAAK,SAAUqW,GACdC,kBAAOD,EAASnE,GAAgBpT,MAChC8Q,GAAc,MArEJ,4CAAH,wDAwFb2G,GAAe,EACbC,GAAU,uCAAG,WAAO1P,EAAOC,EAAOC,GAArB,qBAAAP,EAAA,6DACbD,EAAW,IAAIgB,UACVd,OAAO,OAAQI,EAAMS,MAC9Bf,EAASE,OAAO,QAASI,EAAM2P,OAC/BjQ,EAASE,OAAO,SAAUI,EAAM4P,QAChClQ,EAASE,OAAO,YAAaI,EAAMR,WACnCE,EAASE,OAAO,eAAgB,eANf,SAQCH,GAAiBC,GARlB,cAQXvG,EARW,QASTxC,OAAO2T,IAAgB,GATd,UAWMxK,GACrB3G,EAAIC,KAAKA,KAAK0V,WACd9O,EAAM5G,KACN6G,EACAC,GAfe,eAWX2P,EAXW,QAiBJlZ,OAAO2T,IAAgB,GAChCwF,EAAOD,EAASzW,KAAK2W,QAAd,KAlBM,kBAmBV,CACL,KAAQD,EAAKE,UAAU,EAAGF,EAAK9J,OAAS,GACxC,WAAchG,EAAM4P,SArBL,4CAAH,0DAyBVK,GAAe,uCAAG,WAAOC,EAAWC,GAAlB,yBAAAxQ,EAAA,6DAElBD,EAAW,IAAIgB,UACVd,OAAO,OAAQsQ,EAAUzP,MAClCf,EAASE,OAAO,eAAgB,cAChCF,EAASE,OAAO,WAAYsQ,EAAUzP,KAAKhK,MAC3CiJ,EAASE,OAAO,YAAasQ,EAAU1Q,WAEnC4Q,EAAW,IAAIC,MAAM,GACnBC,EAAmB,SAACjQ,EAAQJ,GAC5BI,EAAS6P,EAAUzP,KAAK5F,OAC1BwF,EAAS6P,EAAUzP,KAAK5F,MAE1BuV,EAASnQ,GAASI,EAClB,IAAMkQ,EAAMH,EAASI,QAAO,SAAC7Q,EAAGsN,GAAJ,OAAUtN,EAAIsN,IAAG,GAC7C5N,QAAQkB,KAAKkP,GAAec,GAAOJ,EAAgB,KACnDnG,GAAiByG,YAAYhB,GAAec,GAAOJ,EAAgB,KAAKO,QAAQ,KAhB5D,SAmBJjR,GAAiBC,GAnBb,cAmBhBvG,EAnBgB,QAoBdxC,OAAO2T,IAAgB,GApBT,UAqBK9J,GAAiBrH,EAAIC,KAAKA,KAAK0V,WAAYoB,EAAUzP,KAAM6P,GArBhE,eAqBhBK,EArBgB,QAsBLha,OAAO2T,IAAgB,GACxCjL,QAAQkB,IAAIoQ,GAvBU,UAyBCvP,GAAe8O,EAAUzP,KAAKzI,KAAMkY,EAAU1Q,UAAW0Q,EAAUzP,KAAKhK,KAAMyZ,EAAUzP,KAAK5F,MAzB9F,eAyBhB+V,EAzBgB,QA0BTja,OAAO2T,IAAgB,GA1Bd,kBA2BfsG,EAASxX,MA3BM,4CAAH,wDA8BfyX,GAAY,uCAAG,WAAOC,EAAQX,GAAf,yBAAAxQ,EAAA,6DACfqB,EAAQ,GAERhB,EAAQ8Q,EAAO,GAEfV,EAAW,IAAIC,MAAMS,EAAO9K,QAC1BsK,EAAmB,SAACjQ,EAAQJ,GAChCmQ,EAASnQ,GAASI,EAClB,IAAMkQ,EAAMH,EAASI,QAAO,SAAC7Q,EAAGsN,GAAJ,OAAUtN,EAAIsN,IAAG,GAC7C5N,QAAQkB,KAAKkP,GAAec,GAAOJ,EAAgB,KACnDnG,GAAiByG,YAAYhB,GAAec,GAAOJ,EAAgB,KAAKO,QAAQ,KAE5EK,EAAWD,EAAOE,KAAI,SAACC,EAAGhR,GAAJ,OAAcyP,GAAWuB,EAAGhR,EAAOqQ,MAZ5C,SAaLrR,QAAQiS,IAAIH,GAbP,cAanB/P,EAbmB,iBAeID,GAAoBf,EAAMS,KAAMT,EAAMR,UAAWwB,EAAOhB,EAAM2P,MAAO3P,EAAMvJ,KAAMuJ,EAAMnF,MAf3F,eAeb+V,EAfa,QAgBNja,OAAO2T,IAAgB,GAhBjB,kBAiBZsG,EAASxX,MAjBG,4CAAH,wDAoBZ+X,GAAkB,SAAC1Q,GACvB,IAAI2Q,EAAiB5K,SAAS/F,EAAK5F,KAAO6Q,IAE1C,OADajL,EAAK5F,KAAO6Q,GAAaC,GAAcyF,EAAiBA,EAAiB,GAIlFC,GAAgB,uCAAG,WAAOpX,GAAP,mDAAA0F,EAAA,yDACnBuM,EAAW,GAEXoF,GAAY,EACZnB,EAAgB,EACpBxP,OAAO4Q,OAAOtX,EAAEC,OAAOyQ,OAAO7J,SAAQ,SAACL,GACjCA,EAAK5F,KAAO+Q,KACdtE,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,gDACL/L,KAAK,UAEP,CACE8N,SAAU+C,KAAMmK,SAASC,WACzBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAGf4Z,GAAY,GAEd7Q,EAAK2L,UAAW,EAChB+D,GAAiB1P,EAAK5F,KACtBqR,EAASrG,KAAKpF,OAEZ6Q,EA3BmB,iDA6BvB9G,IAAkB,SAACD,GAAD,OAAqBA,EAAgB4B,OAAOD,MAC9DtC,GAAaD,GAAa1P,EAAEC,OAAOyQ,MAAM3E,QACrCtB,gBACFyC,iBAAO4K,YAAY,CAAE1K,YAAa,iBAElCe,GAAkB,GAEpBQ,GAAY,GACZ0B,IAAgB,GAEZuF,EAAW,GAvCQ,MAwCN3D,EAxCM,gDAwCdzL,EAxCc,MA0CZ5F,KAAO8Q,IA1CK,wBA4CbvS,EAAO,CACX,KAAQqH,EACR,UAAa,MA9CI,UAiDQwP,GAAgB7W,EAAM+W,GAjD9B,QAiDbQ,EAjDa,OAkDnBd,EAAShK,KAAK8K,EAAavX,MAlDR,+BAqDb4Y,EAAcb,GAAgB1Q,GAChCmP,EAAS,EAtDM,UAuDDrO,GAAqBd,EAAKzI,KAAM,MAvD/B,QA4DnB,KALMmB,EAvDa,QAwDXxC,OAAO2T,IAAgB,GACzBqF,EAAQxW,EAAIC,KAAKA,KAAK6Y,OACxBnB,EAAS,GACToB,EAAU,EACPtC,GAAUoC,GACXG,EAAazG,GACbjL,EAAK5F,KAAOqX,EAAUxG,GAAaC,KACrCwG,EAAa1R,EAAK5F,KAAOqX,GAEvBxE,EAAOjN,EAAK2R,MAAMF,EAASC,EAAaD,GAC5CpB,EAAOjL,KAAK,CACV,KAAQpF,EAAKzI,KACb,KAAQyI,EAAKhK,KACb,KAAQgK,EAAK5F,KACb,MAAS8U,EACT,OAAUC,EACV,UAAa,KACb,KAAQlC,IAEVwE,GAAWC,EACXvC,IA5EiB,iBA8EQiB,GAAaC,EAAQX,GA9E7B,QA8EbQ,EA9Ea,OA+EnBd,EAAShK,KAAK8K,EAAavX,MA/ER,QAiFrBqW,IAAgBhP,EAAK5F,KAjFA,oCAmFvB4U,GAAe,EAEf/K,iBAAgB8F,GAAkB,IAC9B6H,EAtFmB,YAsFL1H,IAClBkF,EAAS/O,SAAQ,SAACL,GAChB4R,EAAQxM,KAAKpF,MAEfmK,GAASyH,GACTzJ,GAAY,GACZgB,GAAa,GACbI,GAAiB,GACbtF,iBACF4C,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,qCACL/L,KAAK,WAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBA1GM,4CAAH,sDA8HhB6a,GAAkB,uCAAG,WAAOtY,GAAP,yDAAA0F,EAAA,yDAErBH,EAAY,GACZ0M,EAAW,GAEXoF,GAAY,EACZnB,EAAgB,EACpBxP,OAAO4Q,OAAOtX,EAAEC,OAAOyQ,OAAO7J,SAAQ,SAACL,GACjCA,EAAK5F,KAAO+Q,KACdtE,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,gDACL/L,KAAK,UAEP,CACE8N,SAAU+C,KAAMmK,SAASC,WACzBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAGf4Z,GAAY,GAEd7Q,EAAK2L,UAAW,EAChBF,EAASrG,KAAKpF,GACd0P,GAAiB1P,EAAK5F,KACtB2E,EAAYiB,EAAK+R,uBAEflB,EA9BqB,kDAgCrBmB,EAAM,IACN5M,KAAK,CACP7N,KAAMwH,EAAUkN,MAAM,KAAK,GAC3BgG,MAAOzY,EAAEC,OAAOyQ,MAAM3E,OACtBoG,UAAU,IAGZ1B,IAAoB,SAACD,GAAD,OAAuBA,EAAkB0B,OAAOsG,MACpE7I,GAAaD,GAAa,GAC1BvB,GAAkB,GAClBQ,GAAY,GACZ0B,IAAgB,GAEZuF,EAAW,GA7CU,MA8CR3D,EA9CQ,gDA8ChBzL,EA9CgB,MAgDd5F,KAAO8Q,IAhDO,wBAiDfvS,EAAO,CACX,KAAQqH,EACR,UAAajB,EAAUkN,MAAM,KAAK,IAnDf,UAsDMuD,GAAgB7W,EAAM+W,GAtD5B,QAsDfQ,EAtDe,OAuDrBd,EAAShK,KAAK8K,EAAavX,MAvDN,+BA0Df4Y,EAAcb,GAAgB1Q,GAChCmP,EAAS,EA3DQ,UA4DHrO,GAAqBd,EAAKzI,KAAMwH,EAAUkN,MAAM,KAAK,IA5DlD,QAiErB,KALMvT,EA5De,QA6DbxC,OAAO2T,IAAgB,GACzBqF,EAAQxW,EAAIC,KAAKA,KAAK6Y,OACxBnB,EAAS,GACToB,EAAU,EACPtC,GAAUoC,GACXG,EAAazG,GACbjL,EAAK5F,KAAOqX,EAAUxG,GAAaC,KACrCwG,EAAa1R,EAAK5F,KAAOqX,GAEvBxE,EAAOjN,EAAK2R,MAAMF,EAASC,EAAaD,GAC5CpB,EAAOjL,KAAK,CACV,KAAQpF,EAAKzI,KACb,KAAQyI,EAAKhK,KACb,KAAQgK,EAAK5F,KACb,MAAS8U,EACT,OAAUC,EACV,UAAapQ,EAAUkN,MAAM,KAAK,GAClC,KAAQgB,IAEVwE,GAAWC,EACXvC,IAjFmB,iBAmFMiB,GAAaC,EAAQX,GAnF3B,QAmFfQ,EAnFe,OAoFrBd,EAAShK,KAAK8K,EAAavX,MApFN,QAsFvBqW,IAAgBhP,EAAK5F,KAtFE,2CAwFzB4U,GAAe,EAxFU,UAyFPpO,GAAqB7B,EAAUkN,MAAM,KAAK,GAAI,GAzFvC,SAyFnBvT,EAzFmB,QA0FjBxC,OAAO2T,IAAgB,IAEzB+H,EAAU,IACRxM,KAAK1M,GACbsS,IAAW,SAACD,GAAD,OAAaA,EAAQW,OAAOkG,MACvCzJ,GAAY,GACZgB,GAAa,GACbI,GAAiB,GACbtF,iBACF4C,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,qCACL/L,KAAK,WAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBA9GQ,4CAAH,sDAoHlBib,GAAa,WACjBvK,GAAkB,GAClBE,GAAoB,GACpBwB,GAAkB,GAClBU,GAAkB,IAClBE,GAAoB,KAYhBkI,GAAmB,WACvBpK,GAAiB,IA4BbqK,GAA0B,WAC9BvJ,IAAe,IAKXwJ,GAA0B,SAACrc,GAC/B6S,IAAe,GACF,WAAT7S,GACFkR,EAAQhJ,QAAQyO,QAEL,kBAAT3W,GACF+R,GAAiB,IAIfuK,GAAyB,WAC7BvJ,IAAc,IAKVwJ,GAAsB,uCAAG,WAAOvc,GAAP,qBAAAkJ,EAAA,yDAC7B6J,IAAc,GACD,aAAT/S,EAFyB,oBAG3ByT,GAAsB,GACtBE,IAAkB,IACdc,GALuB,wBAMzB5C,GAAoB,GACpBQ,GAAc,IAEVpJ,EAAW,IAAIgB,UACVd,OAAO,OAAQsL,GAAc9G,IAVb,UAYJ3C,GAAc/B,GAZV,QAYnBG,EAZmB,OAanBuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAAS0E,GAAcrQ,MAC9CmN,EAAcrJ,QAAU,EAEf4H,EAAI,EAlBY,aAkBTA,EAAI6I,EAAYpJ,QAlBP,kCAmBjB6I,GAAmB,OAAQO,EAAY7I,IAnBtB,QAkBeA,IAlBf,wBAqBzBuC,GAAc,GAEdxB,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,wDACL/L,KAAK,aAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAlCU,QAoEhB,UAATjB,GACF4I,QAAQkB,IAAI9J,GArEe,4CAAH,sDAyEtBwc,GAAOC,aAAW,CACtBC,YAAY,WAAD,4BAAE,WAAOlZ,GAAP,qDAAA0F,EAAA,yDACM,IAAb1F,EAAEsS,OADK,oBAETrD,IAAkB,IACdxE,gBAHK,oBAID+H,EAAMxS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC7BjW,EAAOwD,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC9BvI,EAASlK,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC1B,MAARD,EAPG,oBAQQ,SAAThW,EARC,oBASH4U,GAAkB,IAClBnB,GAAsB,GACtBE,IAAkB,GACH,WAAXjG,EAZD,oBAaK1D,EAAOkK,GAAMgC,MAAK,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MACvDtB,GAAgB1K,GAChBwK,GAAa,IACRhR,EAAEC,OAAOxC,UAAUwL,SAAS,YAhBhC,wBAiBCoF,GAAoB,GACpBQ,GAAc,IAEVpJ,EAAW,IAAIgB,UACVd,OAAO,OAAQa,EAAK2D,IArB9B,UAuBsB3C,GAAc/B,GAvBpC,QAuBOG,EAvBP,OAwBOuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAAS/F,EAAK5F,MACrCmN,EAAcrJ,QAAU,EAEf4H,EAAI,EA7Bd,aA6BiBA,EAAI6I,EAAYpJ,QA7BjC,kCA8BS6I,GAAmB,OAAQO,EAAY7I,IA9BhD,QA6ByCA,IA7BzC,wBAgCCuC,GAAc,GAEdxB,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,wDACL/L,KAAK,aAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBA7ChB,uCAgFK+I,EAAOqK,GAAY6B,MACvB,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MAEjCxB,GAAaxK,GACb0K,GAAgB,IAChB7C,GAAoB,GACpBQ,GAAc,IAEVpJ,EAAW,IAAIgB,UACVd,OAAO,OAAQa,EAAK2D,IAzF5B,UA2FoB3C,GAAc/B,GA3FlC,QA2FKG,EA3FL,OA4FKuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAAS/F,EAAK5F,MACrCmN,EAAcrJ,QAAU,EAEf4H,EAAI,EAjGZ,aAiGeA,EAAI6I,EAAYpJ,QAjG/B,kCAkGO6I,GAAmB,OAAQO,EAAY7I,IAlG9C,QAiGuCA,IAjGvC,wBAoGDuC,GAAc,GAEdxB,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,wDACL/L,KAAK,aAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAjHd,gCAkJHyT,GAAgB,IAChBF,GAAa,IACP2B,EAAS9E,EAAWnJ,QAAQgO,MAChC,SAACC,GAAD,OAAYA,EAAOxI,KAAOoC,SAASiG,MAErCpB,GAAkBuB,GACb3S,EAAEC,OAAOxC,UAAUwL,SAAS,aAC/B5L,EAAMsO,QAAQC,KAAK,CACjBC,SAGQ,MAFNxO,EAAMyO,SAASD,SACbxO,EAAMyO,SAASD,SAASE,OAAS,GADnC,UAGO1O,EAAMyO,SAASD,SAHtB,YAGkC8G,EAAO5U,MAHzC,UAIOV,EAAMyO,SAASD,UAJtB,OAIiC8G,EAAO5U,MAC1CU,MAAO,CAAEV,KAAM4U,EAAO5U,KAAMoM,GAAIwI,EAAOxI,MAhKxC,gCAqKL+G,GAAgB,IAChBE,GAAkB,IAClBJ,GAAa,IAvKR,gCA0KDwB,EAAMxS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC7BjW,EAAOwD,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC9BvI,EAASlK,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAClCzS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GACvB,GACS,SAATjW,GACF4U,GAAkB,IACH,WAAXlH,GACI1D,EAAOkK,GAAMgC,MAAK,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MACvDtB,GAAgB1K,GAChBwK,GAAa,MAEPxK,EAAOqK,GAAY6B,MACvB,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MAEjCxB,GAAaxK,GACb0K,GAAgB,OAGlBA,GAAgB,IAChBF,GAAa,IACP2B,EAAS9E,EAAWnJ,QAAQgO,MAChC,SAACC,GAAD,OAAYA,EAAOxI,KAAOoC,SAASiG,MAErCpB,GAAkBuB,IAlMb,gCAsMT1D,IAAkB,GAtMT,4CAAF,mDAAC,KA2MRkK,GAAa,SAAC/N,GAClB,OAAOE,KAAOF,GAAMG,OAAO,iBAK7B,OAFApH,GAAiB,YAAaiO,IAG5B,kBAACjS,EAAD,KACG6N,EACC,yBAAKvQ,UAAU,iBACb,kBAAC,KAAD,CACE2b,OAAQlL,EACRmL,eAAgBX,GAChBjb,UAAU,oBACV6b,iBAAiB,6BAEjB,yBAAK7b,UAAU,gBACb,yBAAKA,UAAU,kBACZ2S,IACC,gDAIAA,KAAqB1B,GACrB,2CACagB,GADb,IAC0BA,GAAa,EAAI,QAAU,OADrD,MACgEI,GADhE,gBAIAM,IAAoB1B,GACpB,8BACGkB,GADH,QAEGA,GAAmB,EAAI,WAAa,UAFvC,cAOJ,yBAAKnS,UAAU,aACb,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QAxXxB,WACpBsQ,GAAaD,KAwXOA,EAeE,yBACExC,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,SAEV,0BACElB,KAAK,UACLE,EAAE,oDAxBR,yBACEc,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,SAEV,0BACElB,KAAK,UACLE,EAAE,uDAoBZZ,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,aAEF,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QAASua,IACnC,yBACE1M,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,6BAASuO,OAAO,+FAItBjP,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,YAIL2S,IACC,yDAEE,yBAAKvM,MAAM,KAAK+F,OAAO,KAAKe,MAAM,8BAChC,2BACE,0BAAMG,OAAO,OAAOX,GAAG,QAAQa,KAAK,UAAUE,EAAE,kaAKtDkF,KAAqB5B,GACrB,yBACE/Q,UACEmS,GAAmB,GAAK,mBAAqB,cAG9ClJ,OAAO4Q,OAAOhH,IAAiByG,KAAI,SAACvQ,EAAM8F,GAAP,OAClC,yBAAK7O,UAAU,OAAO2B,IAAKkN,GACzB,yBAAK7O,UAAU,WACb,yBAAKA,UAAY+I,EAAK2L,SAA4B,OAAjB,gBAC/B,yBAAKnU,IAAKgL,GAAqBxC,GAAOvI,IAAKuI,EAAKzI,QAElD,yBAAKN,UAAY+I,EAAK2L,SAA4B,OAAjB,gBAC/B,8BAAO3L,EAAKzI,MACZ,gCAEF,yBAAKN,UAAU,UACX+I,EAAK2L,SAOH,yBAAK1U,UAAU,QACb,kBAAC+b,GAAA,EAAD,MACG,gBAAGC,EAAH,EAAGA,WAAH,OACC,kBAAC,IAAMnc,SAAP,KACGmc,EACC,yBACE5V,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACV/N,QAAS,kBA3zBd,SAACqI,GAChC,IAAMyK,EAAgBP,GAAMgC,MAAK,SAACgH,EAAK1T,GAAN,OAAgB0T,EAAI3b,OAASyI,EAAKzI,QACnEmT,GAAgBD,GAChB,IAAM0I,EAAezK,GAAc+B,EAAclT,KAAO,cAAgBkT,EAAc9G,GAAK8G,EAAclT,KAAO,aAAekT,EAAc9G,GAC7IyP,YAASC,SAASF,EAAc,CAC9BvM,YAAa,eACb0M,SAAU,KACVC,MAAO,IACPC,OAAQ,EACRC,QAAQ,IAmzB4BC,CAAyB1T,KAG3B,0BAAM0E,EAAE,iHAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,gIA7BxB,kBAAC,KAAD,CACE1O,KAAK,OACLiE,MAAM,UACNhD,UAAU,kBAsCrBiJ,OAAO4Q,OAAO9G,IAAmBuG,KAAI,SAACpE,EAAQrG,GAAT,OACpC,yBAAK7O,UAAU,OAAO2B,IAAKkN,GACzB,yBAAK7O,UAAU,WACb,yBAAKA,UAAYkV,EAAOR,SAA4B,OAAjB,gBACjC,yBACEnG,EAAE,MACFC,EAAE,MACFC,UAAU,QACVtB,QAAQ,YACRhB,OAAO,OACP/F,MAAM,OACNmH,KAAK,WAEL,2BACE,0BAAME,EAAE,gGACR,0BAAMA,EAAE,gBAAgBF,KAAK,YAInC,yBAAKvN,UAAYkV,EAAOR,SAA4B,OAAjB,gBACjC,8BAAOQ,EAAO5U,MACd,8BACI4U,EAAOR,SAAeQ,EAAO8F,MAAX,EADtB,OAC4C9F,EAAO8F,QAGrD,yBAAKhb,UAAU,UACXkV,EAAOR,SAOL,yBAAK1U,UAAU,QACb,kBAAC+b,GAAA,EAAD,MACG,gBAAGC,EAAH,EAAGA,WAAH,OACC,kBAAC,IAAMnc,SAAP,KACGmc,EACC,yBACE5V,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACV/N,QAAS,kBAhrBZ,SAACwU,GAClC,IAAMxB,EAAkBtD,EAAWnJ,QAAQgO,MACzC,SAACgH,EAAK1T,GAAN,OAAgB0T,EAAI3b,OAAS4U,EAAO5U,QAEtCqT,GAAkBD,GAClB,IAAMwI,EAAezK,GAAciC,EAAgBpT,KAAO,gBAAkBoT,EAAgBhH,GAAKgH,EAAgBpT,KAAO,gBAAkBoT,EAAgBhH,GAC1JyP,YAASC,SAASF,EAAc,CAC9BvM,YAAa,eACb0M,SAAU,KACVC,MAAO,IACPC,OAAQ,EACRC,QAAQ,IAsqB4BE,CAA2BxH,KAG7B,0BAAMzH,EAAE,iHAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,gIA7BxB,kBAAC,KAAD,CACE1O,KAAK,OACLiE,MAAM,UACNhD,UAAU,oBAyC5B,kBAAC,KAAD,CACE2b,OAAQhL,EACRiL,eAAgBX,GAChBjb,UAAU,sBACV6b,iBAAiB,+BAEjB,yBAAK7b,UAAU,gBACb,yBAAKA,UAAU,kBACZyS,IACC,kDAIAA,KAAuBtB,GACvB,+CACiBoB,GADjB,gBAIAE,IAAsBtB,GACtB,qDAKJ,yBAAKnR,UAAU,aACb,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QAASua,IACnC,yBACE1M,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,6BAASuO,OAAO,+FAItBjP,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,YAIN,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACZyS,IACC,kDAEE,yBAAKrM,MAAM,KAAK+F,OAAO,KAAKe,MAAM,8BAChC,2BACE,0BAAMG,OAAO,OAAOX,GAAG,QAAQa,KAAK,UAAUE,EAAE,iaAMtDgF,IAAuBtB,GASpBsB,IAAsBtB,EAAgB,gDAEvC,yBACA/K,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,4HAGN,KAnBJ,qDAEA,kBAAC,KAAD,CACI1O,KAAK,OACLiE,MAAM,UACNhD,UAAU,kBAqB1B,kBAAC,KAAD,CACE2b,OAAQ9K,EACR+K,eAAgBV,GAChByB,YA5pBmB,SAACpa,GAC5B4N,EAASlJ,QAAQ2V,QACjBzM,EAASlJ,QAAQ4V,UA2pBT7c,UAAU,sBACV6b,iBAAiB,iBAEjB,yBAAK7b,UAAU,gBACb,4CACA,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QAASwa,IACnC,yBACE3M,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,6BAASuO,OAAO,+FAItBjP,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,WAGJ,yBAAKA,UAAU,cACb,kBAACwD,EAAA,EAAD,CACExD,UAAU,QACVyD,SA3qBc,SAAClB,GAC3BsR,GAAetR,EAAEC,OAAOC,QA2qBZqa,aAAa,kBACbC,IAAK5M,KAGT,yBAAKnQ,UAAU,gBACb,4BAAQA,UAAU,MAAMU,QAASwa,IAAjC,SAGA,4BAAQlb,UAAU,WAAWU,QAjrBf,WACxB0J,GAAawJ,GAAkB,GAAGpS,MAAK,SAACC,GACtCqP,GAAiB,GACjB,IAAMiK,EAAM,GACZA,EAAI5M,KAAK1M,GACTsS,IAAW,SAACD,GAAD,OAAaA,EAAQW,OAAOsG,MACvC7J,GAAY,GACZ2C,GAAe,mBACfJ,GAAgB,IAChBF,GAAa,IACbI,GAAkBlS,QAuqBV,UAKJ,kBAAC,IAAD,CAAoBiL,GAAG,eAAesQ,QAASzL,IAC7C,kBAAC/L,EAAA,EAAD,CAAStF,GAAIJ,IAAMkG,UAAQ,EAACiX,SAAS,GACnC,kBAACC,EAAA,EAAD,CAAUpS,KAAK,MAAMnH,KAAM,KAAMwZ,SAAO,EAACnd,UAAU,eACjD,kBAACkd,EAAA,EAASpd,KAAV,KACE,kBAACod,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,aACN1c,QAAS,kBAAM+U,GAAe,iBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,eACN1c,QAAS,kBAAM+U,GAAe,kBAEhC,kBAACyH,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,gBACN1c,QAAS,kBAAM+U,GAAe,oBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,cACN1c,QAAS,kBAAM+U,GAAe,oBAIpC,kBAAC3V,EAAA,EAAKG,KAAN,CAAWC,GAAIod,IAAMld,OAAK,EAACC,GAAG,UAC5B,yBACE+F,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,UACLkB,UAAU,SAEV,0BAAMhB,EAAE,wNAEV,4CAGJ,yBAAKzN,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,wBACb,kBAACkd,EAAA,EAAD,CAAUpS,KAAK,WAAWqS,SAAO,EAACnd,UAAU,mBAC1C,kBAACkd,EAAA,EAASpd,KAAV,KACE,kBAACod,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,aACN1c,QAAS,kBAAM+U,GAAe,iBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,eACN1c,QAAS,kBAAM+U,GAAe,kBAEhC,kBAACyH,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,gBACN1c,QAAS,kBAAM+U,GAAe,oBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,cACN1c,QAAS,kBAAM+U,GAAe,qBAKtC,yBAAKzV,UAAU,iBACb,kBAAC8D,EAAA,EAAD,CACEH,KAAK,OACL4Z,cAAc,OACdrd,GAAIod,IACJzF,QAAQ,cAGZ,yBAAK7X,UAAU,gBACb,4BAAQA,UAAU,aAAaU,QAjxBpB,WACzBgR,IAAaD,MAixBIA,GACC,yBACErL,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BAAME,EAAE,yHAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,0HACR,0BAAMA,EAAE,gBAAgBF,KAAK,WAIrC,4BAAQvN,UAAU,aAAaU,QApyBtB,WACvBiH,QAAQkB,IAAI,sBAoyBI,yBACEzC,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,gBAAgBF,KAAK,SAC7B,0BAAME,EAAE,qKAKhB,yBAAKzN,UAAU,eAAe0M,GAAG,gBAC9BM,iBAAgB6F,GAAgBvE,OAAS,GACxC,yBAAKtO,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,wCAEF,yBAAKA,UAAU,gBACZ6S,GAAgByG,KAAI,SAAC/E,EAAM1F,GAAP,OACnB,yBAAK7O,UAAU,YACb,kBAAC,GAAD,CAAa2B,IAAKkN,EAAG9F,KAAMwL,WAOtCtB,GAAM3E,OAAS,EACd,yBAAKtO,UAAU,eACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,iBACb,6CAEF,yBAAKA,UAAU,gBACZoT,GAAYkG,KAAI,SAAC/E,EAAM1F,GAAP,OACf,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACEsT,IAAciB,EAAK7H,KAAO4G,GAAW5G,GACjC,kBACA,WAENA,GAAI,iBAAmB6H,EAAK7H,GAAK,SACjC/K,IAAKkN,IAEL,kBAACtC,GAAD,CACEb,KAAM6I,EAAK7I,KACX3M,KAAMwV,EAAKpB,aACX7S,KAAMiU,EAAKjU,KACXoM,GAAI6H,EAAK7H,GACTD,OAAO,gBAMhBqH,GAAQxF,OAAS,GAChB,yBACEtO,UACEyR,GACI,wBACA,6BAEN/E,GAAG,iBAEH,yBAAK1M,UAAU,gBAAgB0M,GAAG,iBAChC,wCAEF,yBAAK1M,UAAU,eAAe0M,GAAG,eAC9BoH,GAAQwF,KAAI,SAAC/E,EAAM1F,GAAP,OACX,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACE0T,IACEa,EAAK7H,KAAOgH,GAAgBhH,GAC1B,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,gBAAkBiU,EAAK7H,IAChD,kBAAC0C,GAAD,CACE9O,KAAMiU,EAAKjU,KACXoM,GAAI6H,EAAK7H,GACTO,aAAcoO,YAQ5B,yBAAKrb,UAAU,sBAAsB0M,GAAG,eACtC,yBAAK1M,UAAU,gBAAgB0M,GAAG,gBAC9B+E,KAAiBA,IAAezE,kBAChC,sCAEAyE,KAAgBzE,iBAChB,yBAAKhN,UAAU,aACb,yBAAKA,UAAU,WACb,sCACA,4BACE0d,MAAM,YACNhd,QAASyU,IAERpD,GACC,yBACE3L,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BACEA,KAAK,OACLE,EAAE,oBAEJ,0BAAMA,EAAE,sEAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BACEA,KAAK,OACLE,EAAE,oBAEJ,0BAAMA,EAAE,2EAKlB,yBAAKzN,UAAU,YACb,wCAEF,yBAAKA,UAAU,eACb,gDAEF,yBAAKA,UAAU,WACb,8CAKR,yBAAKA,UAAU,eAAe0M,GAAG,eAC9B+E,IACCwB,GAAMqG,KAAI,SAAC/E,EAAM1F,GAAP,OACR,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACEwT,IAAiBe,EAAK7H,KAAO8G,GAAc9G,GACvC,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,cAAgBiU,EAAK7H,IAC9C,kBAACH,GAAD,CACEb,KAAM6I,EAAK7I,KACX3M,KAAMwV,EAAKpB,aACX7S,KAAMiU,EAAKjU,KACXoM,GAAI6H,EAAK7H,GACTD,OAAO,SACPQ,aAAcoO,WAKtB5J,IACA,yBAAKzR,UAAU,eACXgN,iBACA8G,GAAQwF,KAAI,SAAC/E,EAAM1F,GAAP,OACV,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACE0T,IACEa,EAAK7H,KAAOgH,GAAgBhH,GAC1B,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,gBAAkBiU,EAAK7H,IAChD,kBAACgB,GAAD,CACEgB,MAAM,GACNC,cAAe4F,EAAKoJ,cACpB5e,KAAK,SACLuB,KAAMiU,EAAKjU,KACX6C,KAAK,GACLuJ,GAAI6H,EAAK7H,GACTO,aAAcoO,UAKvBpI,GAAMqG,KAAI,SAAC/E,EAAM1F,GAAP,OACT,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACEwT,IAAiBe,EAAK7H,KAAO8G,GAAc9G,GACvC,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,cAAgBiU,EAAK7H,IAC9C,kBAACgB,GAAD,CACEgB,MAAM,GACNC,cAAe4F,EAAKoJ,cACpB5e,KAAMwV,EAAKpB,aACX7S,KAAMiU,EAAKjU,KACX6C,KAAMoR,EAAKpR,KACXuJ,GAAI6H,EAAK7H,GACTD,OAAO,SACPQ,aAAcoO,aAS7BrO,iBACC,uBACEhN,UAAU,iBACVU,QAASya,MAKb,yBAAKnb,UAAU,cAAc0M,GAAG,sBAC7BoH,GAAQxF,OAAS,GAChB,yBACEtO,UACEyR,GACI,wBACA,8BAGN,yBAAKzR,UAAU,iBACb,wCAEF,yBAAKA,UAAU,eAAe0M,GAAG,eAC9BoH,GAAQwF,KAAI,SAAC/E,EAAM1F,GAAP,OACX,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACE0T,IACEa,EAAK7H,KAAOgH,GAAgBhH,GAC1B,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAACO,GAAD,CACE9O,KAAMiU,EAAKjU,KACXoM,GAAI6H,EAAK7H,GACTO,aAAcoO,WAO1B,yBAAKrb,UAAU,wBACb,yBAAKA,UAAU,iBACZyR,IAAe,sCACdA,IACA,yBAAKzR,UAAU,aACb,yBAAKA,UAAU,WACb,sCACA,4BACE0d,MAAM,YACNhd,QAASyU,IAERpD,GACC,yBACE3L,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BACEA,KAAK,OACLE,EAAE,oBAEJ,0BAAMA,EAAE,sEAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BACEA,KAAK,OACLE,EAAE,oBAEJ,0BAAMA,EAAE,2EAKlB,yBAAKzN,UAAU,YACb,wCAEF,yBAAKA,UAAU,eACb,gDAEF,yBAAKA,UAAU,WACb,8CAKR,yBAAKA,UAAU,eAAe0M,GAAG,cAC9B+E,IACC2B,GAAYkG,KAAI,SAAC/E,EAAM1F,GAAP,OACd,yBAAK7O,UAAU,YACb,kBAACuM,GAAD,CACE5K,IAAKkN,EACLnD,KAAM6I,EAAK7I,KACX3M,KAAMwV,EAAKpB,aACX7S,KAAMiU,EAAKjU,KACXoM,GAAI6H,EAAK7H,UAIf+E,IACA,yBAAKzR,UAAU,cACZoT,GAAYkG,KAAI,SAAC/E,EAAM1F,GAAP,OACf,yBAAK7O,UAAU,YACb,kBAAC0N,GAAD,CACE/L,IAAKkN,EACLH,MAAM,GACNC,cAAe4F,EAAKoJ,cACpB5e,KAAMwV,EAAKpB,aACX7S,KAAMiU,EAAKjU,KACX6C,KAAMoR,EAAKpR,KACXuJ,GAAI6H,EAAK7H,YAQtBM,iBACC,uBACEhN,UAAU,iBACVU,QAASya,OAMpBnO,iBACC,kBAAC,IAAMnN,SAAP,KACG8R,IACC,yBAAK3R,UAAU,wBAEjB,kBAAC4d,EAAA,EAAD,CACEC,KAAMlM,GACNmM,QAvoCe,WAC/BlM,IAAe,KAwoCC,kBAACtO,EAAA,EAAD,CAAStD,UAAU,gBACjB,yBAAKA,UAAU,UACb,2CAEF,yBAAKA,UAAU,QACb,yBAAKA,UAAU,YACb,yBACEA,UAAU,OACVU,QAAS,kBACP0a,GAAwB,mBAG1B,yBAAKpb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,YAEb,yBAAKN,UAAU,QACb,kBAACge,EAAA,EAAD,iBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBAAM0a,GAAwB,YAEvC,yBAAKpb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,YAEb,yBAAKN,UAAU,QACb,kBAACge,EAAA,EAAD,iBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBAAM0a,GAAwB,UAEvC,yBAAKpb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,YAEb,yBAAKN,UAAU,QACb,kBAACge,EAAA,EAAD,gBAIN,yBAAKhe,UAAU,YACb,yBACEA,UAAU,OACVU,QAAS,kBACP0a,GAAwB,gBAG1B,yBAAKpb,UAAU,YACb,yBACEO,IAAKiK,GACLhK,IAAI,gBAGR,yBAAKR,UAAU,QACb,kBAACge,EAAA,EAAD,sBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBACP0a,GAAwB,kBAG1B,yBAAKpb,UAAU,YACb,yBACEO,IAAKiK,GACLhK,IAAI,kBAGR,yBAAKR,UAAU,QACb,kBAACge,EAAA,EAAD,wBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBACP0a,GAAwB,kBAG1B,yBAAKpb,UAAU,YACb,yBACEO,IAAKiK,GACLhK,IAAI,kBAGR,yBAAKR,UAAU,QACb,kBAACge,EAAA,EAAD,6BASfhR,iBACC,kBAAC,IAAMnN,SAAP,KACGgS,IAAiB,yBAAK7R,UAAU,wBACjC,kBAAC4d,EAAA,EAAD,CACEC,KAAMhM,GACNiM,QA/tCc,WAC9BhM,IAAc,IA+tCEmM,WAAY,CAAEC,UAAW,YAAa7B,SAAU,MAEhD,kBAAC/Y,EAAA,EAAD,CAAStD,UAAU,eACjB,yBAAKA,UAAU,UACZwT,GAAclT,MACb,kBAAC,IAAMT,SAAP,KACG2T,GAAcL,aAAa3H,SAAS,SACnC,yBAAKxL,UAAU,SACb,yBACE8F,MAAO,CACLkG,gBAAgB,OAAD,OAASwH,GAAc9H,KAAvB,KACfO,iBAAkB,YAClBC,eAAgB,QAChB9F,MAAO,GACP+F,OAAQ,OAKZ,yBAAKnM,UAAU,SACb,yBACEO,IAAKgL,GAAqB,CACxBxM,KAAMyU,GAAcL,eAEtB3S,IAAKgT,GAAclT,KACnBN,UAAU,UAIlB,4BAAKwT,GAAclT,OAGtBoT,GAAgBpT,MACf,kBAAC,IAAMT,SAAP,KACE,yBAAKG,UAAU,WACb,yBACEuO,EAAE,MACFC,EAAE,MACFC,UAAU,QACVtB,QAAQ,YACRhB,OAAO,OACP/F,MAAM,OACNmH,KAAK,WAEL,2BACE,0BAAME,EAAE,gGACR,0BAAMA,EAAE,gBAAgBF,KAAK,YAInC,4BAAKmG,GAAgBpT,QAI3B,yBAAKN,UAAU,QACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,uCACA,yBAAKA,UAAU,QACb,2BACGwT,GAAclT,KACXkT,GAAcL,aACd,yBAIV,yBAAKnT,UAAU,QACb,2CACA,yBAAKA,UAAU,QACb,yCAGJ,yBAAKA,UAAU,QACb,0CACA,yBAAKA,UAAU,QACb,2BACGwT,GAAclT,KACXob,GAAWlI,GAAc2K,cACzBzC,GAAWhI,GAAgByK,iBAIrC,yBAAKne,UAAU,QACb,2CACA,yBAAKA,UAAU,QACb,2BACGwT,GAAclT,KACXob,GAAWlI,GAAcmK,eACzBjC,GAAWhI,GAAgBiK,mBAKtCnK,GAAclT,MACb,yBAAKN,UAAU,UACXoe,UACA,yBACEpe,UAAU,OACVU,QAAS,kBACP4a,GAAuB,cAGzB,yBAAKtb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,cAEb,4CAGJ,yBACEN,UAAU,OACVU,QAAS,kBAAM4a,GAAuB,WAEtC,yBAAKtb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,qBAEb,gDAUlB,kBAAC,IAAD,CACEoM,GAAG,eACH1M,UAAWuR,GAAiB,eAAiB,WAE5CF,GACC,kBAAC,IAAMxR,SAAP,KACE,kBAAC,IAAD,CAAU6B,KAAM,CAAE+V,IAAK,cAAgB/W,QAAS8W,IAC9C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,mBADb,eAGA,kBAAC,IAAD,CAAU+d,SAAO,IACjB,kBAAC,IAAD,CAAU3c,KAAM,CAAE+V,IAAK,eAAiB/W,QAAS8W,IAC/C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,WADb,gBAEE,2BACEvB,KAAK,OACLuf,QAAM,EACNC,UAAQ,EACR9a,SAAUkW,GACVoD,IAAK9M,KAGT,kBAAC,IAAD,CACEvO,KAAM,CAAE+V,IAAK,iBACb/W,QAAS8W,IAET,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,mBAJb,iBAKE,2BACEvB,KAAK,OACLuf,QAAM,EACNC,UAAQ,EACR5I,iBAAe,EACflS,SAAUoX,GACVkC,IAAK7M,KAGT,kBAAC,IAAD,CAAUmO,SAAO,IACjB,kBAAC,IAAD,CAAU3c,KAAM,CAAE+V,IAAK,cAAgB/W,QAAS8W,IAC9C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,WADb,iBAKA,kBAAC,IAAMT,SAAP,KACE,kBAAC,IAAD,CAAU6B,KAAM,CAAE+V,IAAK,YAAc/W,QAAS8W,IAC5C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,mBADb,iBASV,kBAACgD,EAAA,EAAD,CAAStD,UAAU,eACjB,kBAACwe,GAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,GAAA,EAAD,CAAQxb,KAAK,cC/qErBoM,GAAc,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,WAAY1E,EAAiB,EAAjBA,KAAM/L,EAAW,EAAXA,KAKvC,OACE,yBAAKiB,UAAU,qBACb,+BAAQ8K,GACE,YAAT/L,GAAsB,uBAAG2B,QAPH,WACzB8O,IACAC,iBAAOC,eAAe,CAAEC,YAAa,mBAKZ,YAI7BC,KAAMC,YAEC,IAAM+O,GAAY,SAAChf,GACxBmQ,KAAMC,cAAc,SACpB,IAAMC,EAAUlJ,mBACVmJ,EAAYnJ,mBACZoJ,EAAWpJ,mBACXqJ,EAAarJ,mBACbsJ,EAAetJ,mBACfuJ,EAAgBvJ,mBAPY,EASM5E,oBAAS,GATf,mBAS3BoO,EAT2B,KASXC,EATW,OAUarO,oBAAS,GAVtB,mBAU3BsO,EAV2B,KAURC,EAVQ,OAWiBvO,oBAAS,GAX1B,mBAW3BwO,EAX2B,KAWNC,EAXM,OAYWzO,oBAAS,GAZpB,mBAY3B0O,EAZ2B,KAYTC,EAZS,OAaE3O,oBAAS,GAbX,mBAa3B4O,EAb2B,KAabC,EAba,OAcC7O,oBAAS,GAdV,mBAc3B8O,EAd2B,KAcdC,EAdc,OAeK/O,oBAAS,GAfd,mBAe3BgP,EAf2B,KAeZC,EAfY,OAgBDjP,oBAAS,GAhBR,oBAgB3BkP,GAhB2B,MAgBfC,GAhBe,SAiBCnP,oBAAS,GAjBV,qBAiB3BsP,GAjB2B,MAiBdC,GAjBc,SAkBUvP,oBAAS,GAlBnB,qBAkB3BoP,GAlB2B,MAkBXC,GAlBW,SAmBOrP,oBAAS,GAnBhB,qBAmB3BwP,GAnB2B,MAmBXC,GAnBW,SAoBKzP,oBAAS,GApBd,qBAoB3B0P,GApB2B,MAoBZC,GApBY,SAqBH3P,oBAAS,GArBN,qBAqB3B4P,GArB2B,MAqBfC,GArBe,SAsBC7P,mBAAS,GAtBV,qBAsB3B8P,GAtB2B,MAsBfC,GAtBe,SAuBY/P,mBAAS,GAvBrB,qBAuB3BgQ,GAvB2B,MAuBTC,GAvBS,SAwBSjQ,mBAAS,GAxBlB,qBAwB3BkQ,GAxB2B,MAwBXC,GAxBW,SAyBgBnQ,mBAAS,GAzBzB,qBAyB3BoQ,GAzB2B,MAyBTC,GAzBS,SA2BcrQ,oBAAS,GA3BvB,qBA2B3BsQ,GA3B2B,MA2BPC,GA3BO,SA4BUvQ,oBAAS,GA5BnB,qBA4B3BwQ,GA5B2B,MA4BTC,GA5BS,SA8BWzQ,mBAAS,IA9BpB,qBA8B3B0Q,GA9B2B,MA8BVC,GA9BU,SA+Be3Q,mBAAS,IA/BxB,qBA+B3B4Q,GA/B2B,MA+BRC,GA/BQ,SAgCR7Q,mBAAS,IAhCD,qBAgC3B8Q,GAhC2B,MAgCpBC,GAhCoB,SAiCO/Q,mBAAS,IAjChB,qBAiC3BqR,GAjC2B,MAiCZC,GAjCY,SAkCWtR,mBAAS,IAlCpB,qBAkC3BuR,GAlC2B,MAkCVC,GAlCU,SAmCSxR,mBAAS,mBAnClB,qBAmC3ByR,GAnC2B,MAmCTC,GAnCS,SAoCJ1R,mBAAS,IApCL,qBAoC3B2R,GApC2B,MAoClBC,GApCkB,SAqCK5R,mBAAS,IArCd,qBAqC3B0c,GArC2B,MAqClBC,GArCkB,SAsCA3c,mBAAS,IAtCT,qBAsC3B4c,GAtC2B,MAsChBC,GAtCgB,SAuCU7c,mBAAS,IAvCnB,qBAuC3B8c,GAvC2B,MAuCXC,GAvCW,MAyClC9O,EAAWnJ,QAAU6M,GAErB,IAAME,GAAajF,KAAKG,IAAI,KAAM,GAC5B+E,GAAc,EAAIlF,KAAKG,IAAI,KAAM,GACjCgF,GAAQ,EAAInF,KAAKG,IAAI,KAAM,GAEjClI,qBAAU,WACRwJ,GAAc,KACb,CAACsD,KAEJ,IAAIK,GAAM,IAAIC,KACVC,GAAc,KAEZ8K,GAAW,uCAAG,8BAAAlX,EAAA,sEACIqC,KADJ,cACZwJ,EADY,OAEdsL,GAAW,EACVxf,EAAMyO,SAASD,SAASiR,WAAW,YACtCD,GAAW,GAECxf,EAAMyO,SAASD,SAASkR,OAAO,GAAGtK,MAAM,KAEhD5L,SAAQ,SAACsC,GACTA,IACeoI,EAAQmB,MAAK,SAACpO,GAAD,OAAaA,EAAQvG,OAASoL,OAE1D0T,GAAW,OAZC,kBAgBXA,GAhBW,2CAAH,qDAmBXG,GAAa,uCAAG,WAAOC,GAAP,2BAAAvX,EAAA,sEACEqC,KADF,UACdwJ,EADc,OAGpB2L,GADIA,EAAQD,EAAIxK,MAAM,MACR0K,QAAO,SAACC,GAAD,OAAe,OAAPA,GAAsB,KAAPA,KACtCC,EAAiBH,EAAMA,EAAMnR,OAAS,MAExCuR,EAAoB/L,EAAQ4L,QAC9B,SAAC7Y,GAAD,OAAaA,EAAQvG,OAASsf,MAEVtR,OAAS,GATX,wBAUZwR,EAAcL,EAAMA,EAAMnR,OAAS,GACnCyR,EAAejM,EAAQ4L,QAC3B,SAAC7Y,GAAD,OAAaA,EAAQvG,OAASwf,KAE5BzV,EAAY,GAChBwV,EAAkBzW,SAAQ,SAAC4W,GACPD,EAAaL,QAAO,SAACC,GAAD,OAAQA,EAAGjT,KAAOsT,EAAIC,UAC9C3R,OAAS,IACrBjE,EAAY2V,EAAItT,OAlBF,kBAqBXrC,GArBW,iCAuBXwV,EAAkB,GAAGnT,IAvBV,4CAAH,sDA2BnB1F,qBAAU,WACRmY,KAAc3d,MAAK,SAAC4d,GAClB,GAAKA,EAEE,CACL,IAAMtX,EAAYlI,EAAMyO,SAASD,SAASkR,OAAO,GACjDR,GAAoBhX,GACpBoY,KACItgB,EAAMyO,SAASrN,MACjB6G,GAAoBC,GAAWtG,MAAK,SAACC,GACnCyR,GAASzR,GACT8I,GAAW3K,EAAMyO,SAASrN,MAAM0L,IAAIlL,MAAK,SAAC2W,GACxCpE,GAAWoE,GACX3H,GAAc,SAIlB3I,GAAoBC,GAAWtG,MAAK,SAACC,GACnCyR,GAASzR,GACT8d,GAAczX,GAAWtG,MAAK,SAACkL,GAC7BnC,GAAWmC,GAAIlL,MAAK,SAAC2W,GACnBpE,GAAWoE,GACX3H,GAAc,iBAnBtB5Q,EAAMsO,QAAQC,KAAK,eA0BtB,IAEHnH,qBAAU,WACJpH,EAAMyO,SAASrN,MACjB6d,IAAWhX,GAAoBgX,IAASrd,MAAK,SAACC,GAC5C,GAAIoR,GAAgBvE,OAAS,EAAG,CAC9B,IAAK,IAAI/F,EAAQ,EAAGA,EAAQsK,GAAgBvE,OAAQ/F,IAClD,IAAK,IAAIsG,EAAIpN,EAAI6M,OAAS,EAAGO,GAAK,EAAGA,IACnC,GAAIpN,EAAIoN,GAAGvO,OAASuS,GAAgBtK,GAAOjI,MAAQwO,SAASrN,EAAIoN,GAAG1L,QAAU2L,SAAS+D,GAAgBtK,GAAOpF,MAAO,CAClH0P,GAAgBtK,GAAOmM,UAAW,EAClC,MAIN5B,GAAkBD,IAEpBK,GAASzR,GACT8I,GAAW3K,EAAMyO,SAASrN,MAAM0L,IAAIlL,MAAK,SAAC2W,GACxC,GAAIpF,GAAkBzE,OAAS,EAAG,CAChC,IAAK,IAAI/F,EAAQ,EAAGA,EAAQwK,GAAkBzE,OAAQ/F,IACpD,IAAK,IAAIsG,EAAIsJ,EAAS7J,OAAS,EAAGO,GAAK,EAAGA,IACxC,GAAIsJ,EAAStJ,GAAGvO,OAASyS,GAAkBxK,GAAOjI,KAAM,CACtDyS,GAAkBxK,GAAOmM,UAAW,EACpC,MAIN1B,GAAoBD,IAEtBgB,GAAWoE,GACX3H,GAAc,SAIlBqO,IAAWhX,GAAoBgX,IAASrd,MAAK,SAACC,GAC5C,GAAIoR,GAAgBvE,OAAS,EAAG,CAC9B,IAAK,IAAI/F,EAAQ,EAAGA,EAAQsK,GAAgBvE,OAAQ/F,IAClD,IAAK,IAAIsG,EAAIpN,EAAI6M,OAAS,EAAGO,GAAK,EAAGA,IACnC,GAAIpN,EAAIoN,GAAGvO,OAASuS,GAAgBtK,GAAOjI,MAAQwO,SAASrN,EAAIoN,GAAG1L,QAAU2L,SAAS+D,GAAgBtK,GAAOpF,MAAO,CAClH0P,GAAgBtK,GAAOmM,UAAW,EAClC,MAIN5B,GAAkBD,IAEpBK,GAASzR,GACT8d,GAAcV,IAASrd,MAAK,SAACkL,GAC3BnC,GAAWmC,GAAIlL,MAAK,SAAC2W,GACnB,GAAIpF,GAAkBzE,OAAS,EAAG,CAChC,IAAK,IAAI/F,EAAQ,EAAGA,EAAQwK,GAAkBzE,OAAQ/F,IACpD,IAAK,IAAIsG,EAAIsJ,EAAS7J,OAAS,EAAGO,GAAK,EAAGA,IACxC,GAAIsJ,EAAStJ,GAAGvO,OAASyS,GAAkBxK,GAAOjI,KAAM,CACtDyS,GAAkBxK,GAAOmM,UAAW,EACpC,MAIN1B,GAAoBD,IAEtBgB,GAAWoE,GACX3H,GAAc,cAKrB,CAACS,IAEJjK,qBAAU,WACRoL,GAAkBD,GAAmBF,MACpC,CAACA,KAEJ,IAAM0C,GAAsBC,uBAC1B,SAACrS,GACC,GAAiB,IAAbA,EAAEsS,QAAiB7H,gBAmCrBwE,IAAkB,QAlClB,GACEnF,GAAoBb,SAASjJ,EAAEC,OAAOkK,KACtCL,GAAoBb,SAASjJ,EAAEC,OAAOsS,aAAa,eAEnDtD,IAAkB,GAClBF,IAAW,QACN,GAAIhF,GAAsBd,SAASjJ,EAAEC,OAAOxC,WAAY,CAC7D,IAAM+U,EAAMxS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC7BjW,EAAOwD,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GACpC,GAAY,MAARD,EAGF,GAFAzD,IAAW,GACXE,IAAkB,GACL,SAATzS,EAAiB,CACnB4U,GAAkB,IAClB,IAAM5K,EAAOkK,GAAMgC,MAAK,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MACvDtB,GAAgB1K,OACX,CACL0K,GAAgB,IAChB,IAAMyB,EAAS9E,EAAWnJ,QAAQgO,MAChC,SAACC,GAAD,OAAYA,EAAOxI,KAAOoC,SAASiG,MAErCpB,GAAkBuB,QAGpB1D,IAAkB,GAClBiC,GAAgB,IAChBE,GAAkB,SAGpBnC,IAAkB,GAClBiC,GAAgB,IAChBE,GAAkB,MAMxB,CAACtC,GAAY4B,KAGTkC,GAAkBP,uBACtB,SAACrS,GACCyP,IAAUD,IACV,IAAIqD,EAAgB,GAChBC,EAAkB,GAClBtD,IACFqD,EAAgBnC,GAAMqC,MAAK,SAACrN,EAAGsN,GAAJ,OAAUtN,EAAE3H,KAAKkV,cAAcD,EAAEjV,SAC5D+U,EAAkBvB,GAAQwB,MAAK,SAACrN,EAAGsN,GAAJ,OAAUtN,EAAE3H,KAAKkV,cAAcD,EAAEjV,WAEhE8U,EAAgBnC,GAAMqC,MAAK,SAACrN,EAAGsN,GAAJ,OAAUA,EAAEjV,KAAKkV,cAAcvN,EAAE3H,SAC5D+U,EAAkBvB,GAAQwB,MAAK,SAACrN,EAAGsN,GAAJ,OAAUA,EAAEjV,KAAKkV,cAAcvN,EAAE3H,UAElE4S,GAASkC,GACTrB,GAAWsB,KAEb,CAACtD,GAAYkB,GAAOa,KAGhBoM,GAAY,WAChB,IAAIT,EAAQ7f,EAAMyO,SAASD,SAASkR,OAAO,GAAGtK,MAAM,KACpDyK,EAAQA,EAAMC,QAAO,SAACC,GAAD,OAAe,OAAPA,GAAsB,KAAPA,KAC5C,IAAIQ,EAAS,GACbV,EAAMrW,SAAQ,SAACmL,EAAMhM,GACnB,IAAM6X,EAAQ,CACZ1U,KAAgB,IAAVnD,EAAc4X,EAAO5X,EAAQ,GAAf,KAA4B,IAAMgM,EAAO,SAC7DjU,KAAgB,IAAViI,EAAcgM,EAAO,YAE7B4L,EAAOhS,KAAKiS,MAEdpB,GAAamB,GACb,IAAIE,EAAY,GAChBZ,EAAMrW,SAAQ,SAACmL,EAAMhM,GACfA,IAAUkX,EAAMnR,OAAS,IAC3B+R,GAAa,IAAM9L,MAGvB,IAAM+L,EAAY,CAChB5U,KAAM2U,EACN/f,KAAMmf,EAAMA,EAAMnR,OAAS,IAE7B4Q,GAAkBoB,IAGd7K,GAAiB,SAAC1W,GACT,eAATA,GACF+R,GAAiB,GAEN,gBAAT/R,GACFkR,EAAQhJ,QAAQyO,QAEL,kBAAT3W,IACFmR,EAAUjJ,QAAQa,WAAY,EAC9BoI,EAAUjJ,QAAQ0O,iBAAkB,EACpCzF,EAAUjJ,QAAQyO,UAIhBE,GAAU,SAACxO,GACf,GAAKA,EAAMyO,iBAAX,CACA,IAAMlN,EAASvB,EAAMuB,OAAS2H,EAAcrJ,QACxC6O,EAAwB/G,KAAKC,MAAMrG,EAAS0H,EAAapJ,QAAU,KACvEuL,GAAsBsD,KAGlBC,GAAe,SAACC,GAA6B,IAAvB1V,EAAsB,uDAAf,WAE3B2V,EAAUC,IAAIC,gBAAgBH,GAG9BI,EAAOC,SAASC,cAAc,KAGpCF,EAAKG,KAAON,EACZG,EAAKI,SAAWlW,EAGhB+V,SAASI,KAAKC,YAAYN,GAE1B,IAAMO,EAAe,SAAfA,IACJnX,YAAW,WACT0W,IAAIU,gBAAgBX,GACpBG,EAAK/O,oBAAoB,QAASsP,KACjC,MAGLP,EAAKlP,iBAAiB,QAASyP,GAAc,GAI7CP,EAAKS,cACH,IAAIC,WAAW,QAAS,CACtBC,SAAS,EACTC,YAAY,EACZC,KAAM1S,UAKV8R,SAASI,KAAKS,YAAYd,IAGtBe,GAAkB,uCAAG,WAAOpY,EAAMqY,GAAb,qBAAAnP,EAAA,sEACJ+B,GAAmBoN,EAAW/O,IAAKuN,IAD/B,QACnBzN,EADmB,QAEdlJ,MACTyT,IAAkB,IAGlBpC,EAAcrJ,QAAUqJ,EAAcrJ,QAAUkB,EAAOzG,KAAKyB,KAExDkU,EAAWD,EAAWrY,KACtBuY,EAAWF,EAAWzV,IACtBqU,EAAO,IAAIuB,KAAK,CAACpP,EAAOzG,MAAO,CAAE3C,KAAMsY,IAC9B,WAATtY,EAAmBsV,GAAYtL,KAAKuO,EAAUtB,GAChC,SAATjX,GAAiBgX,GAAaC,EAAMsB,IAZtB,2CAAH,wDAgBlBE,GAAW,uCAAG,WAAOjV,EAAGb,GAAV,6BAAAuG,EAAA,yDACD,eAAbvG,EAAK+V,KACP3G,GAAiB,GAEF,gBAAbpP,EAAK+V,KACPxH,EAAQhJ,QAAQyO,QAED,kBAAbhU,EAAK+V,MACPvH,EAAUjJ,QAAQa,WAAY,EAC9BoI,EAAUjJ,QAAQ0O,iBAAkB,EACpCzF,EAAUjJ,QAAQyO,SAEH,aAAbhU,EAAK+V,IAZS,oBAahBjF,GAAsB,GACtBE,IAAkB,GAClB9B,GAAoB,GACpBQ,GAAc,IACVoC,KAAiBA,GAAc9H,KAjBnB,wBAmBV1D,EAAW,IAAIgB,UACVd,OAAO,OAAQsL,GAAc9G,IApBxB,UAsBO3C,GAAc/B,GAtBrB,QAsBRG,EAtBQ,OAuBRuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAAS0E,GAAcrQ,MAC9CmN,EAAcrJ,QAAU,EACf4H,EAAI,EA3BC,aA2BEA,EAAI6I,EAAYpJ,QA3BlB,kCA4BN6I,GAAmB,OAAQO,EAAY7I,IA5BjC,QA2B0BA,IA3B1B,wBA8BduC,GAAc,GA9BA,YAuCZsC,KAAmBA,GAAgBhH,GAvCvB,wBAwCdkE,GAAoB,GACpBQ,GAAc,IACVpJ,EAAW,IAAIgB,UACVd,OAAO,SAAUwL,GAAgBhH,IAE1C2H,GAAcF,GAAIe,OAAOxB,GAAgBpT,MA7C3B,UA+COwJ,GAAiB9B,GA/CxB,QA+CRG,EA/CQ,OAgDRuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAC5B7I,EAAI,EAjDC,aAiDEA,EAAI6I,EAAYpJ,QAjDlB,kCAkDN6I,GAAmB,SAAUO,EAAY7I,IAlDnC,QAiD0BA,IAjD1B,wBAqDdsF,GAAIyD,cAAc,CAAE7Y,KAAM,SACvByC,MAAK,SAAUqW,GACdC,kBAAOD,EAASnE,GAAgBpT,MAChC8Q,GAAc,MAxDJ,4CAAH,wDA8Db2G,GAAe,EACbC,GAAU,uCAAG,WAAO1P,EAAOC,EAAOC,GAArB,qBAAAP,EAAA,6DACbD,EAAW,IAAIgB,UACVd,OAAO,OAAQI,EAAMS,MAC9Bf,EAASE,OAAO,QAASI,EAAM2P,OAC/BjQ,EAASE,OAAO,SAAUI,EAAM4P,QAChClQ,EAASE,OAAO,YAAaI,EAAMR,WACnCE,EAASE,OAAO,eAAgB,eANf,SAQCH,GAAiBC,GARlB,cAQXvG,EARW,QASTxC,OAAO2T,IAAgB,GATd,UAWMxK,GACrB3G,EAAIC,KAAKA,KAAK0V,WACd9O,EAAM5G,KACN6G,EACAC,GAfe,eAWX2P,EAXW,QAiBJlZ,OAAO2T,IAAgB,GAChCwF,EAAOD,EAASzW,KAAK2W,QAAd,KAlBM,kBAmBV,CACL,KAAQD,EAAKE,UAAU,EAAGF,EAAK9J,OAAS,GACxC,WAAchG,EAAM4P,SArBL,4CAAH,0DAyBVK,GAAe,uCAAG,WAAOC,EAAWC,GAAlB,yBAAAxQ,EAAA,6DAElBD,EAAW,IAAIgB,UACVd,OAAO,OAAQsQ,EAAUzP,MAClCf,EAASE,OAAO,eAAgB,cAChCF,EAASE,OAAO,WAAYsQ,EAAUzP,KAAKhK,MAC3CiJ,EAASE,OAAO,YAAasQ,EAAU1Q,WAEnC4Q,EAAW,IAAIC,MAAM,GACnBC,EAAmB,SAACjQ,EAAQJ,GAC5BI,EAAS6P,EAAUzP,KAAK5F,OAC1BwF,EAAS6P,EAAUzP,KAAK5F,MAE1BuV,EAASnQ,GAASI,EAClB,IAAMkQ,EAAMH,EAASI,QAAO,SAAC7Q,EAAGsN,GAAJ,OAAUtN,EAAIsN,IAAG,GAC7C5N,QAAQkB,KAAKkP,GAAec,GAAOJ,EAAgB,KACnDnG,GAAiByG,YAAYhB,GAAec,GAAOJ,EAAgB,KAAKO,QAAQ,KAhB5D,SAmBJjR,GAAiBC,GAnBb,cAmBhBvG,EAnBgB,QAoBdxC,OAAO2T,IAAgB,GApBT,UAqBK9J,GAAiBrH,EAAIC,KAAKA,KAAK0V,WAAYoB,EAAUzP,KAAM6P,GArBhE,eAqBhBK,EArBgB,QAsBLha,OAAO2T,IAAgB,GACxCjL,QAAQkB,IAAIoQ,GAvBU,UAyBCvP,GAAe8O,EAAUzP,KAAKzI,KAAMkY,EAAU1Q,UAAW0Q,EAAUzP,KAAKhK,KAAMyZ,EAAUzP,KAAK5F,MAzB9F,eAyBhB+V,EAzBgB,QA0BTja,OAAO2T,IAAgB,GA1Bd,kBA2BfsG,EAASxX,MA3BM,4CAAH,wDA8BfyX,GAAY,uCAAG,WAAOC,EAAQX,GAAf,yBAAAxQ,EAAA,6DACfqB,EAAQ,GAERhB,EAAQ8Q,EAAO,GAEfV,EAAW,IAAIC,MAAMS,EAAO9K,QAC1BsK,EAAmB,SAACjQ,EAAQJ,GAChCmQ,EAASnQ,GAASI,EAClB,IAAMkQ,EAAMH,EAASI,QAAO,SAAC7Q,EAAGsN,GAAJ,OAAUtN,EAAIsN,IAAG,GAC7C5N,QAAQkB,KAAKkP,GAAec,GAAOJ,EAAgB,KACnDnG,GAAiByG,YAAYhB,GAAec,GAAOJ,EAAgB,KAAKO,QAAQ,KAE5EK,EAAWD,EAAOE,KAAI,SAACC,EAAGhR,GAAJ,OAAcyP,GAAWuB,EAAGhR,EAAOqQ,MAZ5C,SAaLrR,QAAQiS,IAAIH,GAbP,cAanB/P,EAbmB,iBAeID,GAAoBf,EAAMS,KAAMT,EAAMR,UAAWwB,EAAOhB,EAAM2P,MAAO3P,EAAMvJ,KAAMuJ,EAAMnF,MAf3F,eAeb+V,EAfa,QAgBNja,OAAO2T,IAAgB,GAhBjB,kBAiBZsG,EAASxX,MAjBG,4CAAH,wDAoBZ+X,GAAkB,SAAC1Q,GACvB,IAAI2Q,EAAiB5K,SAAS/F,EAAK5F,KAAO6Q,IAE1C,OADajL,EAAK5F,KAAO6Q,GAAaC,GAAcyF,EAAiBA,EAAiB,GAgBlFC,GAAgB,uCAAG,WAAOpX,GAAP,mDAAA0F,EAAA,yDACnBuM,EAAW,GAEXoF,GAAY,EACZnB,EAAgB,EACpBxP,OAAO4Q,OAAOtX,EAAEC,OAAOyQ,OAAO7J,SAAQ,SAACL,GACjCA,EAAK5F,KAAO+Q,KACdtE,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,gDACL/L,KAAK,UAEP,CACE8N,SAAU+C,KAAMmK,SAASC,WACzBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAGf4Z,GAAY,GAEd7Q,EAAK2L,UAAW,EAChB+D,GAAiB1P,EAAK5F,KACtBqR,EAASrG,KAAKpF,OAEZ6Q,EA3BmB,iDA6BvB9G,IAAkB,SAACD,GAAD,OAAqBA,EAAgB4B,OAAOD,MAC9DtC,GAAaD,GAAa1P,EAAEC,OAAOyQ,MAAM3E,QACrCtB,gBACFyC,iBAAO4K,YAAY,CAAE1K,YAAa,iBAElCe,GAAkB,GAEpBQ,GAAY,GACZ0B,IAAgB,GAEZuF,EAAW,GAvCQ,MAwCN3D,EAxCM,gDAwCdzL,EAxCc,MA0CZ5F,KAAO8Q,IA1CK,wBA4CbvS,EAAO,CACX,KAAQqH,EACR,UAAa8V,IA9CI,UAiDQtG,GAAgB7W,EAAM+W,GAjD9B,QAiDbQ,EAjDa,OAkDnBd,EAAShK,KAAK8K,EAAavX,MAlDR,+BAqDb4Y,EAAcb,GAAgB1Q,GAChCmP,EAAS,EAtDM,UAuDDrO,GAAqBd,EAAKzI,KAAMue,IAvD/B,QA4DnB,KALMpd,EAvDa,QAwDXxC,OAAO2T,IAAgB,GACzBqF,EAAQxW,EAAIC,KAAKA,KAAK6Y,OACxBnB,EAAS,GACToB,EAAU,EACPtC,GAAUoC,GACXG,EAAazG,GACbjL,EAAK5F,KAAOqX,EAAUxG,GAAaC,KACrCwG,EAAa1R,EAAK5F,KAAOqX,GAEvBxE,EAAOjN,EAAK2R,MAAMF,EAASC,EAAaD,GAC5CpB,EAAOjL,KAAK,CACV,KAAQpF,EAAKzI,KACb,KAAQyI,EAAKhK,KACb,KAAQgK,EAAK5F,KACb,MAAS8U,EACT,OAAUC,EACV,UAAa2G,GACb,KAAQ7I,IAEVwE,GAAWC,EACXvC,IA5EiB,iBA8EQiB,GAAaC,EAAQX,GA9E7B,QA8EbQ,EA9Ea,OA+EnBd,EAAShK,KAAK8K,EAAavX,MA/ER,QAiFrBqW,IAAgBhP,EAAK5F,KAjFA,oCAmFvB4U,GAAe,EAEf/K,iBAAgB8F,GAAkB,IAC9B6H,EAtFmB,YAsFL1H,IAClBkF,EAAS/O,SAAQ,SAACL,GAChB4R,EAAQxM,KAAKpF,MAEfmK,GAASyH,GACTzJ,GAAY,GACZgB,GAAa,GACbI,GAAiB,GACbtF,iBACF4C,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,qCACL/L,KAAK,WAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBA1GM,4CAAH,sDA8HhB6a,GAAkB,uCAAG,WAAOtY,GAAP,2DAAA0F,EAAA,yDACrBD,EAAW,IAAIgB,SACflB,EAAY,GACZ0M,EAAW,GAEXoF,GAAY,EACZnB,EAAgB,EACpBxP,OAAO4Q,OAAOtX,EAAEC,OAAOyQ,OAAO7J,SAAQ,SAACL,GACjCA,EAAK5F,KAAO+Q,KACdtE,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,gDACL/L,KAAK,UAEP,CACE8N,SAAU+C,KAAMmK,SAASC,WACzBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAGf4Z,GAAY,GAEd7Q,EAAK2L,UAAW,EAChBF,EAASrG,KAAKpF,GACd0P,GAAiB1P,EAAK5F,KACtB2E,EAAYiB,EAAK+R,sBAEnB9S,EAASE,OAAO,YAAatI,EAAMyO,SAASrN,MAAM0L,KAE9CkN,EAhCqB,kDAkCrBmB,EAAM,IACN5M,KAAK,CACP7N,KAAMwH,EAAUkN,MAAM,KAAK,GAC3BgG,MAAOzY,EAAEC,OAAOyQ,MAAM3E,OACtBoG,UAAU,IAGZ1B,IAAoB,SAACD,GAAD,OAAuBA,EAAkB0B,OAAOsG,MACpE7I,GAAaD,GAAa,GAC1BvB,GAAkB,GAClBQ,GAAY,GACZ0B,IAAgB,GAEZuF,EAAW,GA/CU,MAgDR3D,EAhDQ,gDAgDhBzL,EAhDgB,MAkDd5F,KAAO8Q,IAlDO,wBAmDfvS,EAAO,CACX,KAAQqH,EACR,UAAajB,EAAUkN,MAAM,KAAK,IArDf,UAwDMuD,GAAgB7W,EAAM+W,GAxD5B,QAwDfQ,EAxDe,OAyDrBd,EAAShK,KAAK8K,EAAavX,MAzDN,+BA4Df4Y,EAAcb,GAAgB1Q,GAChCmP,EAAS,EA7DQ,UA8DHrO,GAAqBd,EAAKzI,KAAMwH,EAAUkN,MAAM,KAAK,IA9DlD,QAmErB,KALMvT,EA9De,QA+DbxC,OAAO2T,IAAgB,GACzBqF,EAAQxW,EAAIC,KAAKA,KAAK6Y,OACxBnB,EAAS,GACToB,EAAU,EACPtC,GAAUoC,GACXG,EAAazG,GACbjL,EAAK5F,KAAOqX,EAAUxG,GAAaC,KACrCwG,EAAa1R,EAAK5F,KAAOqX,GAEvBxE,EAAOjN,EAAK2R,MAAMF,EAASC,EAAaD,GAC5CpB,EAAOjL,KAAK,CACV,KAAQpF,EAAKzI,KACb,KAAQyI,EAAKhK,KACb,KAAQgK,EAAK5F,KACb,MAAS8U,EACT,OAAUC,EACV,UAAapQ,EAAUkN,MAAM,KAAK,GAClC,KAAQgB,IAEVwE,GAAWC,EACXvC,IAnFmB,iBAqFMiB,GAAaC,EAAQX,GArF3B,QAqFfQ,EArFe,OAsFrBd,EAAShK,KAAK8K,EAAavX,MAtFN,QAwFvBqW,IAAgBhP,EAAK5F,KAxFE,2CA0FzB4U,GAAe,EA1FU,UA2FPpO,GAAqB7B,EAAUkN,MAAM,KAAK,GAAIpV,EAAMyO,SAASrN,MAAM0L,IA3F5D,SA2FnBjL,EA3FmB,QA4FjBxC,OAAO2T,IAAgB,IAEzB+H,EAAU,IACRxM,KAAK1M,GACbsS,IAAW,SAACD,GAAD,OAAaA,EAAQW,OAAOkG,MACvCzJ,GAAY,GACZgB,GAAa,GACbI,GAAiB,GACbtF,iBACF4C,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,qCACL/L,KAAK,WAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAhHQ,4CAAH,sDAsHlBib,GAAa,WACjBvK,GAAkB,GAClBE,GAAoB,GACpBwB,GAAkB,GAClBU,GAAkB,IAClBE,GAAoB,KAYhBkI,GAAmB,WACvBpK,GAAiB,IAkCbsK,GAA0B,SAACrc,GAC/B6S,IAAe,GACF,WAAT7S,GACFkR,EAAQhJ,QAAQyO,QAEL,kBAAT3W,GACF+R,GAAiB,IAIfuK,GAAyB,WAC7BvJ,IAAc,IAKVwJ,GAAsB,uCAAG,WAAOvc,GAAP,qBAAAkJ,EAAA,yDAC7B6J,IAAc,GACD,aAAT/S,EAFyB,oBAG3ByT,GAAsB,GACtBE,IAAkB,IACdc,GALuB,wBAMzB5C,GAAoB,GACpBQ,GAAc,GACdzJ,QAAQkB,IAAI2K,KAERxL,EAAW,IAAIgB,UACVd,OAAO,OAAQsL,GAAc9G,IAXb,UAaJ3C,GAAc/B,GAbV,QAanBG,EAbmB,OAcnBuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAAS0E,GAAcrQ,MAC9CmN,EAAcrJ,QAAU,EAEf4H,EAAI,EAnBY,aAmBTA,EAAI6I,EAAYpJ,QAnBP,kCAoBjB6I,GAAmB,OAAQO,EAAY7I,IApBtB,QAmBeA,IAnBf,wBAsBzBuC,GAAc,GAEdxB,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,wDACL/L,KAAK,aAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBAnCU,QAkEhB,UAATjB,GACF4I,QAAQkB,IAAI9J,GAnEe,4CAAH,sDAuEtBwc,GAAOC,aAAW,CACtBC,YAAY,WAAD,4BAAE,WAAOlZ,GAAP,mCAAA0F,EAAA,yDACM,IAAb1F,EAAEsS,OADK,oBAETrD,IAAkB,IACdxE,gBAHK,oBAID+H,EAAMxS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAC7BjW,EAAOwD,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GACxB,MAARD,EANG,oBAOQ,SAAThW,EAPC,oBAQH4U,GAAkB,IAClBnB,GAAsB,GACtBE,IAAkB,GACZ3J,EAAOkK,GAAMgC,MAAK,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MACvDtB,GAAgB1K,GACXxG,EAAEC,OAAOxC,UAAUwL,SAAS,YAb9B,wBAcDoF,GAAoB,GACpBQ,GAAc,IAEVpJ,EAAW,IAAIgB,UACVd,OAAO,OAAQa,EAAK2D,IAlB5B,UAoBoB3C,GAAc/B,GApBlC,QAoBKG,EApBL,OAqBKuP,EAAcvP,EAAOzG,KAAKA,KAAKgW,YAErCrH,EAAapJ,QAAU6H,SAAS/F,EAAK5F,MACrCmN,EAAcrJ,QAAU,EAEf4H,EAAI,EA1BZ,aA0BeA,EAAI6I,EAAYpJ,QA1B/B,kCA2BO6I,GAAmB,OAAQO,EAAY7I,IA3B9C,QA0BuCA,IA1BvC,wBA6BDuC,GAAc,GAEdxB,KAAMkK,KACJ,kBAAC,GAAD,CACEhP,KAAK,wDACL/L,KAAK,aAEP,CACE8N,SAAU+C,KAAMmK,SAASa,cACzBX,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXpa,UAAW,iBA1Cd,gCAyEHyT,GAAgB,IACVyB,EAAS9E,EAAWnJ,QAAQgO,MAChC,SAACC,GAAD,OAAYA,EAAOxI,KAAOoC,SAASiG,MAErCpB,GAAkBuB,GACb3S,EAAEC,OAAOxC,UAAUwL,SAAS,aAC/B5L,EAAMsO,QAAQC,KAAK,CACjBC,SAGQ,MAFNxO,EAAMyO,SAASD,SACbxO,EAAMyO,SAASD,SAASE,OAAS,GADnC,UAGO1O,EAAMyO,SAASD,SAHtB,YAGkC8G,EAAO5U,MAHzC,UAIOV,EAAMyO,SAASD,UAJtB,OAIiC8G,EAAO5U,MAC1CU,MAAO,CAAEV,KAAM4U,EAAO5U,KAAMoM,GAAIwI,EAAOxI,MAtFxC,gCA2FL+G,GAAgB,IAChBE,GAAkB,IA5Fb,gCA+FDoB,EAAMxS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,GAEtB,SADAzS,EAAEC,OAAOkK,GAAGsI,MAAM,KAAK,IAElCrB,GAAkB,IACZ5K,EAAOkK,GAAMgC,MAAK,SAAClM,GAAD,OAAUA,EAAK2D,KAAOoC,SAASiG,MACvDtB,GAAgB1K,KAEhB0K,GAAgB,IACVyB,EAAS9E,EAAWnJ,QAAQgO,MAChC,SAACC,GAAD,OAAYA,EAAOxI,KAAOoC,SAASiG,MAErCpB,GAAkBuB,IA1Gb,gCA8GT1D,IAAkB,GA9GT,4CAAF,mDAAC,KAmHRkK,GAAa,SAAC/N,GAClB,OAAOE,KAAOF,GAAMG,OAAO,iBAK7B,OAFApH,GAAiB,YAAaiO,IAG5B,kBAACjS,EAAD,KACG6N,EACC,yBAAKvQ,UAAU,iBACb,kBAAC,KAAD,CACE2b,OAAQlL,EACRmL,eAAgBX,GAChBjb,UAAU,oBACV6b,iBAAiB,6BAEjB,yBAAK7b,UAAU,gBACb,yBAAKA,UAAU,kBACZ2S,IACC,gDAIAA,KAAqB1B,GACrB,2CACagB,GADb,IAC0BA,GAAa,EAAI,QAAU,OADrD,MACgEI,GADhE,gBAIAM,IAAoB1B,GACpB,8BACGkB,GADH,QAEGA,GAAmB,EAAI,WAAa,UAFvC,cAOJ,yBAAKnS,UAAU,aACb,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QA9RxB,WACpBsQ,GAAaD,KA8ROA,EAeE,yBACExC,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,SAEV,0BACElB,KAAK,UACLE,EAAE,oDAxBR,yBACEc,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,SAEV,0BACElB,KAAK,UACLE,EAAE,uDAoBZZ,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,aAEF,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QAASua,IACnC,yBACE1M,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,6BAASuO,OAAO,+FAItBjP,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,YAIL2S,IACC,yDAEE,yBAAKvM,MAAM,KAAK+F,OAAO,KAAKe,MAAM,8BAChC,2BACE,0BAAMG,OAAO,OAAOX,GAAG,QAAQa,KAAK,UAAUE,EAAE,kaAKtDkF,KAAqB5B,GACrB,yBACE/Q,UACEmS,GAAmB,GAAK,mBAAqB,cAG9ClJ,OAAO4Q,OAAOhH,IAAiByG,KAAI,SAACvQ,EAAM8F,GAAP,OAClC,yBAAK7O,UAAU,OAAO2B,IAAKkN,GACzB,yBAAK7O,UAAU,WACb,yBAAKA,UAAY+I,EAAK2L,SAA4B,OAAjB,gBAC/B,yBAAKnU,IAAKgL,GAAqBxC,GAAOvI,IAAKuI,EAAKzI,QAElD,yBAAKN,UAAY+I,EAAK2L,SAA4B,OAAjB,gBAC/B,8BAAO3L,EAAKzI,MACZ,gCAEF,yBAAKN,UAAU,UACX+I,EAAK2L,SAOH,yBAAK1U,UAAU,QACb,kBAAC+b,GAAA,EAAD,MACG,gBAAGC,EAAH,EAAGA,WAAH,OACC,kBAAC,IAAMnc,SAAP,KACGmc,EACC,yBACE5V,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACV/N,QAAS,kBAhpBd,SAACqI,GAChC,IAAMyK,EAAgBP,GAAMgC,MAAK,SAACgH,EAAK1T,GAAN,OAAgB0T,EAAI3b,OAASyI,EAAKzI,QACnEmT,GAAgBD,GAChB,IAAM0I,EAAezK,GAAc+B,EAAclT,KAAO,cAAgBkT,EAAc9G,GAAK8G,EAAclT,KAAO,aAAekT,EAAc9G,GAC7IyP,YAASC,SAASF,EAAc,CAC9BvM,YAAa,eACb0M,SAAU,KACVC,MAAO,IACPC,OAAQ,EACRC,QAAQ,IAwoB4BC,CAAyB1T,KAG3B,0BAAM0E,EAAE,iHAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,gIA7BxB,kBAAC,KAAD,CACE1O,KAAK,OACLiE,MAAM,UACNhD,UAAU,kBAsCrBiJ,OAAO4Q,OAAO9G,IAAmBuG,KAAI,SAACpE,EAAQrG,GAAT,OACpC,yBAAK7O,UAAU,OAAO2B,IAAKkN,GACzB,yBAAK7O,UAAU,WACb,yBAAKA,UAAYkV,EAAOR,SAA4B,OAAjB,gBACjC,yBACEnG,EAAE,MACFC,EAAE,MACFC,UAAU,QACVtB,QAAQ,YACRhB,OAAO,OACP/F,MAAM,OACNmH,KAAK,WAEL,2BACE,0BAAME,EAAE,gGACR,0BAAMA,EAAE,gBAAgBF,KAAK,YAInC,yBAAKvN,UAAYkV,EAAOR,SAA4B,OAAjB,gBACjC,8BAAOQ,EAAO5U,MACd,8BACI4U,EAAOR,SAAeQ,EAAO8F,MAAX,EADtB,OAC4C9F,EAAO8F,QAGrD,yBAAKhb,UAAU,UACXkV,EAAOR,SAOL,yBAAK1U,UAAU,QACb,kBAAC+b,GAAA,EAAD,MACG,gBAAGC,EAAH,EAAGA,WAAH,OACC,kBAAC,IAAMnc,SAAP,KACGmc,EACC,yBACE5V,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACV/N,QAAS,kBAxlBZ,SAACwU,GAClC,IAAMxB,EAAkBtD,EAAWnJ,QAAQgO,MACzC,SAACgH,EAAK1T,GAAN,OAAgB0T,EAAI3b,OAAS4U,EAAO5U,QAEtCqT,GAAkBD,GAClB,IAAMwI,EAAezK,GAAciC,EAAgBpT,KAAO,gBAAkBoT,EAAgBhH,GAAKgH,EAAgBpT,KAAO,gBAAkBoT,EAAgBhH,GAC1JyP,YAASC,SAASF,EAAc,CAC9BvM,YAAa,eACb0M,SAAU,KACVC,MAAO,IACPC,OAAQ,EACRC,QAAQ,IA8kB4BE,CAA2BxH,KAG7B,0BAAMzH,EAAE,iHAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,gIA7BxB,kBAAC,KAAD,CACE1O,KAAK,OACLiE,MAAM,UACNhD,UAAU,oBAyC5B,kBAAC,KAAD,CACE2b,OAAQhL,EACRiL,eAAgBX,GAChBjb,UAAU,sBACV6b,iBAAiB,+BAEjB,yBAAK7b,UAAU,gBACb,yBAAKA,UAAU,kBACZyS,IACC,kDAIAA,KAAuBtB,GACvB,+CACiBoB,GADjB,gBAIAE,IAAsBtB,GACtB,qDAKJ,yBAAKnR,UAAU,aACb,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QAASua,IACnC,yBACE1M,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,6BAASuO,OAAO,+FAItBjP,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,YAIN,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACZyS,IACC,kDAEE,yBAAKrM,MAAM,KAAK+F,OAAO,KAAKe,MAAM,8BAChC,2BACE,0BAAMG,OAAO,OAAOX,GAAG,QAAQa,KAAK,UAAUE,EAAE,iaAMtDgF,IAAuBtB,GASpBsB,IAAsBtB,EAAgB,gDAEvC,yBACA/K,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,4HAGN,KAnBJ,qDAEA,kBAAC,KAAD,CACI1O,KAAK,OACLiE,MAAM,UACNhD,UAAU,kBAqB1B,kBAAC,KAAD,CACE2b,OAAQ9K,EACR+K,eAAgBV,GAChByB,YAlkBmB,SAACpa,GAC5B4N,EAASlJ,QAAQ2V,QACjBzM,EAASlJ,QAAQ4V,UAikBT7c,UAAU,sBACV6b,iBAAiB,iBAEjB,yBAAK7b,UAAU,gBACb,4CACA,kBAAC,KAAD,CACE4M,QACE,4BAAQ5M,UAAU,UAAUU,QAASwa,IACnC,yBACE3M,EAAE,MACFC,EAAE,MACFpI,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,6BAASuO,OAAO,+FAItBjP,SAAS,gBACTC,GAAG,QACHC,OAAO,GAEP,0BAAM/M,UAAU,WAAhB,WAGJ,yBAAKA,UAAU,cACb,kBAACwD,EAAA,EAAD,CACExD,UAAU,QACVyD,SAjlBc,SAAClB,GAC3BsR,GAAetR,EAAEC,OAAOC,QAilBZqa,aAAa,kBACbC,IAAK5M,KAGT,yBAAKnQ,UAAU,gBACb,4BAAQA,UAAU,MAAMU,QAASwa,IAAjC,SAGA,4BAAQlb,UAAU,WAAWU,QAtlBf,WACxB0J,GAAawJ,GAAkBhU,EAAMyO,SAASrN,MAAM0L,IAAIlL,MAAK,SAACC,GAC5DqP,GAAiB,GACjB,IAAMiK,EAAM,GACZA,EAAI5M,KAAK1M,GACTsS,IAAW,SAACD,GAAD,OAAaA,EAAQW,OAAOsG,MACvC7J,GAAY,GACZ2C,GAAe,mBACfJ,GAAgB,IAChBE,GAAkBlS,QA6kBV,UAKJ,kBAAC,IAAD,CAAoBiL,GAAG,cAAcsQ,QAASzL,IAC5C,kBAAC/L,EAAA,EAAD,CAAStF,GAAIJ,IAAMkG,UAAQ,EAACiX,SAAS,GACnC,kBAACC,EAAA,EAAD,CAAUpS,KAAK,MAAMnH,KAAM,KAAMwZ,SAAO,EAACnd,UAAU,eACjD,kBAACkd,EAAA,EAASpd,KAAV,KACE,kBAACod,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,aACN1c,QAAS,kBAAM+U,GAAe,iBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,eACN1c,QAAS,kBAAM+U,GAAe,kBAEhC,kBAACyH,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,gBACN1c,QAAS,kBAAM+U,GAAe,oBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,cACN1c,QAAS,kBAAM+U,GAAe,oBAIpC,kBAAC3V,EAAA,EAAKG,KAAN,CAAWC,GAAIod,IAAMjd,GAAG,UACtB,yBACE+F,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,UACLkB,UAAU,SAEV,0BAAMhB,EAAE,wNAEV,4CAGJ,yBAAKzN,UAAU,kBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,wBACZ+e,GAAUzF,KAAI,SAAC/E,EAAMhM,GAAP,OACb,kBAAC,IAAM1I,SAAP,CAAgB8B,IAAK4G,GAClBA,IAAUwW,GAAUzQ,OAAS,EAC5B,kBAACxK,EAAA,EAAD,CACE5D,GAAIod,IACJjd,GAAIkU,EAAK7I,KACT6R,cAAc,QACd5Z,KAAK,gBACLkU,QAAStD,EAAKjU,OAGd,kBAAC4c,EAAA,EAAD,CACEpS,KAAMyJ,EAAKjU,KACX6c,SAAO,EACPnd,UAAU,mBAEV,kBAACkd,EAAA,EAASpd,KAAV,KACE,kBAACod,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,aACN1c,QAAS,kBAAM+U,GAAe,iBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,eACN1c,QAAS,kBAAM+U,GAAe,kBAEhC,kBAACyH,EAAA,EAASjd,KAAV,CACE0D,KAAK,iBACLyZ,MAAM,gBACN1c,QAAS,kBAAM+U,GAAe,oBAEhC,kBAACyH,EAAA,EAASG,QAAV,MACA,kBAACH,EAAA,EAASjd,KAAV,CACE0D,KAAK,SACLyZ,MAAM,cACN1c,QAAS,kBAAM+U,GAAe,yBAQ9C,yBAAKzV,UAAU,iBACb,kBAAC8D,EAAA,EAAD,CACE5D,GAAIod,IACJjd,GAAI4e,GAAevT,KACnB6R,cAAc,OACd5Z,KAAK,aACLkU,QAASoH,GAAe3e,QAG5B,yBAAKN,UAAU,gBACb,4BAAQA,UAAU,aAAaU,QA1sBpB,WACzBgR,IAAaD,MA0sBIA,GACC,yBACErL,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BAAME,EAAE,yHAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,0HACR,0BAAMA,EAAE,gBAAgBF,KAAK,WAIrC,4BAAQvN,UAAU,aAAaU,QA7tBtB,WACvBiH,QAAQkB,IAAI,sBA6tBI,yBACEzC,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRI,KAAK,WAEL,0BAAME,EAAE,gBAAgBF,KAAK,SAC7B,0BAAME,EAAE,qKAKhB,yBAAKzN,UAAU,eAAe0M,GAAG,gBAC9BM,iBAAgB6F,GAAgBvE,OAAS,GACxC,yBAAKtO,UAAU,sBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,wCAEF,yBAAKA,UAAU,gBACZ6S,GAAgByG,KAAI,SAAC/E,EAAM1F,GAAP,OACnB,yBAAK7O,UAAU,YACb,kBAAC,GAAD,CAAa2B,IAAKkN,EAAG9F,KAAMwL,WAOvC,yBAAKvU,UAAU,eACZ8T,GAAQxF,OAAS,GAChB,yBACEtO,UACEyR,GACI,wBACA,6BAEN/E,GAAG,iBAEH,yBAAK1M,UAAU,gBAAgB0M,GAAG,iBAChC,wCAEF,yBAAK1M,UAAU,eAAe0M,GAAG,eAC9BoH,GAAQwF,KAAI,SAAC/E,EAAM1F,GAAP,OACX,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACE0T,IACEa,EAAK7H,KAAOgH,GAAgBhH,GAC1B,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,gBAAkBiU,EAAK7H,IAChD,kBAAC0C,GAAD,CACE9O,KAAMiU,EAAKjU,KACXoM,GAAI6H,EAAK7H,GACTO,aAAcoO,YAQ5B,yBAAKrb,UAAU,sBAAsB0M,GAAG,eACtC,yBAAK1M,UAAU,gBAAgB0M,GAAG,eAC/BuG,GAAM3E,OAAS,IACbmD,KAAiBA,IAAezE,kBAC/B,sCAEFyE,KAAgBzE,iBAChB,yBAAKhN,UAAU,aACb,yBAAKA,UAAU,WACb,sCACA,4BAAQ0d,MAAM,YAAYhd,QAASyU,IAChCpD,GACC,yBACE3L,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BAAMA,KAAK,OAAOE,EAAE,oBACpB,0BAAMA,EAAE,sEAGR,yBACErH,MAAM,OACN+F,OAAO,OACPgB,QAAQ,YACRsB,UAAU,QACVlB,KAAK,WAEL,0BAAMA,KAAK,OAAOE,EAAE,oBACpB,0BAAMA,EAAE,2EAKlB,yBAAKzN,UAAU,YACb,wCAEF,yBAAKA,UAAU,eACb,gDAEF,yBAAKA,UAAU,WACb,8CAKR,yBAAKA,UAAU,eAAe0M,GAAG,eAC9B+E,IACCwB,GAAM3E,OAAS,GACf2E,GAAMqG,KAAI,SAAC/E,EAAM1F,GAAP,OACR,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACEwT,IAAiBe,EAAK7H,KAAO8G,GAAc9G,GACvC,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,cAAgBiU,EAAK7H,IAC9C,kBAACH,GAAD,CACEb,KAAM6I,EAAK7I,KACX3M,KAAMwV,EAAKpB,aACX7S,KAAMiU,EAAKjU,KACXoM,GAAI6H,EAAK7H,GACTD,OAAO,SACPQ,aAAcoO,WAKtB5J,IACA,yBAAKzR,UAAU,eACXgN,iBACA8G,GAAQwF,KAAI,SAAC/E,EAAM1F,GAAP,OACV,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACE0T,IACEa,EAAK7H,KAAOgH,GAAgBhH,GAC1B,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,gBAAkBiU,EAAK7H,IAChD,kBAACgB,GAAD,CACEgB,MAAM,GACNC,cAAe4F,EAAKoJ,cACpB5e,KAAK,SACLuB,KAAMiU,EAAKjU,KACX6C,KAAK,GACLuJ,GAAI6H,EAAK7H,GACTO,aAAcoO,UAKvBpI,GAAMqG,KAAI,SAAC/E,EAAM1F,GAAP,OACT,kBAAC,KAAS2O,IAAV,iBACMjC,KADN,CAEEvb,UACEwT,IAAiBe,EAAK7H,KAAO8G,GAAc9G,GACvC,kBACA,WAEN+Q,aAAW,WACX9b,IAAKkN,IAEL,kBAAC,WAAD,CAASvO,KAAMiU,EAAKjU,KAAO,cAAgBiU,EAAK7H,IAC9C,kBAACgB,GAAD,CACEgB,MAAM,GACNC,cAAe4F,EAAKoJ,cACpB5e,KAAMwV,EAAKpB,aACX7S,KAAMiU,EAAKjU,KACX6C,KAAMoR,EAAKpR,KACXuJ,GAAI6H,EAAK7H,GACTO,aAAcoO,aASZ,IAAjBpI,GAAM3E,QAAmC,IAAnBwF,GAAQxF,QAC7B,yBAAKtO,UAAU,gBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QAAf,qBACA,yBAAKA,UAAU,cAAf,qCAOPgN,iBACC,uBACEhN,UAAU,iBACVU,QA/5BY,WAC9BkR,IAAe,QAm6BJ5E,iBACC,kBAAC,IAAMnN,SAAP,KACG8R,IACC,yBAAK3R,UAAU,wBAEjB,kBAAC4d,EAAA,EAAD,CACEC,KAAMlM,GACNmM,QAx6Be,WAC/BlM,IAAe,KAy6BC,kBAACtO,EAAA,EAAD,CAAStD,UAAU,gBACjB,yBAAKA,UAAU,UACb,2CAEF,yBAAKA,UAAU,QACb,yBAAKA,UAAU,YACb,yBACEA,UAAU,OACVU,QAAS,kBACP0a,GAAwB,mBAG1B,yBAAKpb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,YAEb,yBAAKN,UAAU,QACb,kBAACge,EAAA,EAAD,iBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBAAM0a,GAAwB,YAEvC,yBAAKpb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,YAEb,yBAAKN,UAAU,QACb,kBAACge,EAAA,EAAD,iBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBAAM0a,GAAwB,UAEvC,yBAAKpb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,YAEb,yBAAKN,UAAU,QACb,kBAACge,EAAA,EAAD,gBAIN,yBAAKhe,UAAU,YACb,yBACEA,UAAU,OACVU,QAAS,kBACP0a,GAAwB,gBAG1B,yBAAKpb,UAAU,YACb,yBACEO,IAAKiK,GACLhK,IAAI,gBAGR,yBAAKR,UAAU,QACb,kBAACge,EAAA,EAAD,sBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBACP0a,GAAwB,kBAG1B,yBAAKpb,UAAU,YACb,yBACEO,IAAKiK,GACLhK,IAAI,kBAGR,yBAAKR,UAAU,QACb,kBAACge,EAAA,EAAD,wBAGJ,yBACEhe,UAAU,OACVU,QAAS,kBACP0a,GAAwB,kBAG1B,yBAAKpb,UAAU,YACb,yBACEO,IAAKiK,GACLhK,IAAI,kBAGR,yBAAKR,UAAU,QACb,kBAACge,EAAA,EAAD,6BASfhR,iBACC,kBAAC,IAAMnN,SAAP,KACGgS,IAAiB,yBAAK7R,UAAU,wBACjC,kBAAC4d,EAAA,EAAD,CACEC,KAAMhM,GACNiM,QAhgCc,WAC9BhM,IAAc,IAggCEmM,WAAY,CAAEC,UAAW,YAAa7B,SAAU,MAEhD,kBAAC/Y,EAAA,EAAD,CAAStD,UAAU,eACjB,yBAAKA,UAAU,UACZwT,GAAclT,MACb,kBAAC,IAAMT,SAAP,KACG2T,GAAcL,aAAa3H,SAAS,SACnC,yBAAKxL,UAAU,SACb,yBACE8F,MAAO,CACLkG,gBAAgB,OAAD,OAASwH,GAAc9H,KAAvB,KACfO,iBAAkB,YAClBC,eAAgB,QAChB9F,MAAO,GACP+F,OAAQ,OAKZ,yBAAKnM,UAAU,SACb,yBACEO,IAAKgL,GAAqB,CACxBxM,KAAMyU,GAAcL,eAEtB3S,IAAKgT,GAAclT,KACnBN,UAAU,UAIlB,4BAAKwT,GAAclT,OAGtBoT,GAAgBpT,MACf,kBAAC,IAAMT,SAAP,KACE,yBAAKG,UAAU,WACb,yBACEuO,EAAE,MACFC,EAAE,MACFC,UAAU,QACVtB,QAAQ,YACRhB,OAAO,OACP/F,MAAM,OACNmH,KAAK,WAEL,2BACE,0BAAME,EAAE,gGACR,0BAAMA,EAAE,gBAAgBF,KAAK,YAInC,4BAAKmG,GAAgBpT,QAI3B,yBAAKN,UAAU,QACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,uCACA,yBAAKA,UAAU,QACb,2BACGwT,GAAclT,KACXkT,GAAcL,aACd,yBAIV,yBAAKnT,UAAU,QACb,2CACA,yBAAKA,UAAU,QACb,2BAAIif,GAAe3e,QAGvB,yBAAKN,UAAU,QACb,0CACA,yBAAKA,UAAU,QACb,2BACGwT,GAAclT,KACXob,GAAWlI,GAAc2K,cACzBzC,GAAWhI,GAAgByK,iBAIrC,yBAAKne,UAAU,QACb,2CACA,yBAAKA,UAAU,QACb,2BACGwT,GAAclT,KACXob,GAAWlI,GAAcmK,eACzBjC,GAAWhI,GAAgBiK,mBAKtCnK,GAAclT,MACb,yBAAKN,UAAU,SACb,yBACEA,UAAU,OACVU,QAAS,kBAAM4a,GAAuB,cAEtC,yBAAKtb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,cAEb,4CAEF,yBACEN,UAAU,OACVU,QAAS,kBAAM4a,GAAuB,WAEtC,yBAAKtb,UAAU,YACb,kBAAC+d,EAAA,EAAD,CAAMzd,KAAK,qBAEb,gDAUlB,kBAAC,IAAD,CACEoM,GAAG,cACH1M,UAAWuR,GAAiB,eAAiB,WAE5CF,GACC,kBAAC,IAAMxR,SAAP,KACE,kBAAC,IAAD,CAAU6B,KAAM,CAAE+V,IAAK,cAAgB/W,QAAS8W,IAC9C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,mBADb,eAGA,kBAAC,IAAD,CAAU+d,SAAO,IACjB,kBAAC,IAAD,CAAU3c,KAAM,CAAE+V,IAAK,eAAiB/W,QAAS8W,IAC/C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,WADb,gBAEE,2BACEvB,KAAK,OACLuf,QAAM,EACNC,UAAQ,EACR9a,SAAUkW,GACVoD,IAAK9M,KAGT,kBAAC,IAAD,CACEvO,KAAM,CAAE+V,IAAK,iBACb/W,QAAS8W,IAET,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,mBAJb,iBAKE,2BACEvB,KAAK,OACLuf,QAAM,EACNC,UAAQ,EACR5I,iBAAe,EACflS,SAAUoX,GACVkC,IAAK7M,KAGT,kBAAC,IAAD,CAAUmO,SAAO,IACjB,kBAAC,IAAD,CAAU3c,KAAM,CAAE+V,IAAK,cAAgB/W,QAAS8W,IAC9C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,WADb,iBAKA,kBAAC,IAAMT,SAAP,KACE,kBAAC,IAAD,CAAU6B,KAAM,CAAE+V,IAAK,YAAc/W,QAAS8W,IAC5C,kBAACuG,EAAA,EAAD,CAAMzd,KAAK,mBADb,iBASV,kBAACgD,EAAA,EAAD,CAAStD,UAAU,eACjB,kBAACwe,GAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,GAAA,EAAD,CAAQxb,KAAK,cCniEdod,GAAc,kBACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOngB,OAAK,EAACsL,KAAK,IAAI8U,UAAW3a,IACjC,kBAAC,IAAD,CAAO6F,KAAK,SAAS8U,UAAWC,IAChC,kBAAC,IAAD,CAAO/U,KAAK,UAAU8U,UAAWE,IACjC,kBAAC,IAAD,CAAOC,OAAQ,kBAAM,kBAAC,IAAD,CAAUtgB,GAAG,YAK3BugB,GAAe,kBAC1B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOxgB,OAAK,EAACsL,KAAK,IAAI8U,UAAW3a,IACjC,kBAAC,IAAD,CAAO6F,KAAK,SAASiV,OAAQ,kBAAM,kBAAC,IAAD,CAAUtgB,GAAG,cAChD,kBAAC,IAAD,CAAOqL,KAAK,UAAUiV,OAAQ,kBAAM,kBAAC,IAAD,CAAUtgB,GAAG,cACjD,kBAAC,IAAD,CAAOD,OAAK,EAACsL,KAAK,SAAS8U,UAAW1Q,KACtC,kBAAC,IAAD,CAAOpE,KAAK,eAAe8U,UAAW5B,QCtBtCiC,G,kLAEFlhB,KAAKC,MAAMkhB,gB,+BAIX,OACE,kBAAC,IAAD,KACGnhB,KAAKC,MAAMmhB,gBAAkB,kBAAC,GAAD,MAAmB,kBAAC,GAAD,W,GARvClgB,aA0BHE,gBAZS,SAACC,GACvB,MAAO,CACL+f,gBAAsC,OAArB/f,EAAMC,KAAKnC,UAIL,SAACS,GAC1B,MAAO,CACLuhB,YAAa,kBAAMvhB,GfuDd,SAACA,GACN,IAAMT,EAAQK,aAAauI,QAAQ,SACnC,GAAc,OAAV5I,EAAgB,CAClB,IAAM8C,EAAiB,IAAIC,KAAK1C,aAAauI,QAAQ,mBACjD9F,GAAkB,IAAIC,KACxBtC,EAASL,MAETK,EAASV,EAAYC,IACrBS,EACEF,GACGuC,EAAeE,WAAY,IAAID,MAAOC,WAAa,ee7DjDf,CAA6C8f,IC1BtDG,GAAcC,QACW,cAA7B1c,OAAO8J,SAAS6S,UAEe,UAA7B3c,OAAO8J,SAAS6S,UAEhB3c,OAAO8J,SAAS6S,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT7f,MAAK,SAAAigB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3gB,QACfsgB,UAAUC,cAAcO,WAK1Bna,QAAQkB,IAAI,6CAKZlB,QAAQkB,IAAI,4CAMrB7G,OAAM,SAAA/C,GACL0I,QAAQ1I,MAAM,4CAA6CA,M,uBC/EpD8iB,GAAe,SAACC,EAAWC,GACtC,OAAO,2BACFD,GACAC,ICADC,GAAY,SAAClhB,EAAOmhB,GACxB,OAAOJ,GAAa/gB,EAAO,CACzB/B,MAAO,KACPiC,SAAS,KAIPrC,GAAc,SAACmC,EAAOmhB,GAC1B,OAAOJ,GAAa/gB,EAAO,CACzBlC,MAAOqjB,EAAOrjB,MACdG,MAAO,KACPiC,SAAS,KAIPlC,GAAW,SAACgC,EAAOmhB,GACvB,OAAOJ,GAAa/gB,EAAO,CACzB/B,MAAOkjB,EAAOljB,MACdiC,SAAS,KAIPkhB,GAAa,SAACphB,EAAOmhB,GACzB,OAAOJ,GAAa/gB,EAAO,CACzBlC,MAAO,QAmBIujB,GAfC,WAAyB,IAAxBrhB,EAAuB,uDAAf,GAAImhB,EAAW,uCACtC,OAAQA,EAAOpjB,MACb,IjBjCsB,aiBkCpB,OAAOmjB,GAAUlhB,GACnB,IjBlCwB,eiBmCtB,OAAOnC,GAAYmC,EAAOmhB,GAC5B,IjBnCqB,YiBoCnB,OAAOnjB,GAASgC,EAAOmhB,GACzB,IjBpCuB,ciBqCrB,OAAOC,GAAWphB,GACpB,QACE,OAAOA,ICjCPshB,GAAkB/d,OAAOge,sCAAwCC,KAEjEC,GAAcC,aAAgB,CAClCzhB,KAAM0hB,KAGFC,GAAe,CACnB3hB,KAAM,CACJnC,MAAOK,aAAauI,QAAQ,SAC5BzI,MAAO,KACPiC,SAAS,IAIP2hB,GAAQC,aACZL,GACAG,GACAN,GAAgBS,aAAgBC,QAG5BC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,GAAD,OAIJK,IAASvC,OAAOsC,GAAK5M,SAAS8M,eAAe,SHf9B,WACb,GAA6C,kBAAmB7B,UAAW,CAGzE,GADkB,IAAIpL,IAAIN,GAAwBrR,OAAO8J,UAC3C+U,SAAW7e,OAAO8J,SAAS+U,OAIvC,OAGF7e,OAAO2C,iBAAiB,QAAQ,WAC9B,IAAMma,EAAK,UAAMzL,GAAN,sBAEPoL,KAiDV,SAAiCK,GAE/BgC,MAAMhC,GACH7f,MAAK,SAAA2W,GAGkB,MAApBA,EAASmL,SACuD,IAAhEnL,EAASE,QAAQlO,IAAI,gBAAgBoZ,QAAQ,cAG7CjC,UAAUC,cAAciC,MAAMhiB,MAAK,SAAAigB,GACjCA,EAAagC,aAAajiB,MAAK,WAC7B+C,OAAO8J,SAASqV,eAKpBtC,GAAgBC,MAGnBrf,OAAM,WACL2F,QAAQkB,IACN,oEArEA8a,CAAwBtC,GAIxBC,UAAUC,cAAciC,MAAMhiB,MAAK,WACjCmG,QAAQkB,IACN,gHAMJuY,GAAgBC,OGZxBuC,K","file":"static/js/main.9220c95a.chunk.js","sourcesContent":["export const config = {\n  BASE_URL: \"http://127.0.0.1:8000\",\n  PROD_BASE_URL: \"http://13.231.79.118:8080\"\n};\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport { config } from \"../../config\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(`${config.PROD_BASE_URL}/rest-auth/login/`, {\n        username: username,\n        password: password,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios\n      .post(`${config.PROD_BASE_URL}/rest-auth/registration/`, {\n        username: username,\n        email: email,\n        password1: password1,\n        password2: password2,\n      })\n      .then((res) => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (token !== null) {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../store/actions/auth\";\n\nclass CustomLayout extends React.Component {\n  render() {\n    const { authenticated } = this.props;\n    return (\n      <React.Fragment>\n        <Menu fixed=\"top\" className=\"navbar\">\n          <Menu.Item\n            as={NavLink}\n            exact\n            to=\"/\"\n            name=\"Home\"\n            className=\"nav-brand\"\n          >\n            <img src={\"/static/logo.png\"} alt=\"logo\"></img>\n          </Menu.Item>\n          <div className=\"end-nav\">\n            {authenticated ? (\n              <React.Fragment>\n                <Menu.Item\n                  as={NavLink}\n                  exact\n                  to=\"/drive\"\n                  name=\"My Drive\"\n                ></Menu.Item>\n                <Menu.Item header onClick={() => this.props.logout()}>\n                  Logout\n                </Menu.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Menu.Item header as={NavLink} exact to=\"/login\">\n                  Login\n                </Menu.Item>\n                <Menu.Item header as={NavLink} exact to=\"/signup\">\n                  Signup\n                </Menu.Item>\n              </React.Fragment>\n            )}\n          </div>\n        </Menu>\n        {this.props.children}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: () => dispatch(logout()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CustomLayout)\n);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { authLogin } from \"../store/actions/auth\";\nimport Layout from \"../containers/Layout\";\n\nconst Login = (props) => {\n  const { error, loading } = props;\n  const [user, setUser] = useState({});\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.login(user.username, user.password);\n  };\n\n  return (\n    <Layout>\n      <div className=\"login-page\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column className=\"login\">\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n            {error && <p>{error.message}</p>}\n\n            <React.Fragment>\n              <Form size=\"large\" onSubmit={handleSubmit}>\n                <Segment stacked>\n                  <Form.Input\n                    onChange={handleChange}\n                    value={user.username}\n                    name=\"username\"\n                    fluid\n                    icon=\"user\"\n                    iconPosition=\"left\"\n                    placeholder=\"Username\"\n                  />\n                  <Form.Input\n                    onChange={handleChange}\n                    fluid\n                    value={user.password}\n                    name=\"password\"\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                  />\n\n                  <Button\n                    color=\"teal\"\n                    fluid\n                    size=\"large\"\n                    loading={loading}\n                    disabled={loading}\n                  >\n                    Login\n                  </Button>\n                </Segment>\n              </Form>\n              <Message>\n                New to us? <NavLink to=\"/signup\">Sign Up</NavLink>\n              </Message>\n            </React.Fragment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (username, password) => dispatch(authLogin(username, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { authSignup } from \"../store/actions/auth\";\nimport Layout from \"../containers/Layout\";\n\nconst Signup = (props) => {\n  const { error, loading } = props;\n  const [user, setUser] = useState({});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.signup(user.username, user.email, user.password1, user.password2);\n  };\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Layout>\n      <div className=\"login-page\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column className=\"login\">\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Signup to your account\n            </Header>\n            {error && <p>{props.error.message}</p>}\n\n            <React.Fragment>\n              <Form size=\"large\" onSubmit={handleSubmit}>\n                <Segment stacked>\n                  <Form.Input\n                    onChange={handleChange}\n                    value={user.username}\n                    name=\"username\"\n                    fluid\n                    icon=\"user\"\n                    iconPosition=\"left\"\n                    placeholder=\"Username\"\n                  />\n                  <Form.Input\n                    onChange={handleChange}\n                    value={user.email}\n                    name=\"email\"\n                    fluid\n                    icon=\"mail\"\n                    iconPosition=\"left\"\n                    placeholder=\"E-mail address\"\n                  />\n                  <Form.Input\n                    onChange={handleChange}\n                    fluid\n                    value={user.password1}\n                    name=\"password1\"\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                  />\n                  <Form.Input\n                    onChange={handleChange}\n                    fluid\n                    value={user.password2}\n                    name=\"password2\"\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    placeholder=\"Confirm password\"\n                    type=\"password\"\n                  />\n\n                  <Button\n                    color=\"teal\"\n                    fluid\n                    size=\"large\"\n                    loading={loading}\n                    disabled={loading}\n                  >\n                    Signup\n                  </Button>\n                </Segment>\n              </Form>\n              <Message>\n                Already have an account? <NavLink to=\"/login\">Login</NavLink>\n              </Message>\n            </React.Fragment>\n          </Grid.Column>\n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    token: state.auth.token,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: (username, email, password1, password2) =>\n      dispatch(authSignup(username, email, password1, password2)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport {\n  Grid,\n  Header,\n  Image,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility,\n} from \"semantic-ui-react\";\nimport Layout from \"../containers/Layout\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n\n  render() {\n    const { children } = this.props;\n    const { fixed } = this.state;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        />\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nconst ResponsiveContainer = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport const Home = () => (\n  <Layout>\n    <ResponsiveContainer>\n      <Segment style={{ padding: \"8em 0em\" }} vertical>\n        <Grid container stackable verticalAlign=\"middle\">\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n                We Help Companies and Companions\n              </Header>\n              <p style={{ fontSize: \"1.33em\" }}>\n                We can give your company superpowers to do things that they\n                never thought possible. Let us delight your customers and\n                empower your needs... through pure data analytics.\n              </p>\n              <Header as=\"h3\" style={{ fontSize: \"2em\" }}>\n                We Make Bananas That Can Dance\n              </Header>\n              <p style={{ fontSize: \"1.33em\" }}>\n                Yes that's right, you thought it was the stuff of dreams, but\n                even bananas can be bioengineered.\n              </p>\n            </Grid.Column>\n            <Grid.Column floated=\"right\" width={6}>\n              <Image\n                bordered\n                rounded\n                size=\"large\"\n                src=\"https://i.ytimg.com/vi/kxzg_QXrV_k/maxresdefault.jpg\"\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </ResponsiveContainer>\n  </Layout>\n);\n","import { useRef, useEffect } from \"react\";\n\nexport const useEventListener = (eventName, handler, element = window) => {\n  // Create a ref that stores handler\n  const savedHandler = useRef();\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(\n    () => {\n      // Make sure element supports addEventListener\n      // On\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return;\n\n      // Create event listener that calls handler function stored in ref\n      const eventListener = (event) => savedHandler.current(event);\n\n      // Add event listener\n      element.addEventListener(eventName, eventListener);\n\n      // Remove event listener on cleanup\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    },\n    [eventName, element] // Re-run if eventName or element changes\n  );\n};\n","import axios from \"axios\";\nimport { config } from \"../config\";\n\nexport const getFiles = () => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${config.PROD_BASE_URL}/api-upload/get/`, {\n        token: localStorage.getItem(\"token\"),\n      })\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n        reject(err);\n      });\n  });\n};\n\nexport const getFilesByDirectory = (directory) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${config.PROD_BASE_URL}/api-upload/get-directory-files`, {\n        token: localStorage.getItem(\"token\"),\n        directory,\n      })\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n        reject(err);\n      });\n  });\n};\n\nexport const getSignedPostUrl = async (formData) => {\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  try {\n    const result = await axios.post(`${config.PROD_BASE_URL}/api-upload/getsignedurl/`, formData);\n    return { error: null, data: result };\n  } catch (error) {\n    return { error: error, data: null };\n  }\n};\n\nexport const uploadChunk = async (url, chunk, index, callback) => {\n\n  let config = {\n    onUploadProgress: progressEvent => {\n      callback(progressEvent.loaded, index);\n    },\n  };\n\n  try {\n    const result = await axios.put(url, chunk, config);\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\nexport const uploadSingleFile = async (data, file, callback) => {\n\n  const formData = new FormData();\n  Object.keys(data.fields).forEach(key => {\n    formData.append(key, data.fields[key]);\n  });\n\n  // Actual file has to be appended last.\n  formData.append(\"file\", file);\n\n  let config = {\n    onUploadProgress: progressEvent => {\n      callback(progressEvent.loaded, 0);\n    },\n  };\n\n  try {\n    const result = await axios.post(data.url, formData, config);\n    return { error: null, data: result };\n  } catch (error) {\n    console.log('error', error);\n    return { error: error, data: null };\n  }\n\n};\n\nexport const completeMultiUpload = async (file, directory, parts, uploadId, type, size) => {\n\n  var formData = new FormData();\n  formData.append('uploadId', uploadId);\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  formData.append(\"file\", file);\n  formData.append(\"type\", type);\n  formData.append(\"size\", size);\n  formData.append(\"directory\", directory);\n\n  formData.append('parts', JSON.stringify(parts));\n\n  try {\n    const result = await axios\n      .post(`${config.PROD_BASE_URL}/api-upload/completeUpload/`, formData);\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\nexport const completeUpload = async (file, directory, type, size) => {\n\n  var formData = new FormData();\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  formData.append(\"file\", file);\n  formData.append(\"type\", type);\n  formData.append(\"size\", size);\n  formData.append(\"directory\", directory);\n\n  try {\n    const result = await axios\n      .post(`${config.PROD_BASE_URL}/api-upload/complete_file_upload/`, formData);\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\nexport const completeFolderUpload = async (directory, parentId) => {\n\n  var formData = new FormData();\n  formData.append('parentId', parentId);\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  formData.append(\"directory\", directory);\n\n  try {\n    const result = await axios\n      .post(`${config.PROD_BASE_URL}/api-upload/completeFolderUpload/`, formData);\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\n\nexport const getMultiPartUploadId = async (file, directory) => {\n\n  var formData = new FormData();\n  formData.append('file', file);\n  formData.append('directory', directory);\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n\n  try {\n    const result = await axios\n      .post(`${config.PROD_BASE_URL}/api-upload/initiateUpload/`, formData);\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\nexport const uploadFile = async (formData) => {\n\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  try {\n    const result = await axios\n      .post(`${config.PROD_BASE_URL}/api-upload/upload/`, formData)\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\nexport const folderSignedUrls = async (formData) => {\n\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  try {\n    const result = await axios\n      .post(`${config.PROD_BASE_URL}/api-upload/folder-signed-urls/`, formData)\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\nexport const fileSingedUrl = async (formData) => {\n\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  try {\n    const result = await axios\n      .post(`${config.PROD_BASE_URL}/api-upload/file-signed-url/`, formData)\n    return { error: null, data: result };\n  } catch (error) {\n    console.log(error);\n    return { error: error, data: null };\n  }\n};\n\nexport const downloadSingleFile = async (url, callback) => {\n\n  // Actual file has to be appended last.\n  let config = {\n    onDownloadProgress: progressEvent => {\n      callback(progressEvent);\n    },\n    responseType: 'blob'\n  };\n\n  try {\n    const result = await axios.get(url, config);\n    return { error: null, data: result.data };\n  } catch (error) {\n    console.log('error', error);\n    return { error: error, data: null };\n  }\n};\n\nexport const uploadFiles = (formData) => {\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${config.PROD_BASE_URL}/api-upload/upload/`, formData)\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n        reject(err);\n      });\n  });\n};\n\nexport const createFolder = (name, parent_id) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${config.PROD_BASE_URL}/api/create/`, {\n        name,\n        parent_id,\n        token: localStorage.getItem(\"token\"),\n      })\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n        reject(err);\n      });\n  });\n};\n\nexport const getAllFolders = () => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${config.PROD_BASE_URL}/api/get-all/`, {\n        token: localStorage.getItem(\"token\"),\n      })\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n        reject(err);\n      });\n  });\n};\n\nexport const getFolders = (parent_id) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${config.PROD_BASE_URL}/api/get/`, {\n        token: localStorage.getItem(\"token\"),\n        parent_id,\n      })\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n        reject(err);\n      });\n  });\n};\n\nexport const uploadFolder = (formData) => {\n  formData.append(\"token\", localStorage.getItem(\"token\"));\n  return new Promise((resolve, reject) => {\n    axios\n      .post(`${config.PROD_BASE_URL}/api-upload/upload-folder/`, formData)\n      .then((res) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        console.warn(err);\n        reject(err);\n      });\n  });\n};\n","export const imageGroup16 = {\n  get_started:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/pdf\",\n  image:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_image_x16.png\",\n  doc:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_word_x16.png\",\n  doc_other:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/vnd.google-apps.document\",\n  google_doc: \"https://image.flaticon.com/icons/svg/2965/2965335.svg\",\n  spreadsheet:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_spreadsheet_x16.png\",\n  google_sheet: \"https://image.flaticon.com/icons/svg/281/281761.svg\",\n  powerpoint:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_powerpoint_x16.png\",\n  google_slide: \"https://image.flaticon.com/icons/svg/281/281762.svg\",\n  pdf:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_pdf_x16.png\",\n  pdf_other:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/pdf\",\n  archive:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_archive_x16.png\",\n  exe:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/x-msdownload\",\n  video: \"https://drive-thirdparty.googleusercontent.com/16/type/video/webm\",\n  audio: \"https://drive-thirdparty.googleusercontent.com/16/type/audio/mpeg\",\n  text: \"https://drive-thirdparty.googleusercontent.com/16/type/text/xml\",\n  msdos:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/x-msdos-program\",\n  shellscript:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/x-shellscript\",\n  file:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/octet-stream\",\n  unkown:\n    \"https://drive-thirdparty.googleusercontent.com/16/type/application/x-ms-dos-executable\",\n};\n\nexport const imageGroup128 = {\n  archive:\n    \"https://drive-thirdparty.googleusercontent.com/128/type/application/x-zip-compressed\",\n  exe:\n    \"https://drive-thirdparty.googleusercontent.com/128/type/application/x-msdownload\",\n  video: \"https://drive-thirdparty.googleusercontent.com/128/type/video/webm\",\n  audo: \"https://drive-thirdparty.googleusercontent.com/128/type/audio/mpeg\",\n  text: \"https://drive-thirdparty.googleusercontent.com/128/type/text/xml\",\n  msdos:\n    \"https://drive-thirdparty.googleusercontent.com/128/type/application/x-msdos-program\",\n  shellscript:\n    \"https://drive-thirdparty.googleusercontent.com/128/type/application/x-shellscript\",\n  file:\n    \"https://drive-thirdparty.googleusercontent.com/128/type/application/octet-stream\",\n  doc:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_word_x128.png\",\n  spreadsheet:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_spreadsheet_x128.png\",\n  powerpoint:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_powerpoint_x128.png\",\n  pdf:\n    \"https://www.gstatic.com/docs/doclist/images/mediatype/icon_1_pdf_x128.png\",\n  getting_started: \"https://images2.imgbox.com/ec/55/ZZt0w3pA_o.png\",\n  unkown:\n    \"https://drive-thirdparty.googleusercontent.com/128/type/application/x-ms-dos-executable\",\n};\n","import { imageGroup16, imageGroup128 } from \"./ImageGroup\";\n\nexport const matchImageResource16 = (props) => {\n  return props.type.includes(\"get_started\")\n    ? imageGroup16.get_started\n    : props.type.includes(\"image\")\n    ? imageGroup16.image\n    : props.type.includes(\"sheet\") || props.type.includes(\"csv\")\n    ? imageGroup16.spreadsheet\n    : props.type.includes(\"powerpoint\") || props.type.includes(\"presentation\")\n    ? imageGroup16.powerpoint\n    : props.type.includes(\"pdf\")\n    ? imageGroup16.pdf\n    : props.type.includes(\"document\")\n    ? imageGroup16.doc\n    : props.type.includes(\"rar\") ||\n      props.type.includes(\"zip\") ||\n      props.type.includes(\"compressed\")\n    ? imageGroup16.archive\n    : props.type.includes(\"video\")\n    ? imageGroup16.video\n    : props.type.includes(\"audio\")\n    ? imageGroup16.audio\n    : props.type.includes(\"text\") ||\n      props.type.includes(\"x-javascript\") ||\n      props.type.includes(\"json\")\n    ? imageGroup16.text\n    : props.type.includes(\"shellscript\") ||\n      props.type.includes(\"sql\") ||\n      props.type.includes(\"ca-cert\")\n    ? imageGroup16.shellscript\n    : props.type.includes(\"vnd.ms-wpl\") ||\n      props.type.includes(\"x-ms-dos-executable\") ||\n      props.type.includes(\"x-msi\")\n    ? imageGroup16.unkown\n    : props.type.includes(\"x-msdos-program\")\n    ? imageGroup16.msdos\n    : props.type.includes(\"exe\")\n    ? imageGroup16.exe\n    : props.type.includes(\"octet-stream\")\n    ? imageGroup16.file\n    : imageGroup16.file;\n};\n\nexport const matchImageResource128 = (props) => {\n  return props.type.includes(\"get_started\")\n    ? props.path\n    : props.type.includes(\"image\")\n    ? props.path\n    : props.type.includes(\"sheet\") || props.type.includes(\"csv\")\n    ? imageGroup128.spreadsheet\n    : props.type.includes(\"powerpoint\") || props.type.includes(\"presentation\")\n    ? imageGroup128.powerpoint\n    : props.type.includes(\"pdf\")\n    ? imageGroup128.pdf\n    : props.type.includes(\"document\")\n    ? imageGroup128.doc\n    : props.type.includes(\"rar\") ||\n      props.type.includes(\"zip\") ||\n      props.type.includes(\"compressed\")\n    ? imageGroup128.archive\n    : props.type.includes(\"video\")\n    ? imageGroup128.video\n    : props.type.includes(\"audio\")\n    ? imageGroup128.audio\n    : props.type.includes(\"text\") ||\n      props.type.includes(\"x-javascript\") ||\n      props.type.includes(\"json\")\n    ? imageGroup128.text\n    : props.type.includes(\"shellscript\") ||\n      props.type.includes(\"sql\") ||\n      props.type.includes(\"ca-cert\")\n    ? imageGroup128.shellscript\n    : props.type.includes(\"vnd.ms-wpl\") ||\n      props.type.includes(\"x-ms-dos-executable\") ||\n      props.type.includes(\"x-msi\")\n    ? imageGroup128.unkown\n    : props.type.includes(\"x-msdos-program\")\n    ? imageGroup128.msdos\n    : props.type.includes(\"exe\")\n    ? imageGroup128.exe\n    : props.type.includes(\"octet-stream\")\n    ? imageGroup128.file\n    : imageGroup128.file;\n};\n\nexport const getBase64BackgroundImage = (file) => {\n  let reader = new FileReader();\n  reader.onload = function (e) {\n    const image_style = {\n      backgroundImage: `url(${e.target.result})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      width: \"100%\",\n      height: \"auto\",\n    };\n    return image_style;\n  }\n  reader.readAsDataURL(file);\n};","export const availableUploadArea = [\n  \"detail-view\",\n  \"quick-view\",\n  \"folder-view\",\n  \"quick-context-area\",\n  \"folder-header\",\n  \"layout-folder\",\n  \"file-header\",\n  \"layout-file\",\n  \"guesture\",\n  \"context-area\"\n];\n\nexport const availableDownloadArea = [\n  \"image-view\",\n  \"icon\",\n  \"image\",\n  \"detail-view\",\n  \"icon-box\",\n  \"text-box\",\n  \"tooltip\",\n  \"list-view\",\n  \"td-name\",\n  \"td-owner\",\n  \"td-modified\",\n  \"td-size\",\n];\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\nimport Popup from \"reactjs-popup\";\nimport moment from \"moment\";\nimport { isMobileOnly } from \"react-device-detect\";\nimport {\n  matchImageResource16,\n  matchImageResource128,\n  getBase64BackgroundImage,\n} from \"../helpers/MatchImageResource\";\n\nconst FileView = (props) => {\n  const extra_id = props.access ? props.id + \" \" + props.access : props.id;\n  const image_style = {\n    backgroundImage: `url(${props.path})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    width: \"100%\",\n    height: \"auto\",\n  };\n  return (\n    <div className=\"file-view\" id={\"file-view file \" + extra_id}>\n      {props.type.includes(\"image\") ? (\n        <div\n          className=\"image-view transparent\"\n          id={\"image-view file \" + extra_id}\n        >\n          <div\n            className=\"image\"\n            id={\"image file \" + extra_id}\n            style={image_style}\n          />\n        </div>\n      ) : (\n        <div className=\"image-view\" id={\"image-view file \" + extra_id}>\n          <img\n            src={matchImageResource128(props)}\n            alt={props.name}\n            className=\"icon\"\n            id={\"icon file \" + extra_id}\n          />\n        </div>\n      )}\n      <div className=\"detail-view\" id={\"detail-view file \" + extra_id}>\n        <div className=\"icon-box\" id={\"icon-box file \" + extra_id}>\n          <img\n            src={matchImageResource16(props)}\n            alt={props.name}\n            className=\"icon\"\n            id={\"icon file \" + extra_id}\n          />\n        </div>\n        <div className=\"text-box\" id={\"text-box file \" + extra_id}>\n          <Popup\n            trigger={\n              <button className=\"tooltip\" id={\"tooltip file \" + extra_id}>\n                {props.name}\n              </button>\n            }\n            position=\"top center\"\n            on=\"hover\"\n            arrow={false}\n          >\n            <div>{props.name}</div>\n          </Popup>\n        </div>\n        {isMobileOnly && props.id !== 0 && (\n          <div\n            className=\"info-box\"\n            id={\"info-box file \" + props.id + \" detail\"}\n            onClick={() => props.onHandleSide()}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20pt\"\n              viewBox=\"0 0 20 20\"\n              version=\"1.1\"\n              height=\"25pt\"\n            >\n              <g id=\"surface1\">\n                <path\n                  style={{\n                    stroke: \"none\",\n                    fillRule: \"nonzero\",\n                    fill: \"#757575\",\n                    fillOpacity: 1,\n                  }}\n                  d=\"M 12 7.5 C 12 8.605469 11.105469 9.5 10 9.5 C 8.894531 9.5 8 8.605469 8 7.5 C 8 6.394531 8.894531 5.5 10 5.5 C 11.105469 5.5 12 6.394531 12 7.5 Z M 12 7.5 \"\n                ></path>\n                <path\n                  style={{\n                    stroke: \"none\",\n                    fillRule: \"nonzero\",\n                    fill: \"#757575\",\n                    fillOpacity: 1,\n                  }}\n                  d=\"M 12 12.5 C 12 13.605469 11.105469 14.5 10 14.5 C 8.894531 14.5 8 13.605469 8 12.5 C 8 11.394531 8.894531 10.5 10 10.5 C 11.105469 10.5 12 11.394531 12 12.5 Z M 12 12.5 \"\n                ></path>\n                <path\n                  style={{\n                    stroke: \"none\",\n                    fillRule: \"nonzero\",\n                    fill: \"#757575\",\n                    fillOpacity: 1,\n                  }}\n                  d=\"M 12 17.5 C 12 18.605469 11.105469 19.5 10 19.5 C 8.894531 19.5 8 18.605469 8 17.5 C 8 16.394531 8.894531 15.5 10 15.5 C 11.105469 15.5 12 16.394531 12 17.5 Z M 12 17.5 \"\n                ></path>\n              </g>\n            </svg>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport const FileViews = withRouter(FileView);\n\nconst ListView = (props) => {\n  const cur_date = moment(new Date()).format(\"MMM DD, YYYY\");\n  const file_size = props.size;\n  const extra_type_id =\n    props.type === \"folder\" ? \" folder \" + props.id : \" file \" + props.id;\n  const extra_id = props.access\n    ? extra_type_id + \" \" + props.access\n    : extra_type_id;\n  const bytesToSize = (bytes) => {\n    var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    if (bytes === 0) return \"0 Byte\";\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n  };\n\n  const dateFormat = (date) => {\n    return moment(date).format(\"MMM DD, YYYY\");\n  };\n\n  return (\n    <div\n      className=\"list-view\"\n      id={\"list-view\" + extra_id}\n      onDoubleClick={() =>\n        props.type === \"folder\" &&\n        !isMobileOnly &&\n        props.history.push({\n          pathname:\n            props.location.pathname[props.location.pathname.length - 1] !== \"/\"\n              ? `${props.location.pathname}/${props.name}`\n              : `${props.location.pathname}${props.name}`,\n          state: { name: props.name, id: props.id },\n        })\n      }\n    >\n      <div className=\"td-name\" id={\"td-name\" + extra_id}>\n        <div className=\"icon-box\" id={\"icon-box\" + extra_id}>\n          {props.type !== \"folder\" && (\n            <img\n              src={matchImageResource16(props)}\n              alt={props.name}\n              className=\"icon\"\n              id={\"icon\" + extra_id}\n            />\n          )}\n          {props.type === \"folder\" && (\n            <svg\n              x=\"0px\"\n              y=\"0px\"\n              focusable=\"false\"\n              viewBox=\"0 0 16 16\"\n              height=\"16px\"\n              width=\"16px\"\n              fill=\"#5f6368\"\n            >\n              <g>\n                <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"></path>\n                <path d=\"M0 0h16v16H0z\" fill=\"none\"></path>\n              </g>\n            </svg>\n          )}\n        </div>\n        <div className=\"text-box\" id={\"text-box\" + extra_id}>\n          <Popup\n            trigger={\n              <button className=\"tooltip\" id={\"tooltip\" + extra_id}>\n                {props.name}\n              </button>\n            }\n            position=\"top center\"\n            on=\"hover\"\n            arrow={false}\n          >\n            <div>{props.name}</div>\n          </Popup>\n        </div>\n      </div>\n      {isMobileOnly && props.id !== 0 && (\n        <div\n          className=\"info-box\"\n          id={\"info-box\" + extra_type_id + \" detail\"}\n          onClick={() => props.onHandleSide()}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20pt\"\n            viewBox=\"0 0 20 20\"\n            version=\"1.1\"\n            height=\"25pt\"\n          >\n            <g id=\"surface1\">\n              <path\n                style={{\n                  stroke: \"none\",\n                  fillRule: \"nonzero\",\n                  fill: \"#757575\",\n                  fillOpacity: 1,\n                }}\n                d=\"M 12 7.5 C 12 8.605469 11.105469 9.5 10 9.5 C 8.894531 9.5 8 8.605469 8 7.5 C 8 6.394531 8.894531 5.5 10 5.5 C 11.105469 5.5 12 6.394531 12 7.5 Z M 12 7.5 \"\n              ></path>\n              <path\n                style={{\n                  stroke: \"none\",\n                  fillRule: \"nonzero\",\n                  fill: \"#757575\",\n                  fillOpacity: 1,\n                }}\n                d=\"M 12 12.5 C 12 13.605469 11.105469 14.5 10 14.5 C 8.894531 14.5 8 13.605469 8 12.5 C 8 11.394531 8.894531 10.5 10 10.5 C 11.105469 10.5 12 11.394531 12 12.5 Z M 12 12.5 \"\n              ></path>\n              <path\n                style={{\n                  stroke: \"none\",\n                  fillRule: \"nonzero\",\n                  fill: \"#757575\",\n                  fillOpacity: 1,\n                }}\n                d=\"M 12 17.5 C 12 18.605469 11.105469 19.5 10 19.5 C 8.894531 19.5 8 18.605469 8 17.5 C 8 16.394531 8.894531 15.5 10 15.5 C 11.105469 15.5 12 16.394531 12 17.5 Z M 12 17.5 \"\n              ></path>\n            </g>\n          </svg>\n        </div>\n      )}\n      {!isMobileOnly && (\n        <div className=\"td-owner\" id={\"td-owner\" + extra_id}>\n          <span>{props.owner ? props.owner : \"me\"}</span>\n        </div>\n      )}\n      {!isMobileOnly && (\n        <div className=\"td-modified\" id={\"td-modified\" + extra_id}>\n          <span>\n            {props.last_modified ? dateFormat(props.last_modified) : cur_date}\n          </span>\n        </div>\n      )}\n      {!isMobileOnly && (\n        <div className=\"td-size\" id={\"td-size\" + extra_id}>\n          <span>{props.size ? bytesToSize(file_size) : \"_\"}</span>\n        </div>\n      )}\n    </div>\n  );\n};\nexport const ListViews = withRouter(ListView);\n\nconst FolderView = (props) => {\n  return (\n    <div\n      className=\"folder-view\"\n      id={\"folder-view folder \" + props.id}\n      onDoubleClick={() => {\n        !isMobileOnly &&\n          props.history.push({\n            pathname:\n              props.location.pathname[props.location.pathname.length - 1] !==\n              \"/\"\n                ? `${props.location.pathname}/${props.name}`\n                : `${props.location.pathname}${props.name}`,\n            state: { name: props.name, id: props.id },\n          });\n      }}\n    >\n      <div className=\"icon-box\" id={\"icon-box folder \" + props.id}>\n        <svg\n          x=\"0px\"\n          y=\"0px\"\n          focusable=\"false\"\n          viewBox=\"0 0 24 24\"\n          height=\"24px\"\n          width=\"24px\"\n          fill=\"#5f6368\"\n        >\n          <g>\n            <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"></path>\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n          </g>\n        </svg>\n      </div>\n      <div className=\"text-box\" id={\"text-box folder \" + props.id}>\n        <Popup\n          trigger={\n            <button className=\"tooltip\" id={\"tooltip folder \" + props.id}>\n              {props.name}\n            </button>\n          }\n          position=\"top center\"\n          on=\"hover\"\n          arrow={false}\n          unselectable=\"on\"\n        >\n          <div>{props.name}</div>\n        </Popup>\n      </div>\n      {isMobileOnly && props.id !== 0 && (\n        <div\n          className=\"info-box\"\n          id={\"info-box folder \" + props.id}\n          onClick={() => props.onHandleSide()}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"20pt\"\n            viewBox=\"0 0 20 20\"\n            version=\"1.1\"\n            height=\"25pt\"\n          >\n            <g id=\"surface1\">\n              <path\n                style={{\n                  stroke: \"none\",\n                  fillRule: \"nonzero\",\n                  fill: \"#757575\",\n                  fillOpacity: 1,\n                }}\n                d=\"M 12 7.5 C 12 8.605469 11.105469 9.5 10 9.5 C 8.894531 9.5 8 8.605469 8 7.5 C 8 6.394531 8.894531 5.5 10 5.5 C 11.105469 5.5 12 6.394531 12 7.5 Z M 12 7.5 \"\n              ></path>\n              <path\n                style={{\n                  stroke: \"none\",\n                  fillRule: \"nonzero\",\n                  fill: \"#757575\",\n                  fillOpacity: 1,\n                }}\n                d=\"M 12 12.5 C 12 13.605469 11.105469 14.5 10 14.5 C 8.894531 14.5 8 13.605469 8 12.5 C 8 11.394531 8.894531 10.5 10 10.5 C 11.105469 10.5 12 11.394531 12 12.5 Z M 12 12.5 \"\n              ></path>\n              <path\n                style={{\n                  stroke: \"none\",\n                  fillRule: \"nonzero\",\n                  fill: \"#757575\",\n                  fillOpacity: 1,\n                }}\n                d=\"M 12 17.5 C 12 18.605469 11.105469 19.5 10 19.5 C 8.894531 19.5 8 18.605469 8 17.5 C 8 16.394531 8.894531 15.5 10 15.5 C 11.105469 15.5 12 16.394531 12 17.5 Z M 12 17.5 \"\n              ></path>\n            </g>\n          </svg>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const FolderViews = withRouter(FolderView);\n\nexport const UploadViews = (props) => {\n  return (\n    <div className=\"file-view upload\">\n      <div className=\"upload-overlay\">\n        <ReactLoading type=\"bubbles\" color=\"#fff\" className=\"loading\" />\n      </div>\n      {props.file.type.includes(\"image\") ? (\n        <div\n          className=\"image-view transparent\"\n        >\n          <div\n            className=\"image\"\n            style={getBase64BackgroundImage(props.file)}\n          />\n        </div>\n      ) : (\n        <div className=\"image-view\">\n          <img\n            src={matchImageResource128(props.file)}\n            alt={props.file.name}\n            className=\"icon\"\n          />\n        </div>\n      )}\n      <div className=\"detail-view\">\n        <div className=\"icon-box\">\n          <img\n            src={matchImageResource16(props.file)}\n            alt={props.file.name}\n            className=\"icon\"\n          />\n        </div>\n        <div className=\"text-box\">\n          <Popup\n            trigger={\n              <button className=\"tooltip\">\n                {props.file.name}\n              </button>\n            }\n            position=\"top center\"\n            on=\"hover\"\n            arrow={false}\n          >\n            <div>{props.file.name}</div>\n          </Popup>\n        </div>\n      </div>\n    </div>\n  );\n};","import React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport {\n  Sidebar,\n  Icon,\n  Menu,\n  Dropdown,\n  Dimmer,\n  Segment,\n  Loader,\n  Input,\n  Button,\n  Label,\n  TransitionablePortal,\n} from \"semantic-ui-react\";\nimport { isMobileOnly, isIOS } from \"react-device-detect\";\nimport ReactHoverObserver from \"react-hover-observer\";\nimport ReactLoading from \"react-loading\";\nimport Modal from \"react-modal\";\nimport Popup from \"reactjs-popup\";\nimport moment from \"moment\";\nimport { animated } from \"react-spring\";\nimport { useGesture } from \"react-use-gesture\";\nimport { animateScroll as scroll, Element, scroller } from \"react-scroll\";\nimport { toast } from \"react-toastify\";\nimport { useEventListener } from \"../helpers/CustomHook\";\nimport {\n  getFiles,\n  createFolder,\n  getFolders,\n  getSignedPostUrl,\n  getMultiPartUploadId,\n  uploadChunk,\n  completeMultiUpload,\n  completeFolderUpload,\n  completeUpload,\n  uploadSingleFile,\n  folderSignedUrls,\n  fileSingedUrl,\n  downloadSingleFile\n} from \"../helpers/RestAPI\";\nimport { imageGroup128, imageGroup16 } from \"../helpers/ImageGroup\";\nimport { matchImageResource16 } from \"../helpers/MatchImageResource\";\nimport {\n  availableUploadArea,\n  availableDownloadArea,\n} from \"../helpers/AvailableArea\";\nimport {\n  FolderViews,\n  FileViews,\n  ListViews,\n  UploadViews,\n} from \"../containers/Views\";\nimport Layout from \"../containers/Layout\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nconst CustomToast = ({ closeToast, text, type }) => {\n  const onHandleCloseToast = () => {\n    closeToast();\n    scroll.scrollToBottom({ containerId: \"context-area\" });\n  };\n  return (\n    <div className=\"custom-toast-body\">\n      <label>{text}</label>\n      {(type !== \"download\" || type !== \"error\") && <a onClick={onHandleCloseToast}>Locate</a>}\n    </div>\n  );\n};\ntoast.configure();\n\nexport const Drive = (props) => {\n  Modal.setAppElement(\"#root\");\n  const fileRef = useRef();\n  const folderRef = useRef();\n  const inputRef = useRef();\n  const foldersRef = useRef();\n  const totalSizeRef = useRef();\n  const downloadedRef = useRef();\n\n  const [is_page_loaded, setPageLoaded] = useState(false);\n  const [is_uploadingModal, setUploadingModal] = useState(false);\n  const [is_downloadingModal, setDownloadingModal] = useState(false);\n  const [is_creatingModal, setCreatingModal] = useState(false);\n  const [is_minimized, setMinimize] = useState(false);\n  const [is_uploaded, setUploaded] = useState(false);\n  const [is_downloaded, setDownloaded] = useState(false);\n  const [is_context, setContext] = useState(true);\n  const [is_triggerable, setContextTrigger] = useState(true);\n  const [is_gridType, setViewType] = useState(true);\n  const [is_mobilePopup, setMobilePopup] = useState(false);\n  const [is_mobileSide, setMobileSide] = useState(false);\n  const [order_desc, setOrder] = useState(true);\n  const [file_count, setFileCount] = useState(0);\n  const [total_file_count, setTotalFileCount] = useState(0);\n  const [upload_percent, setUploadPercent] = useState(0);\n  const [download_percent, setDownloadPercentage] = useState(0);\n\n  const [is_download_failed, setDownloadFailed] = useState(false);\n  const [is_upload_failed, setUploadFailed] = useState(false);\n\n  const [uploading_files, setUploadingFiles] = useState([]);\n  const [uploading_folders, setUploadingFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [quick_files, setQuickFiles] = useState([\n    {\n      path: imageGroup128.getting_started,\n      content_type: \"image get_started\",\n      name: \"Getting started\",\n      size: \"\",\n      id: 0,\n    },\n  ]);\n  const [quick_file, setQuickFile] = useState({});\n  const [selected_file, setSelectedFile] = useState({});\n  const [selected_folder, setSelectedFolder] = useState({});\n  const [new_folder_title, setFolderTitle] = useState(\"Untitled folder\");\n  const [folders, setFolders] = useState([]);\n  foldersRef.current = folders;\n\n  const CHUNK_SIZE = Math.pow(1024, 3);\n  const CHUNK_LIMIT = 5 * Math.pow(1024, 2);\n  const LIMIT = 9 * Math.pow(1024, 3);\n\n  let zip = new JSZip();\n  let downloadZip = null;\n\n  useEffect(() => {\n    setPageLoaded(true);\n  }, [folders]);\n\n  useEffect(() => {\n    getFiles().then((res) => {\n      if (res.length > 0) {\n        const quick_arr = [];\n        res.forEach((item, i) => {\n          if (res.length > 5) {\n            if (i > res.length - 6) {\n              quick_arr.push(item);\n            }\n          } else {\n            if (i < res.length) {\n              quick_arr.push(item);\n            }\n          }\n        });\n        setQuickFiles(quick_arr);\n        const file_arr = [\n          {\n            path: imageGroup128.getting_started,\n            content_type: \"image get_started\",\n            name: \"Getting started\",\n            size: \"\",\n            id: 0,\n          },\n        ].concat(res);\n        setFiles(file_arr);\n      } else {\n        setFiles(res);\n      }\n      getFolders(0).then((res) => {\n        setFolders(res);\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    if (is_uploaded) {\n      getFiles().then((res) => {\n        if (uploading_files.length > 0) {\n          for (let index = 0; index < uploading_files.length; index++) {\n            for (let i = res.length - 1; i >= 0; i--) {\n              if (res[i].name === uploading_files[index].name && parseInt(res[i].size) === parseInt(uploading_files[index].size)) {\n                uploading_files[index].uploaded = true;\n                break;\n              }\n            }\n          }\n          setUploadingFiles(uploading_files);\n        }\n        if (res.length > 0) {\n          const quick_arr = [];\n          res.forEach((item, i) => {\n            if (res.length > 5) {\n              if (i > res.length - 6) {\n                quick_arr.push(item);\n              }\n            } else {\n              if (i < res.length) {\n                quick_arr.push(item);\n              }\n            }\n          });\n          setQuickFiles(quick_arr);\n          const file_arr = [\n            {\n              path: imageGroup128.getting_started,\n              content_type: \"image get_started\",\n              name: \"Getting started\",\n              size: \"\",\n              id: 0,\n            },\n          ].concat(res);\n          setFiles(file_arr);\n        } else {\n          setFiles(res);\n        }\n        getFolders(0).then((res) => {\n          if (uploading_folders.length > 0) {\n            for (let index = 0; index < uploading_folders.length; index++) {\n              for (let i = res.length - 1; i >= 0; i--) {\n                if (res[i].name === uploading_folders[index].name) {\n                  uploading_folders[index].uploaded = true;\n                  break;\n                }\n              }\n            }\n            setUploadingFolders(uploading_folders);\n          }\n          setFolders(res);\n        });\n      });\n    }\n  }, [is_uploaded]);\n\n  useEffect(() => {\n    setTotalFileCount(total_file_count + file_count);\n  }, [file_count]);\n\n  const eventContextHandler = useCallback(\n    (e) => {\n      if (e.button === 2 && !isMobileOnly) {\n        if (\n          availableUploadArea.includes(e.target.id) ||\n          availableUploadArea.includes(e.target.getAttribute(\"data-value\"))\n        ) {\n          setContextTrigger(false);\n          setContext(true);\n        } else if (availableDownloadArea.includes(e.target.className)) {\n          const cur = e.target.id.split(\" \")[2];\n          const type = e.target.id.split(\" \")[1];\n          const access = e.target.id.split(\" \")[3]\n            ? e.target.id.split(\" \")[3]\n            : \"\";\n          if (cur !== \"0\") {\n            setContextTrigger(false);\n            setContext(false);\n            if (type === \"file\") {\n              setSelectedFolder({});\n              if (access === \"detail\") {\n                const file = files.find((file) => file.id === parseInt(cur));\n                setSelectedFile(file);\n                setQuickFile({});\n              } else {\n                const file = quick_files.find(\n                  (file) => file.id === parseInt(cur)\n                );\n                setQuickFile(file);\n                setSelectedFile({});\n              }\n            } else {\n              setSelectedFile({});\n              setQuickFile({});\n              const folder = foldersRef.current.find(\n                (folder) => folder.id === parseInt(cur)\n              );\n              setSelectedFolder(folder);\n            }\n          } else {\n            setContextTrigger(true);\n            setSelectedFile({});\n            setQuickFile({});\n            setSelectedFolder({});\n          }\n        } else {\n          setContextTrigger(true);\n          setSelectedFile({});\n          setQuickFile({});\n          setSelectedFolder({});\n        }\n      } else {\n        setContextTrigger(true);\n      }\n    },\n    [is_context, files]\n  );\n\n  const handleSortOrder = useCallback(\n    (e) => {\n      setOrder(!order_desc);\n      let ordered_files = [];\n      let ordered_folders = [];\n      if (order_desc) {\n        ordered_files = files.sort((a, b) => a.name.localeCompare(b.name));\n        ordered_folders = folders.sort((a, b) => a.name.localeCompare(b.name));\n      } else {\n        ordered_files = files.sort((a, b) => b.name.localeCompare(a.name));\n        ordered_folders = folders.sort((a, b) => b.name.localeCompare(a.name));\n      }\n      setFiles(ordered_files);\n      setFolders(ordered_folders);\n    },\n    [order_desc, files, folders]\n  );\n\n  const handleDropdown = (type) => {\n    if (type === \"new_folder\") {\n      setCreatingModal(true);\n    }\n    if (type === \"upload_file\") {\n      fileRef.current.click();\n    }\n    if (type === \"upload_folder\") {\n      folderRef.current.directory = true;\n      folderRef.current.webkitdirectory = true;\n      folderRef.current.click();\n    }\n  };\n\n  const process = (event) => {\n    if (!event.lengthComputable) return; // guard\n    const loaded = event.loaded + downloadedRef.current;\n    var downloadingPercentage = Math.floor(loaded / totalSizeRef.current * 100);\n    setDownloadPercentage(downloadingPercentage);\n  };\n\n  const downloadBlob = (blob, name = 'file.txt') => {\n    // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n    const blobUrl = URL.createObjectURL(blob);\n\n    // Create a link element\n    const link = document.createElement(\"a\");\n\n    // Set link's href to point to the Blob URL\n    link.href = blobUrl;\n    link.download = name;\n\n    // Append link to the body\n    document.body.appendChild(link);\n\n    const clickHandler = () => {\n      setTimeout(() => {\n        URL.revokeObjectURL(blobUrl);\n        link.removeEventListener('click', clickHandler);\n      }, 150);\n    };\n\n    link.addEventListener('click', clickHandler, false);\n\n    // Dispatch click event on the link\n    // This is necessary as link.click() does not work on the latest firefox\n    link.dispatchEvent(\n      new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        view: window\n      })\n    );\n\n    // Remove link from body\n    document.body.removeChild(link);\n  }\n\n  const DownloadFileFromS3 = async (type, signed_url) => {\n    const result = await downloadSingleFile(signed_url.url, process);\n    if (result.error) {\n      setDownloadFailed(true);\n    }\n    else {\n      downloadedRef.current = downloadedRef.current + result.data.size;\n\n      let mimeType = signed_url.type;\n      let fileName = signed_url.key;\n      let blob = new Blob([result.data], { type: mimeType });\n      if (type === 'folder') downloadZip.file(fileName, blob);\n      else if (type === 'file') downloadBlob(blob, fileName);\n    }\n  };\n\n  const handleClick = async (e, data) => {\n    if (data.foo === \"new_folder\") {\n      setCreatingModal(true);\n    }\n    if (data.foo === \"upload_file\") {\n      fileRef.current.click();\n    }\n    if (data.foo === \"upload_folder\") {\n      folderRef.current.directory = true;\n      folderRef.current.webkitdirectory = true;\n      folderRef.current.click();\n    }\n    if (data.foo === \"download\") {\n      setDownloadPercentage(0);\n      setDownloadFailed(false);\n      if (selected_file && selected_file.path) {\n        setDownloadingModal(true);\n        setDownloaded(false);\n\n        let formData = new FormData();\n        formData.append('file', selected_file.id);\n\n        const result = await fileSingedUrl(formData);\n        const signed_urls = result.data.data.signed_urls;\n\n        totalSizeRef.current = parseInt(selected_file.size);\n        downloadedRef.current = 0;\n        for (let i = 0; i < signed_urls.length; i++) {\n          await DownloadFileFromS3('file', signed_urls[i]);\n        }\n        setDownloaded(true);\n      }\n      if (quick_file && quick_file.path) {\n        setDownloadingModal(true);\n        setDownloaded(false);\n\n        let formData = new FormData();\n        formData.append('file', quick_file.id);\n\n        const result = await fileSingedUrl(formData);\n        const signed_urls = result.data.data.signed_urls;\n\n        totalSizeRef.current = parseInt(quick_file.size);\n        downloadedRef.current = 0;\n        for (let i = 0; i < signed_urls.length; i++) {\n          await DownloadFileFromS3('file', signed_urls[i]);\n        }\n        setDownloaded(true);\n      }\n      if (selected_folder && selected_folder.id) {\n        setDownloadingModal(true);\n        setDownloaded(false);\n        let formData = new FormData();\n        formData.append('folder', selected_folder.id);\n\n        downloadZip = zip.folder(selected_folder.name);\n\n        const result = await folderSignedUrls(formData);\n        const signed_urls = result.data.data.signed_urls;\n        totalSizeRef.current = result.data.data.total_size;\n        downloadedRef.current = 0;\n\n        for (let i = 0; i < signed_urls.length; i++) {\n          await DownloadFileFromS3('folder', signed_urls[i]);\n        }\n\n        zip.generateAsync({ type: \"blob\" })\n          .then(function (content) {\n            saveAs(content, selected_folder.name);\n            setDownloaded(true);\n          });\n      }\n    }\n  };\n\n  const onHandleUploadFileSelect = (file) => {\n    const selected_file = files.find((ele, index) => ele.name === file.name);\n    setSelectedFile(selected_file);\n    const element_name = is_gridType ? selected_file.name + \"_grid_file_\" + selected_file.id : selected_file.name + \"list_file_\" + selected_file.id;\n    scroller.scrollTo(element_name, {\n      containerId: \"context-area\",\n      duration: 1500,\n      delay: 100,\n      offset: 0,\n      smooth: true,\n    });\n  };\n\n  let loadedOffset = 0;\n  const waitUpload = async (chunk, index, callback) => {\n    let formData = new FormData();\n    formData.append('file', chunk.file);\n    formData.append('mpuId', chunk.mpuId);\n    formData.append('partNo', chunk.partNo);\n    formData.append('directory', chunk.directory);\n    formData.append('clientMethod', 'upload_part');\n\n    const res = await getSignedPostUrl(formData);\n    if (res.error) setUploadFailed(true);\n\n    const response = await uploadChunk(\n      res.data.data.signed_url,\n      chunk.data,\n      index,\n      callback\n    );\n    if (response.error) setUploadFailed(true);\n    let etag = response.data.headers['etag'];\n    return {\n      'ETag': etag.substring(1, etag.length - 1),\n      'PartNumber': chunk.partNo\n    };\n  };\n\n  const uploadMinorFile = async (file_data, totalFileSize) => {\n\n    var formData = new FormData();\n    formData.append('file', file_data.file);\n    formData.append('clientMethod', 'put_object');\n    formData.append('filetype', file_data.file.type);\n    formData.append('directory', file_data.directory);\n\n    let progress = new Array(1);\n    const onHandleProgress = (loaded, index) => {\n      if (loaded > file_data.file.size) {\n        loaded = file_data.file.size;\n      }\n      progress[index] = loaded;\n      const sum = progress.reduce((a, b) => a + b, 0);\n      console.log((loadedOffset + sum) / totalFileSize * 100);\n      setUploadPercent(parseFloat((loadedOffset + sum) / totalFileSize * 100).toFixed(0));\n    };\n\n    const res = await getSignedPostUrl(formData);\n    if (res.error) setUploadFailed(true);\n    const fileResponse = await uploadSingleFile(res.data.data.signed_url, file_data.file, onHandleProgress);\n    if (fileResponse.error) setUploadFailed(true);\n    console.log(fileResponse);\n\n    const complete = await completeUpload(file_data.file.name, file_data.directory, file_data.file.type, file_data.file.size);\n    if (complete.error) setUploadFailed(true);\n    return complete.data;\n  }\n\n  const uploadChunks = async (chunks, totalFileSize) => {\n    let parts = [];\n\n    let chunk = chunks[0];\n\n    let progress = new Array(chunks.length);\n    const onHandleProgress = (loaded, index) => {\n      progress[index] = loaded;\n      const sum = progress.reduce((a, b) => a + b, 0);\n      console.log((loadedOffset + sum) / totalFileSize * 100);\n      setUploadPercent(parseFloat((loadedOffset + sum) / totalFileSize * 100).toFixed(0));\n    };\n    const promises = chunks.map((c, index) => waitUpload(c, index, onHandleProgress));\n    parts = await Promise.all(promises);\n\n    const complete = await completeMultiUpload(chunk.file, chunk.directory, parts, chunk.mpuId, chunk.type, chunk.size);\n    if (complete.error) setUploadFailed(true);\n    return complete.data;\n  };\n\n  const calculateChunks = (file) => {\n    var minChunksCount = parseInt(file.size / CHUNK_SIZE);\n    var result = file.size % CHUNK_SIZE < CHUNK_LIMIT ? minChunksCount : minChunksCount + 1;\n    return result;\n  };\n\n  const handleChangeFile = async (e) => {\n    var file_arr = [];\n\n    let overLimit = false;\n    let totalFileSize = 0;\n    Object.values(e.target.files).forEach((file) => {\n      if (file.size > LIMIT) {\n        toast.dark(\n          <CustomToast\n            text=\"The size is too big and it cannot be uploaded\"\n            type=\"error\"\n          />,\n          {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            className: \"toast-custom\",\n          }\n        );\n        overLimit = true;\n      }\n      file.uploaded = false;\n      totalFileSize += file.size;\n      file_arr.push(file);\n    });\n    if (overLimit) return;\n\n    setUploadingFiles((uploading_files) => uploading_files.concat(file_arr));\n    setFileCount(file_count + e.target.files.length);\n    if (isMobileOnly) {\n      scroll.scrollToTop({ containerId: \"context-area\" });\n    } else {\n      setUploadingModal(true);\n    }\n    setUploaded(false);\n    setUploadFailed(false);\n\n    let response = [];\n    for (let file of file_arr) {\n\n      if (file.size < CHUNK_LIMIT) {\n\n        const data = {\n          'file': file,\n          'directory': null\n        };\n\n        const fileResponse = await uploadMinorFile(data, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      else {\n        const chunkCounts = calculateChunks(file);\n        let partNo = 1;\n        const res = await getMultiPartUploadId(file.name, null);\n        if (res.error) setUploadFailed(true);\n        const mpuId = res.data.data.mpu_id;\n        let chunks = [];\n        let _offset = 0;\n        while (partNo <= chunkCounts) {\n          let readLength = CHUNK_SIZE;\n          if (file.size - _offset - CHUNK_SIZE < CHUNK_LIMIT) {\n            readLength = file.size - _offset;\n          }\n          var blob = file.slice(_offset, readLength + _offset);\n          chunks.push({\n            'file': file.name,\n            'type': file.type,\n            'size': file.size,\n            'mpuId': mpuId,\n            'partNo': partNo,\n            'directory': null,\n            'data': blob\n          });\n          _offset += readLength;\n          partNo++;\n        }\n        const fileResponse = await uploadChunks(chunks, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      loadedOffset += file.size;\n    }\n    loadedOffset = 0;\n\n    isMobileOnly && setUploadingFiles([]);\n    let res_arr = [...files];\n    response.forEach((file) => {\n      res_arr.push(file);\n    });\n    setFiles(res_arr);\n    setUploaded(true);\n    setFileCount(0);\n    setUploadPercent(0);\n    if (isMobileOnly) {\n      toast.dark(\n        <CustomToast\n          text=\"All pending uploads have completed\"\n          type=\"upload\"\n        />,\n        {\n          position: toast.POSITION.BOTTOM_CENTER,\n          hideProgressBar: true,\n          closeOnClick: false,\n          pauseOnHover: true,\n          draggable: true,\n          className: \"toast-custom\",\n        }\n      );\n    }\n  };\n\n  const onHandleUploadFolderSelect = (folder) => {\n    const selected_folder = foldersRef.current.find(\n      (ele, index) => ele.name === folder.name\n    );\n    setSelectedFolder(selected_folder);\n    const element_name = is_gridType ? selected_folder.name + \"_grid_folder_\" + selected_folder.id : selected_folder.name + \"_list_folder_\" + selected_folder.id;\n    scroller.scrollTo(element_name, {\n      containerId: \"context-area\",\n      duration: 1500,\n      delay: 100,\n      offset: 0,\n      smooth: true,\n    });\n  };\n  const handleChangeFolder = async (e) => {\n    // var formData = new FormData();\n    var directory = \"\";\n    var file_arr = [];\n\n    let overLimit = false;\n    let totalFileSize = 0;\n    Object.values(e.target.files).forEach((file) => {\n      if (file.size > LIMIT) {\n        toast.dark(\n          <CustomToast\n            text=\"The size is too big and it cannot be uploaded\"\n            type=\"error\"\n          />,\n          {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            className: \"toast-custom\",\n          }\n        );\n        overLimit = true;\n      }\n      file.uploaded = false;\n      file_arr.push(file);\n      totalFileSize += file.size;\n      directory = file.webkitRelativePath;\n    });\n    if (overLimit) return;\n\n    var arr = [];\n    arr.push({\n      name: directory.split(\"/\")[0],\n      count: e.target.files.length,\n      uploaded: false,\n    });\n\n    setUploadingFolders((uploading_folders) => uploading_folders.concat(arr));\n    setFileCount(file_count + 1);\n    setUploadingModal(true);\n    setUploaded(false);\n    setUploadFailed(false);\n\n    let response = [];\n    for (let file of file_arr) {\n\n      if (file.size < CHUNK_LIMIT) {\n        const data = {\n          'file': file,\n          'directory': directory.split(\"/\")[0]\n        };\n\n        const fileResponse = await uploadMinorFile(data, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      else {\n        const chunkCounts = calculateChunks(file);\n        let partNo = 1;\n        const res = await getMultiPartUploadId(file.name, directory.split(\"/\")[0]);\n        if (res.error) setUploadFailed(true);\n        const mpuId = res.data.data.mpu_id;\n        let chunks = [];\n        let _offset = 0;\n        while (partNo <= chunkCounts) {\n          let readLength = CHUNK_SIZE;\n          if (file.size - _offset - CHUNK_SIZE < CHUNK_LIMIT) {\n            readLength = file.size - _offset;\n          }\n          var blob = file.slice(_offset, readLength + _offset);\n          chunks.push({\n            'file': file.name,\n            'type': file.type,\n            'size': file.size,\n            'mpuId': mpuId,\n            'partNo': partNo,\n            'directory': directory.split(\"/\")[0],\n            'data': blob\n          });\n          _offset += readLength;\n          partNo++;\n        }\n        const fileResponse = await uploadChunks(chunks, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      loadedOffset += file.size;\n    }\n    loadedOffset = 0;\n    const res = await completeFolderUpload(directory.split(\"/\")[0], 0);\n    if (res.error) setUploadFailed(true);\n    // complete folder upload\n    const res_arr = [];\n    res_arr.push(res);\n    setFolders((folders) => folders.concat(res_arr));\n    setUploaded(true);\n    setFileCount(0);\n    setUploadPercent(0);\n    if (isMobileOnly) {\n      toast.dark(\n        <CustomToast\n          text=\"All pending uploads have completed\"\n          type=\"upload\"\n        />,\n        {\n          position: toast.POSITION.BOTTOM_CENTER,\n          hideProgressBar: true,\n          closeOnClick: false,\n          pauseOnHover: true,\n          draggable: true,\n          className: \"toast-custom\",\n        }\n      );\n    }\n  };\n\n  const closeModal = () => {\n    setUploadingModal(false);\n    setDownloadingModal(false);\n    setTotalFileCount(0);\n    setUploadingFiles([]);\n    setUploadingFolders([]);\n  };\n\n  const minimizeModal = () => {\n    setMinimize(!is_minimized);\n  };\n\n  const afterOpenCreateModal = (e) => {\n    inputRef.current.focus();\n    inputRef.current.select();\n  };\n\n  const closeCreateModal = () => {\n    setCreatingModal(false);\n  };\n\n  const handleChangeLayout = () => {\n    setViewType(!is_gridType);\n  };\n\n  const handleShowDetail = () => {\n    console.log(\"Show Detail View\");\n  };\n\n  const onHandleFolderTitle = (e) => {\n    setFolderTitle(e.target.value);\n  };\n  const onCreateNewFolder = () => {\n    createFolder(new_folder_title, 0).then((res) => {\n      setCreatingModal(false);\n      const arr = [];\n      arr.push(res);\n      setFolders((folders) => folders.concat(arr));\n      setUploaded(true);\n      setFolderTitle(\"Untitled folder\");\n      setSelectedFile({});\n      setQuickFile({});\n      setSelectedFolder(res);\n    });\n  };\n\n  const onHandleMobilePopupOpen = () => {\n    setMobilePopup(true);\n  };\n  const onHandleMobilePopupClose = () => {\n    setMobilePopup(false);\n  };\n  const onHandleMobilePopupItem = (type) => {\n    setMobilePopup(false);\n    if (type === \"upload\") {\n      fileRef.current.click();\n    }\n    if (type === \"create_folder\") {\n      setCreatingModal(true);\n    }\n  };\n\n  const onHandleMobileSideOpen = () => {\n    setMobileSide(true);\n  };\n  const onHandleMobileSideClose = () => {\n    setMobileSide(false);\n  };\n  const onHandleMobileSideItem = async (type) => {\n    setMobileSide(false);\n    if (type === \"download\") {\n      setDownloadPercentage(0);\n      setDownloadFailed(false);\n      if (selected_file) {\n        setDownloadingModal(true);\n        setDownloaded(false);\n\n        let formData = new FormData();\n        formData.append('file', selected_file.id);\n\n        const result = await fileSingedUrl(formData);\n        const signed_urls = result.data.data.signed_urls;\n\n        totalSizeRef.current = parseInt(selected_file.size);\n        downloadedRef.current = 0;\n\n        for (let i = 0; i < signed_urls.length; i++) {\n          await DownloadFileFromS3('file', signed_urls[i]);\n        }\n        setDownloaded(true);\n\n        toast.dark(\n          <CustomToast\n            text=\"1 item will be download. See notification for details\"\n            type=\"download\"\n          />,\n          {\n            position: toast.POSITION.BOTTOM_CENTER,\n            hideProgressBar: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            className: \"toast-custom\",\n          }\n        );\n\n        //   new Downloader({\n        //     url: selected_file.path,\n        //     process: process,\n        //     mobileDisabled: false,\n        //     forceDesktopMode: true,\n        //   })\n        //     .then((res) => {\n        //       setDownloaded(true);\n        //       return toast.dark(\n        //         <CustomToast\n        //           text=\"1 item will be download. See notification for details\"\n        //           type=\"download\"\n        //         />,\n        //         {\n        //           position: toast.POSITION.BOTTOM_CENTER,\n        //           hideProgressBar: true,\n        //           closeOnClick: false,\n        //           pauseOnHover: true,\n        //           draggable: true,\n        //           className: \"toast-custom\",\n        //         }\n        //       )\n        //     }\n        //     )\n        //     .catch((e) => {\n        //       setDownloaded(true);\n        //       console.warn(e);\n        //     });\n      }\n    }\n    if (type === \"trash\") {\n      console.log(type);\n    }\n  };\n\n  const bind = useGesture({\n    onMouseDown: async (e) => {\n      if (e.button === 0) {\n        setContextTrigger(true);\n        if (isMobileOnly) {\n          const cur = e.target.id.split(\" \")[2];\n          const type = e.target.id.split(\" \")[1];\n          const access = e.target.id.split(\" \")[3];\n          if (cur !== \"0\") {\n            if (type === \"file\") {\n              setSelectedFolder({});\n              setDownloadPercentage(0);\n              setDownloadFailed(false);\n              if (access === \"detail\") {\n                const file = files.find((file) => file.id === parseInt(cur));\n                setSelectedFile(file);\n                setQuickFile({});\n                if (!e.target.className.includes(\"info-box\")) {\n                  setDownloadingModal(true);\n                  setDownloaded(false);\n\n                  let formData = new FormData();\n                  formData.append('file', file.id);\n\n                  const result = await fileSingedUrl(formData);\n                  const signed_urls = result.data.data.signed_urls;\n\n                  totalSizeRef.current = parseInt(file.size);\n                  downloadedRef.current = 0;\n\n                  for (let i = 0; i < signed_urls.length; i++) {\n                    await DownloadFileFromS3('file', signed_urls[i]);\n                  }\n                  setDownloaded(true);\n\n                  toast.dark(\n                    <CustomToast\n                      text=\"1 item will be download. See notification for details\"\n                      type=\"download\"\n                    />,\n                    {\n                      position: toast.POSITION.BOTTOM_CENTER,\n                      hideProgressBar: true,\n                      closeOnClick: false,\n                      pauseOnHover: true,\n                      draggable: true,\n                      className: \"toast-custom\",\n                    }\n                  );\n\n                  // new Downloader({\n                  //   url: file.path,\n                  //   process: process,\n                  //   mobileDisabled: false,\n                  //   forceDesktopMode: true,\n                  // })\n                  //   .then((res) => {\n                  //     setDownloaded(true);\n\n                  //     return toast.dark(\n                  //       <CustomToast\n                  //         text=\"1 item will be download. See notification for details\"\n                  //         type=\"download\"\n                  //       />,\n                  //       {\n                  //         position: toast.POSITION.BOTTOM_CENTER,\n                  //         hideProgressBar: true,\n                  //         closeOnClick: false,\n                  //         pauseOnHover: true,\n                  //         draggable: true,\n                  //         className: \"toast-custom\",\n                  //       }\n                  //     );\n                  //   }\n                  //   )\n                  //   .catch((e) => {\n                  //     setDownloaded(true);\n                  //     console.warn(e);\n                  //   });\n                }\n              } else {\n                const file = quick_files.find(\n                  (file) => file.id === parseInt(cur)\n                );\n                setQuickFile(file);\n                setSelectedFile({});\n                setDownloadingModal(true);\n                setDownloaded(false);\n\n                let formData = new FormData();\n                formData.append('file', file.id);\n\n                const result = await fileSingedUrl(formData);\n                const signed_urls = result.data.data.signed_urls;\n\n                totalSizeRef.current = parseInt(file.size);\n                downloadedRef.current = 0;\n\n                for (let i = 0; i < signed_urls.length; i++) {\n                  await DownloadFileFromS3('file', signed_urls[i]);\n                }\n                setDownloaded(true);\n\n                toast.dark(\n                  <CustomToast\n                    text=\"1 item will be download. See notification for details\"\n                    type=\"download\"\n                  />,\n                  {\n                    position: toast.POSITION.BOTTOM_CENTER,\n                    hideProgressBar: true,\n                    closeOnClick: false,\n                    pauseOnHover: true,\n                    draggable: true,\n                    className: \"toast-custom\",\n                  }\n                );\n                // new Downloader({\n                //   url: file.path,\n                //   process: process,\n                //   mobileDisabled: false,\n                //   forceDesktopMode: true,\n                // })\n                //   .then((res) => {\n                //     setDownloaded(true);\n                //     return toast.dark(\n                //       <CustomToast\n                //         text=\"1 item will be download. See notification for details\"\n                //         type=\"download\"\n                //       />,\n                //       {\n                //         position: toast.POSITION.BOTTOM_CENTER,\n                //         hideProgressBar: true,\n                //         closeOnClick: false,\n                //         pauseOnHover: true,\n                //         draggable: true,\n                //         className: \"toast-custom\",\n                //       }\n                //     )\n                //   }\n                //   )\n                //   .catch((e) => {\n                //     setDownloaded(true);\n                //     console.warn(e);\n                //   });\n              }\n            } else {\n              setSelectedFile({});\n              setQuickFile({});\n              const folder = foldersRef.current.find(\n                (folder) => folder.id === parseInt(cur)\n              );\n              setSelectedFolder(folder);\n              if (!e.target.className.includes(\"info-box\")) {\n                props.history.push({\n                  pathname:\n                    props.location.pathname[\n                      props.location.pathname.length - 1\n                    ] !== \"/\"\n                      ? `${props.location.pathname}/${folder.name}`\n                      : `${props.location.pathname}${folder.name}`,\n                  state: { name: folder.name, id: folder.id },\n                });\n              }\n            }\n          } else {\n            setSelectedFile({});\n            setSelectedFolder({});\n            setQuickFile({});\n          }\n        } else {\n          const cur = e.target.id.split(\" \")[2];\n          const type = e.target.id.split(\" \")[1];\n          const access = e.target.id.split(\" \")[3]\n            ? e.target.id.split(\" \")[3]\n            : \"\";\n          if (type === \"file\") {\n            setSelectedFolder({});\n            if (access === \"detail\") {\n              const file = files.find((file) => file.id === parseInt(cur));\n              setSelectedFile(file);\n              setQuickFile({});\n            } else {\n              const file = quick_files.find(\n                (file) => file.id === parseInt(cur)\n              );\n              setQuickFile(file);\n              setSelectedFile({});\n            }\n          } else {\n            setSelectedFile({});\n            setQuickFile({});\n            const folder = foldersRef.current.find(\n              (folder) => folder.id === parseInt(cur)\n            );\n            setSelectedFolder(folder);\n          }\n        }\n      } else {\n        setContextTrigger(true);\n      }\n    },\n  });\n\n  const dateFormat = (date) => {\n    return moment(date).format(\"MMM DD, YYYY\");\n  };\n\n  useEventListener(\"mousedown\", eventContextHandler);\n\n  return (\n    <Layout>\n      {is_page_loaded ? (\n        <div className=\"explorer-page\">\n          <Modal\n            isOpen={is_uploadingModal}\n            onRequestClose={closeModal}\n            className=\"file-upload-modal\"\n            overlayClassName=\"file-upload-modal-overlay\"\n          >\n            <div className=\"modal-header\">\n              <div className=\"loading-status\">\n                {is_upload_failed && (\n                  <span>\n                    Upload Failed\n                  </span>\n                )}\n                {!is_upload_failed && !is_uploaded && (\n                  <span>\n                    Uploading {file_count} {file_count > 1 ? \"items\" : \"item\"} - {upload_percent}% completed\n                  </span>\n                )}\n                {!is_upload_failed && is_uploaded && (\n                  <span>\n                    {total_file_count} &nbsp;\n                    {total_file_count > 1 ? \"uploads \" : \"upload \"}\n                    completed\n                  </span>\n                )}\n              </div>\n              <div className=\"btn-group\">\n                <Popup\n                  trigger={\n                    <button className=\"tooltip\" onClick={minimizeModal}>\n                      {!is_minimized ? (\n                        <svg\n                          x=\"0px\"\n                          y=\"0px\"\n                          width=\"14px\"\n                          height=\"14px\"\n                          viewBox=\"0 0 24 24\"\n                          focusable=\"false\"\n                        >\n                          <path\n                            fill=\"#FFFFFF\"\n                            d=\"M21.17,5.17L12,14.34l-9.17-9.17L0,8l12,12,12-12z\"\n                          ></path>\n                        </svg>\n                      ) : (\n                          <svg\n                            x=\"0px\"\n                            y=\"0px\"\n                            width=\"14px\"\n                            height=\"14px\"\n                            viewBox=\"0 0 24 24\"\n                            focusable=\"false\"\n                          >\n                            <path\n                              fill=\"#FFFFFF\"\n                              d=\"M2.83,18.83L12,9.66l9.17,9.17L24,16,12,4,0,16z\"\n                            ></path>\n                          </svg>\n                        )}\n                    </button>\n                  }\n                  position=\"bottom center\"\n                  on=\"hover\"\n                  arrow={false}\n                >\n                  <span className=\"content\">Minimize</span>\n                </Popup>\n                <Popup\n                  trigger={\n                    <button className=\"tooltip\" onClick={closeModal}>\n                      <svg\n                        x=\"0px\"\n                        y=\"0px\"\n                        width=\"14px\"\n                        height=\"14px\"\n                        viewBox=\"0 0 10 10\"\n                        focusable=\"false\"\n                        fill=\"#FFFFFF\"\n                      >\n                        <polygon points=\"10,1.01 8.99,0 5,3.99 1.01,0 0,1.01 3.99,5 0,8.99 1.01,10 5,6.01 8.99,10 10,8.99 6.01,5 \"></polygon>\n                      </svg>\n                    </button>\n                  }\n                  position=\"bottom center\"\n                  on=\"hover\"\n                  arrow={false}\n                >\n                  <span className=\"content\">Close</span>\n                </Popup>\n              </div>\n            </div>\n            {is_upload_failed && (\n              <>\n                Upload failed &nbsp;\n                <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <g>\n                    <path stroke=\"null\" id=\"svg_1\" fill=\"#D72828\" d=\"m10,0.11117c-5.461519,0 -9.88883,4.427312 -9.88883,9.88883s4.427312,9.88883 9.88883,9.88883s9.88883,-4.427312 9.88883,-9.88883s-4.427312,-9.88883 -9.88883,-9.88883zm4.943179,13.958496l-0.874337,0.873513l-4.068842,-4.06843l-4.06843,4.06843l-0.874749,-0.873513l4.069254,-4.069254l-4.069254,-4.069254l0.873513,-0.874337l4.069666,4.069666l4.070078,-4.069666l0.873101,0.874337l-4.068842,4.069254l4.068842,4.069254z\" />\n                  </g>\n                </svg>\n              </>\n            )}\n            {!is_upload_failed && !is_minimized && (\n              <div\n                className={\n                  total_file_count > 10 ? \"modal-body extra\" : \"modal-body\"\n                }\n              >\n                {Object.values(uploading_files).map((file, i) => (\n                  <div className=\"item\" key={i}>\n                    <div className=\"content\">\n                      <div className={!file.uploaded ? \"logo loading\" : \"logo\"}>\n                        <img src={matchImageResource16(file)} alt={file.name} />\n                      </div>\n                      <div className={!file.uploaded ? \"name loading\" : \"name\"}>\n                        <span>{file.name}</span>\n                        <span></span>\n                      </div>\n                      <div className=\"status\">\n                        {!file.uploaded ? (\n                          <ReactLoading\n                            type=\"spin\"\n                            color=\"#929292\"\n                            className=\"loading\"\n                          />\n                        ) : (\n                            <div className=\"icon\">\n                              <ReactHoverObserver>\n                                {({ isHovering }) => (\n                                  <React.Fragment>\n                                    {isHovering ? (\n                                      <svg\n                                        width=\"24px\"\n                                        height=\"24px\"\n                                        viewBox=\"0 0 24 24\"\n                                        focusable=\"false\"\n                                        onClick={() =>\n                                          onHandleUploadFileSelect(file)\n                                        }\n                                      >\n                                        <path d=\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"></path>\n                                      </svg>\n                                    ) : (\n                                        <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"#0F9D58\"\n                                        >\n                                          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n                                        </svg>\n                                      )}\n                                  </React.Fragment>\n                                )}\n                              </ReactHoverObserver>\n                            </div>\n                          )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                {Object.values(uploading_folders).map((folder, i) => (\n                  <div className=\"item\" key={i}>\n                    <div className=\"content\">\n                      <div className={!folder.uploaded ? \"logo loading\" : \"logo\"}>\n                        <svg\n                          x=\"0px\"\n                          y=\"0px\"\n                          focusable=\"false\"\n                          viewBox=\"0 0 24 24\"\n                          height=\"24px\"\n                          width=\"24px\"\n                          fill=\"#5f6368\"\n                        >\n                          <g>\n                            <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"></path>\n                            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                          </g>\n                        </svg>\n                      </div>\n                      <div className={!folder.uploaded ? \"name loading\" : \"name\"}>\n                        <span>{folder.name}</span>\n                        <span>\n                          {!folder.uploaded ? 0 : folder.count} of {folder.count}\n                        </span>\n                      </div>\n                      <div className=\"status\">\n                        {!folder.uploaded ? (\n                          <ReactLoading\n                            type=\"spin\"\n                            color=\"#929292\"\n                            className=\"loading\"\n                          />\n                        ) : (\n                            <div className=\"icon\">\n                              <ReactHoverObserver>\n                                {({ isHovering }) => (\n                                  <React.Fragment>\n                                    {isHovering ? (\n                                      <svg\n                                        width=\"24px\"\n                                        height=\"24px\"\n                                        viewBox=\"0 0 24 24\"\n                                        focusable=\"false\"\n                                        onClick={() =>\n                                          onHandleUploadFolderSelect(folder)\n                                        }\n                                      >\n                                        <path d=\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"></path>\n                                      </svg>\n                                    ) : (\n                                        <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"#0F9D58\"\n                                        >\n                                          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n                                        </svg>\n                                      )}\n                                  </React.Fragment>\n                                )}\n                              </ReactHoverObserver>\n                            </div>\n                          )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </Modal>\n          <Modal\n            isOpen={is_downloadingModal}\n            onRequestClose={closeModal}\n            className=\"file-download-modal\"\n            overlayClassName=\"file-download-modal-overlay\"\n          >\n            <div className=\"modal-header\">\n              <div className=\"loading-status\">\n                {is_download_failed && (\n                  <span>\n                    Download Failed\n                  </span>\n                )}\n                {!is_download_failed && !is_downloaded && (\n                  <span>\n                    Downloading - {download_percent}% completed\n                  </span>\n                )}\n                {!is_download_failed && is_downloaded && (\n                  <span>\n                    Download Completed\n                  </span>\n                )}\n              </div>\n              <div className=\"btn-group\">\n                <Popup\n                  trigger={\n                    <button className=\"tooltip\" onClick={closeModal}>\n                      <svg\n                        x=\"0px\"\n                        y=\"0px\"\n                        width=\"14px\"\n                        height=\"14px\"\n                        viewBox=\"0 0 10 10\"\n                        focusable=\"false\"\n                        fill=\"#FFFFFF\"\n                      >\n                        <polygon points=\"10,1.01 8.99,0 5,3.99 1.01,0 0,1.01 3.99,5 0,8.99 1.01,10 5,6.01 8.99,10 10,8.99 6.01,5 \"></polygon>\n                      </svg>\n                    </button>\n                  }\n                  position=\"bottom center\"\n                  on=\"hover\"\n                  arrow={false}\n                >\n                  <span className=\"content\">Close</span>\n                </Popup>\n              </div>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"item\">\n                <div className=\"content\">\n                  <div className=\"status\">\n                    {is_download_failed && (\n                      <>\n                        Failed &nbsp;\n                        <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <g>\n                            <path stroke=\"null\" id=\"svg_1\" fill=\"#D72828\" d=\"m10,0.11117c-5.461519,0 -9.88883,4.427312 -9.88883,9.88883s4.427312,9.88883 9.88883,9.88883s9.88883,-4.427312 9.88883,-9.88883s-4.427312,-9.88883 -9.88883,-9.88883zm4.943179,13.958496l-0.874337,0.873513l-4.068842,-4.06843l-4.06843,4.06843l-0.874749,-0.873513l4.069254,-4.069254l-4.069254,-4.069254l0.873513,-0.874337l4.069666,4.069666l4.070078,-4.069666l0.873101,0.874337l-4.068842,4.069254l4.068842,4.069254z\" />\n                          </g>\n                        </svg>\n                      </>\n                    )\n                    }\n                    {!is_download_failed && !is_downloaded ? (\n                      <>\n                        Preparing &nbsp;\n                      <ReactLoading\n                          type=\"spin\"\n                          color=\"#929292\"\n                          className=\"loading\"\n                        />\n                      </>\n                    ) : !is_download_failed && is_downloaded ? <>\n                      Done &nbsp;\n                        <svg\n                        width=\"24px\"\n                        height=\"24px\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"#0F9D58\"\n                      >\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n                      </svg>\n                    </>\n                        : null\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Modal>\n          <Modal\n            isOpen={is_creatingModal}\n            onRequestClose={closeCreateModal}\n            onAfterOpen={afterOpenCreateModal}\n            className=\"create-folder-modal\"\n            overlayClassName=\"modal-overlay\"\n          >\n            <div className=\"modal-header\">\n              <span>New folder</span>\n              <Popup\n                trigger={\n                  <button className=\"tooltip\" onClick={closeCreateModal}>\n                    <svg\n                      x=\"0px\"\n                      y=\"0px\"\n                      width=\"14px\"\n                      height=\"14px\"\n                      viewBox=\"0 0 10 10\"\n                      focusable=\"false\"\n                      fill=\"#000000\"\n                    >\n                      <polygon points=\"10,1.01 8.99,0 5,3.99 1.01,0 0,1.01 3.99,5 0,8.99 1.01,10 5,6.01 8.99,10 10,8.99 6.01,5 \"></polygon>\n                    </svg>\n                  </button>\n                }\n                position=\"bottom center\"\n                on=\"hover\"\n                arrow={false}\n              >\n                <span className=\"content\">Close</span>\n              </Popup>\n            </div>\n            <div className=\"modal-body\">\n              <Input\n                className=\"input\"\n                onChange={onHandleFolderTitle}\n                defaultValue=\"Untitled folder\"\n                ref={inputRef}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"btn\" onClick={closeCreateModal}>\n                Close\n              </button>\n              <button className=\"btn save\" onClick={onCreateNewFolder}>\n                Save\n              </button>\n            </div>\n          </Modal>\n          <ContextMenuTrigger id=\"context-menu\" disable={is_triggerable}>\n            <Sidebar as={Menu} vertical visible={true}>\n              <Dropdown text=\"New\" icon={null} labeled className=\"button-tool\">\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    icon=\"folder outline\"\n                    label=\"New folder\"\n                    onClick={() => handleDropdown(\"new_folder\")}\n                  ></Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item\n                    icon=\"upload\"\n                    label=\"Upload files\"\n                    onClick={() => handleDropdown(\"upload_file\")}\n                  ></Dropdown.Item>\n                  <Dropdown.Item\n                    icon=\"folder outline\"\n                    label=\"Upload folder\"\n                    onClick={() => handleDropdown(\"upload_folder\")}\n                  ></Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item\n                    icon=\"google\"\n                    label=\"Google Docs\"\n                    onClick={() => handleDropdown(\"google_docs\")}\n                  ></Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n              <Menu.Item as={Link} exact to=\"/drive\">\n                <svg\n                  width=\"24px\"\n                  height=\"24px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"#000000\"\n                  focusable=\"false\"\n                >\n                  <path d=\"M19 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H5v-1h14v1zm0-3H5V4h14v13zm-9.35-2h5.83l1.39-2.77h-5.81zm7.22-3.47L13.65 6h-2.9L14 11.53zm-5.26-2.04l-1.45-2.52-3.03 5.51L8.6 15z\"></path>\n                </svg>\n                <span>My Drive</span>\n              </Menu.Item>\n            </Sidebar>\n            <div className=\"page-container\">\n              <div className=\"page-navbar\">\n                <div className=\"navbar-dropdown-menu\">\n                  <Dropdown text=\"My Drive\" labeled className=\"navbar-dropdown\">\n                    <Dropdown.Menu>\n                      <Dropdown.Item\n                        icon=\"folder outline\"\n                        label=\"New folder\"\n                        onClick={() => handleDropdown(\"new_folder\")}\n                      ></Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item\n                        icon=\"upload\"\n                        label=\"Upload files\"\n                        onClick={() => handleDropdown(\"upload_file\")}\n                      ></Dropdown.Item>\n                      <Dropdown.Item\n                        icon=\"folder outline\"\n                        label=\"Upload folder\"\n                        onClick={() => handleDropdown(\"upload_folder\")}\n                      ></Dropdown.Item>\n                      <Dropdown.Divider />\n                      <Dropdown.Item\n                        icon=\"google\"\n                        label=\"Google Docs\"\n                        onClick={() => handleDropdown(\"google_docs\")}\n                      ></Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </div>\n                <div className=\"navbar-mobile\">\n                  <Button\n                    icon=\"bars\"\n                    labelPosition=\"left\"\n                    as={Link}\n                    content=\"My Drive\"\n                  />\n                </div>\n                <div className=\"navbar-tools\">\n                  <button className=\"btn-layout\" onClick={handleChangeLayout}>\n                    {is_gridType ? (\n                      <svg\n                        width=\"24px\"\n                        height=\"24px\"\n                        viewBox=\"0 0 24 24\"\n                        focusable=\"false\"\n                        fill=\"#000000\"\n                      >\n                        <path d=\"M3,5v14h18V5H3z M7,7v2H5V7H7z M5,13v-2h2v2H5z M5,15h2v2H5V15z M19,17H9v-2h10V17z M19,13H9v-2h10V13z M19,9H9V7h10V9z\"></path>\n                      </svg>\n                    ) : (\n                        <svg\n                          width=\"24px\"\n                          height=\"24px\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"#000000\"\n                        >\n                          <path d=\"M2,5v14h20V5H2z M14,7v4h-4V7H14z M4,7h4v4H4V7z M16,11V7h4v4H16z M4,17v-4h4v4H4z M10,17v-4h4v4H10z M20,17 h-4v-4h4V17z\"></path>\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                        </svg>\n                      )}\n                  </button>\n                  <button className=\"btn-layout\" onClick={handleShowDetail}>\n                    <svg\n                      width=\"24px\"\n                      height=\"24px\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"#000000\"\n                    >\n                      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                      <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              <div className=\"context-area\" id=\"context-area\">\n                {isMobileOnly && uploading_files.length > 0 && (\n                  <div className=\"layout-view upload\">\n                    <div className=\"layout-content\">\n                      <div className=\"layout-header\">\n                        <h2>Uploads</h2>\n                      </div>\n                      <div className=\"main-content\">\n                        {uploading_files.map((item, i) => (\n                          <div className=\"guesture\">\n                            <UploadViews key={i} file={item} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                )}\n                {files.length > 0 ? (\n                  <div className=\"layout-view\">\n                    <div className=\"layout-content quick\">\n                      <div className=\"layout-header\">\n                        <h2>Quick Access</h2>\n                      </div>\n                      <div className=\"main-content\">\n                        {quick_files.map((item, i) => (\n                          <animated.div\n                            {...bind()}\n                            className={\n                              quick_file && item.id === quick_file.id\n                                ? \"guesture active\"\n                                : \"guesture\"\n                            }\n                            id={\"guesture file \" + item.id + \" quick\"}\n                            key={i}\n                          >\n                            <FileViews\n                              path={item.path}\n                              type={item.content_type}\n                              name={item.name}\n                              id={item.id}\n                              access=\"quick\"\n                            />\n                          </animated.div>\n                        ))}\n                      </div>\n                    </div>\n                    {folders.length > 0 && (\n                      <div\n                        className={\n                          is_gridType\n                            ? \"layout-content folder\"\n                            : \"layout-content folder list\"\n                        }\n                        id=\"layout-folder\"\n                      >\n                        <div className=\"layout-header\" id=\"folder-header\">\n                          <h2>Folders</h2>\n                        </div>\n                        <div className=\"main-content\" id=\"folder-view\">\n                          {folders.map((item, i) => (\n                            <animated.div\n                              {...bind()}\n                              className={\n                                selected_folder &&\n                                  item.id === selected_folder.id\n                                  ? \"guesture active\"\n                                  : \"guesture\"\n                              }\n                              data-value=\"guesture\"\n                              key={i}\n                            >\n                              <Element name={item.name + \"_grid_folder_\" + item.id}>\n                                <FolderViews\n                                  name={item.name}\n                                  id={item.id}\n                                  onHandleSide={onHandleMobileSideOpen}\n                                />\n                              </Element>\n                            </animated.div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    <div className=\"layout-content file\" id=\"layout-file\">\n                      <div className=\"layout-header\" id=\"file-header\">\n                        {(is_gridType || (!is_gridType && isMobileOnly)) && (\n                          <h2>Files</h2>\n                        )}\n                        {!is_gridType && !isMobileOnly && (\n                          <div className=\"list-tool\">\n                            <div className=\"th-name\">\n                              <span>Name</span>\n                              <button\n                                class=\"direction\"\n                                onClick={handleSortOrder}\n                              >\n                                {order_desc ? (\n                                  <svg\n                                    width=\"18px\"\n                                    height=\"18px\"\n                                    viewBox=\"0 0 48 48\"\n                                    focusable=\"false\"\n                                    fill=\"#000000\"\n                                  >\n                                    <path\n                                      fill=\"none\"\n                                      d=\"M0 0h48v48H0V0z\"\n                                    ></path>\n                                    <path d=\"M8 24l2.83 2.83L22 15.66V40h4V15.66l11.17 11.17L40 24 24 8 8 24z\"></path>\n                                  </svg>\n                                ) : (\n                                    <svg\n                                      width=\"18px\"\n                                      height=\"18px\"\n                                      viewBox=\"0 0 48 48\"\n                                      focusable=\"false\"\n                                      fill=\"#000000\"\n                                    >\n                                      <path\n                                        fill=\"none\"\n                                        d=\"M0 0h48v48H0V0z\"\n                                      ></path>\n                                      <path d=\"M40 24l-2.82-2.82L26 32.34V8h-4v24.34L10.84 21.16 8 24l16 16 16-16z\"></path>\n                                    </svg>\n                                  )}\n                              </button>\n                            </div>\n                            <div className=\"th-owner\">\n                              <span>Owner</span>\n                            </div>\n                            <div className=\"th-modified\">\n                              <span>Last modified</span>\n                            </div>\n                            <div className=\"th-size\">\n                              <span>File size</span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"main-content\" id=\"detail-view\">\n                        {is_gridType &&\n                          files.map((item, i) => (\n                            <animated.div\n                              {...bind()}\n                              className={\n                                selected_file && item.id === selected_file.id\n                                  ? \"guesture active\"\n                                  : \"guesture\"\n                              }\n                              data-value=\"guesture\"\n                              key={i}\n                            >\n                              <Element name={item.name + \"_grid_file_\" + item.id}>\n                                <FileViews\n                                  path={item.path}\n                                  type={item.content_type}\n                                  name={item.name}\n                                  id={item.id}\n                                  access=\"detail\"\n                                  onHandleSide={onHandleMobileSideOpen}\n                                />\n                              </Element>\n                            </animated.div>\n                          ))}\n                        {!is_gridType && (\n                          <div className=\"list-group\">\n                            {!isMobileOnly &&\n                              folders.map((item, i) => (\n                                <animated.div\n                                  {...bind()}\n                                  className={\n                                    selected_folder &&\n                                      item.id === selected_folder.id\n                                      ? \"guesture active\"\n                                      : \"guesture\"\n                                  }\n                                  data-value=\"guesture\"\n                                  key={i}\n                                >\n                                  <Element name={item.name + \"_list_folder_\" + item.id}>\n                                    <ListViews\n                                      owner=\"\"\n                                      last_modified={item.modified_date}\n                                      type=\"folder\"\n                                      name={item.name}\n                                      size=\"\"\n                                      id={item.id}\n                                      onHandleSide={onHandleMobileSideOpen}\n                                    />\n                                  </Element>\n                                </animated.div>\n                              ))}\n                            {files.map((item, i) => (\n                              <animated.div\n                                {...bind()}\n                                className={\n                                  selected_file && item.id === selected_file.id\n                                    ? \"guesture active\"\n                                    : \"guesture\"\n                                }\n                                data-value=\"guesture\"\n                                key={i}\n                              >\n                                <Element name={item.name + \"_list_file_\" + item.id}>\n                                  <ListViews\n                                    owner=\"\"\n                                    last_modified={item.modified_date}\n                                    type={item.content_type}\n                                    name={item.name}\n                                    size={item.size}\n                                    id={item.id}\n                                    access=\"detail\"\n                                    onHandleSide={onHandleMobileSideOpen}\n                                  />\n                                </Element>\n                              </animated.div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    {isMobileOnly && (\n                      <a\n                        className=\"mobile-btn-add\"\n                        onClick={onHandleMobilePopupOpen}\n                      />\n                    )}\n                  </div>\n                ) : (\n                    <div className=\"layout-view\" id=\"quick-context-area\">\n                      {folders.length > 0 && (\n                        <div\n                          className={\n                            is_gridType\n                              ? \"layout-content folder\"\n                              : \"layout-content folder list\"\n                          }\n                        >\n                          <div className=\"layout-header\">\n                            <h2>Folders</h2>\n                          </div>\n                          <div className=\"main-content\" id=\"folder-view\">\n                            {folders.map((item, i) => (\n                              <animated.div\n                                {...bind()}\n                                className={\n                                  selected_folder &&\n                                    item.id === selected_folder.id\n                                    ? \"guesture active\"\n                                    : \"guesture\"\n                                }\n                                data-value=\"guesture\"\n                                key={i}\n                              >\n                                <FolderViews\n                                  name={item.name}\n                                  id={item.id}\n                                  onHandleSide={onHandleMobileSideOpen}\n                                />\n                              </animated.div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                      <div className=\"layout-content quick\">\n                        <div className=\"layout-header\">\n                          {is_gridType && <h2>Files</h2>}\n                          {!is_gridType && (\n                            <div className=\"list-tool\">\n                              <div className=\"td-name\">\n                                <span>Name</span>\n                                <button\n                                  class=\"direction\"\n                                  onClick={handleSortOrder}\n                                >\n                                  {order_desc ? (\n                                    <svg\n                                      width=\"18px\"\n                                      height=\"18px\"\n                                      viewBox=\"0 0 48 48\"\n                                      focusable=\"false\"\n                                      fill=\"#000000\"\n                                    >\n                                      <path\n                                        fill=\"none\"\n                                        d=\"M0 0h48v48H0V0z\"\n                                      ></path>\n                                      <path d=\"M8 24l2.83 2.83L22 15.66V40h4V15.66l11.17 11.17L40 24 24 8 8 24z\"></path>\n                                    </svg>\n                                  ) : (\n                                      <svg\n                                        width=\"18px\"\n                                        height=\"18px\"\n                                        viewBox=\"0 0 48 48\"\n                                        focusable=\"false\"\n                                        fill=\"#000000\"\n                                      >\n                                        <path\n                                          fill=\"none\"\n                                          d=\"M0 0h48v48H0V0z\"\n                                        ></path>\n                                        <path d=\"M40 24l-2.82-2.82L26 32.34V8h-4v24.34L10.84 21.16 8 24l16 16 16-16z\"></path>\n                                      </svg>\n                                    )}\n                                </button>\n                              </div>\n                              <div className=\"td-owner\">\n                                <span>Owner</span>\n                              </div>\n                              <div className=\"td-modified\">\n                                <span>Last modified</span>\n                              </div>\n                              <div className=\"td-size\">\n                                <span>File size</span>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"main-content\" id=\"quick-view\">\n                          {is_gridType &&\n                            quick_files.map((item, i) => (\n                              <div className=\"guesture\">\n                                <FileViews\n                                  key={i}\n                                  path={item.path}\n                                  type={item.content_type}\n                                  name={item.name}\n                                  id={item.id}\n                                />\n                              </div>\n                            ))}\n                          {!is_gridType && (\n                            <div className=\"list-group\">\n                              {quick_files.map((item, i) => (\n                                <div className=\"guesture\">\n                                  <ListViews\n                                    key={i}\n                                    owner=\"\"\n                                    last_modified={item.modified_date}\n                                    type={item.content_type}\n                                    name={item.name}\n                                    size={item.size}\n                                    id={item.id}\n                                  />\n                                </div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      {isMobileOnly && (\n                        <a\n                          className=\"mobile-btn-add\"\n                          onClick={onHandleMobilePopupOpen}\n                        />\n                      )}\n                    </div>\n                  )}\n              </div>\n              {isMobileOnly && (\n                <React.Fragment>\n                  {is_mobilePopup && (\n                    <div className=\"mobile-side-overlay\"></div>\n                  )}\n                  <TransitionablePortal\n                    open={is_mobilePopup}\n                    onClose={onHandleMobilePopupClose}\n                  >\n                    <Segment className=\"mobile-popup\">\n                      <div className=\"header\">\n                        <h3>Create new</h3>\n                      </div>\n                      <div className=\"body\">\n                        <div className=\"item-row\">\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"create_folder\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <Icon name=\"folder\" />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Folder</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() => onHandleMobilePopupItem(\"upload\")}\n                          >\n                            <div className=\"icon-box\">\n                              <Icon name=\"upload\" />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Upload</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() => onHandleMobilePopupItem(\"scan\")}\n                          >\n                            <div className=\"icon-box\">\n                              <Icon name=\"camera\" />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Scan</Label>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"item-row\">\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"google_doc\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <img\n                                src={imageGroup16.google_doc}\n                                alt=\"google_doc\"\n                              />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Google Docs</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"google_sheet\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <img\n                                src={imageGroup16.google_sheet}\n                                alt=\"google_sheet\"\n                              />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Google Sheets</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"google_slide\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <img\n                                src={imageGroup16.google_slide}\n                                alt=\"google_slide\"\n                              />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Google Slides</Label>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Segment>\n                  </TransitionablePortal>\n                </React.Fragment>\n              )}\n              {isMobileOnly && (\n                <React.Fragment>\n                  {is_mobileSide && <div className=\"mobile-side-overlay\"></div>}\n                  <TransitionablePortal\n                    open={is_mobileSide}\n                    onClose={onHandleMobileSideClose}\n                    transition={{ animation: \"fade left\", duration: 500 }}\n                  >\n                    <Segment className=\"mobile-side\">\n                      <div className=\"header\">\n                        {selected_file.name && (\n                          <React.Fragment>\n                            {selected_file.content_type.includes(\"image\") ? (\n                              <div className=\"image\">\n                                <div\n                                  style={{\n                                    backgroundImage: `url(${selected_file.path})`,\n                                    backgroundRepeat: \"no-repeat\",\n                                    backgroundSize: \"cover\",\n                                    width: 30,\n                                    height: 30,\n                                  }}\n                                />\n                              </div>\n                            ) : (\n                                <div className=\"image\">\n                                  <img\n                                    src={matchImageResource16({\n                                      type: selected_file.content_type,\n                                    })}\n                                    alt={selected_file.name}\n                                    className=\"icon\"\n                                  />\n                                </div>\n                              )}\n                            <h3>{selected_file.name}</h3>\n                          </React.Fragment>\n                        )}\n                        {selected_folder.name && (\n                          <React.Fragment>\n                            <div className=\"svg-box\">\n                              <svg\n                                x=\"0px\"\n                                y=\"0px\"\n                                focusable=\"false\"\n                                viewBox=\"0 0 24 24\"\n                                height=\"24px\"\n                                width=\"24px\"\n                                fill=\"#5f6368\"\n                              >\n                                <g>\n                                  <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"></path>\n                                  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                </g>\n                              </svg>\n                            </div>\n                            <h3>{selected_folder.name}</h3>\n                          </React.Fragment>\n                        )}\n                      </div>\n                      <div className=\"body\">\n                        <div className=\"detail\">\n                          <div className=\"item\">\n                            <label>Type</label>\n                            <div className=\"info\">\n                              <p>\n                                {selected_file.name\n                                  ? selected_file.content_type\n                                  : \"Google Drive Folder\"}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"item\">\n                            <label>Location</label>\n                            <div className=\"info\">\n                              <p>My Drive</p>\n                            </div>\n                          </div>\n                          <div className=\"item\">\n                            <label>Created</label>\n                            <div className=\"info\">\n                              <p>\n                                {selected_file.name\n                                  ? dateFormat(selected_file.created_date)\n                                  : dateFormat(selected_folder.created_date)}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"item\">\n                            <label>Modified</label>\n                            <div className=\"info\">\n                              <p>\n                                {selected_file.name\n                                  ? dateFormat(selected_file.modified_date)\n                                  : dateFormat(selected_folder.modified_date)}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                        {selected_file.name && (\n                          <div className=\"tools\">\n                            {!isIOS && (\n                              <div\n                                className=\"item\"\n                                onClick={() =>\n                                  onHandleMobileSideItem(\"download\")\n                                }\n                              >\n                                <div className=\"icon-box\">\n                                  <Icon name=\"download\" />\n                                </div>\n                                <label>Download</label>\n                              </div>\n                            )}\n                            <div\n                              className=\"item\"\n                              onClick={() => onHandleMobileSideItem(\"trash\")}\n                            >\n                              <div className=\"icon-box\">\n                                <Icon name=\"trash alternate\" />\n                              </div>\n                              <label>Remove</label>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </Segment>\n                  </TransitionablePortal>\n                </React.Fragment>\n              )}\n            </div>\n            <ContextMenu\n              id=\"context-menu\"\n              className={is_triggerable ? \"context hide\" : \"context\"}\n            >\n              {is_context ? (\n                <React.Fragment>\n                  <MenuItem data={{ foo: \"new_folder\" }} onClick={handleClick}>\n                    <Icon name=\"folder outline\" /> New folder\n                  </MenuItem>\n                  <MenuItem divider />\n                  <MenuItem data={{ foo: \"upload_file\" }} onClick={handleClick}>\n                    <Icon name=\"upload\" /> Upload files\n                    <input\n                      type=\"file\"\n                      hidden\n                      multiple\n                      onChange={handleChangeFile}\n                      ref={fileRef}\n                    />\n                  </MenuItem>\n                  <MenuItem\n                    data={{ foo: \"upload_folder\" }}\n                    onClick={handleClick}\n                  >\n                    <Icon name=\"folder outline\" /> Upload folder\n                    <input\n                      type=\"file\"\n                      hidden\n                      multiple\n                      webkitdirectory\n                      onChange={handleChangeFolder}\n                      ref={folderRef}\n                    />\n                  </MenuItem>\n                  <MenuItem divider />\n                  <MenuItem data={{ foo: \"google_doc\" }} onClick={handleClick}>\n                    <Icon name=\"google\" /> Google Docs\n                  </MenuItem>\n                </React.Fragment>\n              ) : (\n                  <React.Fragment>\n                    <MenuItem data={{ foo: \"download\" }} onClick={handleClick}>\n                      <Icon name=\"cloud download\" /> Download\n                  </MenuItem>\n                  </React.Fragment>\n                )}\n            </ContextMenu>\n          </ContextMenuTrigger>\n        </div>\n      ) : (\n          <Segment className=\"page-loader\">\n            <Dimmer active inverted>\n              <Loader size=\"large\"></Loader>\n            </Dimmer>\n          </Segment>\n        )}\n    </Layout>\n  );\n};\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport {\n  Sidebar,\n  Icon,\n  Menu,\n  Dropdown,\n  Dimmer,\n  Segment,\n  Loader,\n  Input,\n  Button,\n  Label,\n  TransitionablePortal,\n} from \"semantic-ui-react\";\nimport { isMobileOnly } from \"react-device-detect\";\nimport ReactHoverObserver from \"react-hover-observer\";\nimport ReactLoading from \"react-loading\";\nimport Modal from \"react-modal\";\nimport Popup from \"reactjs-popup\";\nimport moment from \"moment\";\nimport { animated } from \"react-spring\";\nimport { useGesture } from \"react-use-gesture\";\nimport { animateScroll as scroll, Element, scroller } from \"react-scroll\";\nimport { toast } from \"react-toastify\";\nimport { useEventListener } from \"../helpers/CustomHook\";\nimport {\n  getFilesByDirectory,\n  getAllFolders,\n  createFolder,\n  getFolders,\n  getSignedPostUrl,\n  getMultiPartUploadId,\n  uploadChunk,\n  completeMultiUpload,\n  completeFolderUpload,\n  completeUpload,\n  uploadSingleFile,\n  fileSingedUrl,\n  folderSignedUrls,\n  downloadSingleFile\n} from \"../helpers/RestAPI\";\nimport { imageGroup16 } from \"../helpers/ImageGroup\";\nimport { matchImageResource16 } from \"../helpers/MatchImageResource\";\nimport {\n  availableUploadArea,\n  availableDownloadArea,\n} from \"../helpers/AvailableArea\";\nimport {\n  FolderViews,\n  FileViews,\n  ListViews,\n  UploadViews,\n} from \"../containers/Views\";\nimport Layout from \"../containers/Layout\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nconst CustomToast = ({ closeToast, text, type }) => {\n  const onHandleCloseToast = () => {\n    closeToast();\n    scroll.scrollToBottom({ containerId: \"context-area\" });\n  };\n  return (\n    <div className=\"custom-toast-body\">\n      <label>{text}</label>\n      {type !== \"dowload\" && <a onClick={onHandleCloseToast}>Locate</a>}\n    </div>\n  );\n};\ntoast.configure();\n\nexport const Directory = (props) => {\n  Modal.setAppElement(\"#root\");\n  const fileRef = useRef();\n  const folderRef = useRef();\n  const inputRef = useRef();\n  const foldersRef = useRef();\n  const totalSizeRef = useRef();\n  const downloadedRef = useRef();\n\n  const [is_page_loaded, setPageLoaded] = useState(false);\n  const [is_uploadingModal, setUploadingModal] = useState(false);\n  const [is_downloadingModal, setDownloadingModal] = useState(false);\n  const [is_creatingModal, setCreatingModal] = useState(false);\n  const [is_minimized, setMinimize] = useState(false);\n  const [is_uploaded, setUploaded] = useState(false);\n  const [is_downloaded, setDownloaded] = useState(false);\n  const [is_context, setContext] = useState(true);\n  const [is_gridType, setViewType] = useState(true);\n  const [is_triggerable, setContextTrigger] = useState(true);\n  const [is_mobilePopup, setMobilePopup] = useState(false);\n  const [is_mobileSide, setMobileSide] = useState(false);\n  const [order_desc, setOrder] = useState(true);\n  const [file_count, setFileCount] = useState(0);\n  const [total_file_count, setTotalFileCount] = useState(0);\n  const [upload_percent, setUploadPercent] = useState(0);\n  const [download_percent, setDownloadPercentage] = useState(0);\n\n  const [is_download_failed, setDownloadFailed] = useState(false);\n  const [is_upload_failed, setUploadFailed] = useState(false);\n\n  const [uploading_files, setUploadingFiles] = useState([]);\n  const [uploading_folders, setUploadingFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [selected_file, setSelectedFile] = useState({});\n  const [selected_folder, setSelectedFolder] = useState({});\n  const [new_folder_title, setFolderTitle] = useState(\"Untitled folder\");\n  const [folders, setFolders] = useState([]);\n  const [cur_dir, setCurrentDirectory] = useState(\"\");\n  const [routeTree, setRouteTree] = useState([]);\n  const [mobileCurRoute, setMobileCurRoute] = useState({});\n\n  foldersRef.current = folders;\n\n  const CHUNK_SIZE = Math.pow(1024, 3);\n  const CHUNK_LIMIT = 5 * Math.pow(1024, 2);\n  const LIMIT = 9 * Math.pow(1024, 3);\n\n  useEffect(() => {\n    setPageLoaded(true);\n  }, [folders]);\n\n  let zip = new JSZip();\n  let downloadZip = null;\n\n  const validateURL = async () => {\n    const folders = await getAllFolders();\n    let is_valid = true;\n    if (!props.location.pathname.startsWith(\"/drive\")) {\n      is_valid = false;\n    }\n    const paths = props.location.pathname.substr(7).split(\"/\");\n\n    paths.forEach((path) => {\n      if (path) {\n        const is_exist = folders.find((element) => element.name === path);\n        if (!is_exist) {\n          is_valid = false;\n        }\n      }\n    });\n    return is_valid;\n  };\n\n  const directoryToID = async (dir) => {\n    const folders = await getAllFolders();\n    let paths = dir.split(\"/\");\n    paths = paths.filter((el) => el !== null && el !== \"\");\n    const current_folder = paths[paths.length - 1];\n\n    let available_folders = folders.filter(\n      (element) => element.name === current_folder\n    );\n    if (available_folders.length > 1) {\n      const prev_folder = paths[paths.length - 2];\n      const prev_folders = folders.filter(\n        (element) => element.name === prev_folder\n      );\n      let parent_id = \"\";\n      available_folders.forEach((sel) => {\n        const exist_ins = prev_folders.filter((el) => el.id === sel.parent);\n        if (exist_ins.length > 0) {\n          parent_id = sel.id;\n        }\n      });\n      return parent_id;\n    } else {\n      return available_folders[0].id;\n    }\n  };\n\n  useEffect(() => {\n    validateURL().then((is_valid) => {\n      if (!is_valid) {\n        props.history.push(\"/drive\");\n      } else {\n        const directory = props.location.pathname.substr(7);\n        setCurrentDirectory(directory);\n        setRoutes();\n        if (props.location.state) {\n          getFilesByDirectory(directory).then((res) => {\n            setFiles(res);\n            getFolders(props.location.state.id).then((response) => {\n              setFolders(response);\n              setPageLoaded(true);\n            });\n          });\n        } else {\n          getFilesByDirectory(directory).then((res) => {\n            setFiles(res);\n            directoryToID(directory).then((id) => {\n              getFolders(id).then((response) => {\n                setFolders(response);\n                setPageLoaded(true);\n              });\n            });\n          });\n        }\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (props.location.state) {\n      cur_dir && getFilesByDirectory(cur_dir).then((res) => {\n        if (uploading_files.length > 0) {\n          for (let index = 0; index < uploading_files.length; index++) {\n            for (let i = res.length - 1; i >= 0; i--) {\n              if (res[i].name === uploading_files[index].name && parseInt(res[i].size) === parseInt(uploading_files[index].size)) {\n                uploading_files[index].uploaded = true;\n                break;\n              }\n            }\n          }\n          setUploadingFiles(uploading_files);\n        }\n        setFiles(res);\n        getFolders(props.location.state.id).then((response) => {\n          if (uploading_folders.length > 0) {\n            for (let index = 0; index < uploading_folders.length; index++) {\n              for (let i = response.length - 1; i >= 0; i--) {\n                if (response[i].name === uploading_folders[index].name) {\n                  uploading_folders[index].uploaded = true;\n                  break;\n                }\n              }\n            }\n            setUploadingFolders(uploading_folders);\n          }\n          setFolders(response);\n          setPageLoaded(true);\n        });\n      });\n    } else {\n      cur_dir && getFilesByDirectory(cur_dir).then((res) => {\n        if (uploading_files.length > 0) {\n          for (let index = 0; index < uploading_files.length; index++) {\n            for (let i = res.length - 1; i >= 0; i--) {\n              if (res[i].name === uploading_files[index].name && parseInt(res[i].size) === parseInt(uploading_files[index].size)) {\n                uploading_files[index].uploaded = true;\n                break;\n              }\n            }\n          }\n          setUploadingFiles(uploading_files);\n        }\n        setFiles(res);\n        directoryToID(cur_dir).then((id) => {\n          getFolders(id).then((response) => {\n            if (uploading_folders.length > 0) {\n              for (let index = 0; index < uploading_folders.length; index++) {\n                for (let i = response.length - 1; i >= 0; i--) {\n                  if (response[i].name === uploading_folders[index].name) {\n                    uploading_folders[index].uploaded = true;\n                    break;\n                  }\n                }\n              }\n              setUploadingFolders(uploading_folders);\n            }\n            setFolders(response);\n            setPageLoaded(true);\n          });\n        });\n      });\n    }\n  }, [is_uploaded]);\n\n  useEffect(() => {\n    setTotalFileCount(total_file_count + file_count);\n  }, [file_count]);\n\n  const eventContextHandler = useCallback(\n    (e) => {\n      if (e.button === 2 && !isMobileOnly) {\n        if (\n          availableUploadArea.includes(e.target.id) ||\n          availableUploadArea.includes(e.target.getAttribute(\"data-value\"))\n        ) {\n          setContextTrigger(false);\n          setContext(true);\n        } else if (availableDownloadArea.includes(e.target.className)) {\n          const cur = e.target.id.split(\" \")[2];\n          const type = e.target.id.split(\" \")[1];\n          if (cur !== \"0\") {\n            setContext(false);\n            setContextTrigger(false);\n            if (type === \"file\") {\n              setSelectedFolder({});\n              const file = files.find((file) => file.id === parseInt(cur));\n              setSelectedFile(file);\n            } else {\n              setSelectedFile({});\n              const folder = foldersRef.current.find(\n                (folder) => folder.id === parseInt(cur)\n              );\n              setSelectedFolder(folder);\n            }\n          } else {\n            setContextTrigger(true);\n            setSelectedFile({});\n            setSelectedFolder({});\n          }\n        } else {\n          setContextTrigger(true);\n          setSelectedFile({});\n          setSelectedFolder({});\n        }\n      } else {\n        setContextTrigger(true);\n      }\n    },\n    [is_context, files]\n  );\n\n  const handleSortOrder = useCallback(\n    (e) => {\n      setOrder(!order_desc);\n      let ordered_files = [];\n      let ordered_folders = [];\n      if (order_desc) {\n        ordered_files = files.sort((a, b) => a.name.localeCompare(b.name));\n        ordered_folders = folders.sort((a, b) => a.name.localeCompare(b.name));\n      } else {\n        ordered_files = files.sort((a, b) => b.name.localeCompare(a.name));\n        ordered_folders = folders.sort((a, b) => b.name.localeCompare(a.name));\n      }\n      setFiles(ordered_files);\n      setFolders(ordered_folders);\n    },\n    [order_desc, files, folders]\n  );\n\n  const setRoutes = () => {\n    let paths = props.location.pathname.substr(1).split(\"/\");\n    paths = paths.filter((el) => el !== null && el !== \"\");\n    let routes = [];\n    paths.forEach((item, index) => {\n      const route = {\n        path: index !== 0 ? routes[index - 1][\"path\"] + \"/\" + item : \"/drive\",\n        name: index !== 0 ? item : \"My Drive\",\n      };\n      routes.push(route);\n    });\n    setRouteTree(routes);\n    let full_path = \"\";\n    paths.forEach((item, index) => {\n      if (index !== paths.length - 1) {\n        full_path += \"/\" + item;\n      }\n    });\n    const cur_route = {\n      path: full_path,\n      name: paths[paths.length - 1],\n    };\n    setMobileCurRoute(cur_route);\n  };\n\n  const handleDropdown = (type) => {\n    if (type === \"new_folder\") {\n      setCreatingModal(true);\n    }\n    if (type === \"upload_file\") {\n      fileRef.current.click();\n    }\n    if (type === \"upload_folder\") {\n      folderRef.current.directory = true;\n      folderRef.current.webkitdirectory = true;\n      folderRef.current.click();\n    }\n  };\n\n  const process = (event) => {\n    if (!event.lengthComputable) return; // guard\n    const loaded = event.loaded + downloadedRef.current;\n    var downloadingPercentage = Math.floor(loaded / totalSizeRef.current * 100);\n    setDownloadPercentage(downloadingPercentage);\n  };\n\n  const downloadBlob = (blob, name = 'file.txt') => {\n    // Convert your blob into a Blob URL (a special url that points to an object in the browser's memory)\n    const blobUrl = URL.createObjectURL(blob);\n\n    // Create a link element\n    const link = document.createElement(\"a\");\n\n    // Set link's href to point to the Blob URL\n    link.href = blobUrl;\n    link.download = name;\n\n    // Append link to the body\n    document.body.appendChild(link);\n\n    const clickHandler = () => {\n      setTimeout(() => {\n        URL.revokeObjectURL(blobUrl);\n        link.removeEventListener('click', clickHandler);\n      }, 150);\n    };\n\n    link.addEventListener('click', clickHandler, false);\n\n    // Dispatch click event on the link\n    // This is necessary as link.click() does not work on the latest firefox\n    link.dispatchEvent(\n      new MouseEvent('click', {\n        bubbles: true,\n        cancelable: true,\n        view: window\n      })\n    );\n\n    // Remove link from body\n    document.body.removeChild(link);\n  }\n\n  const DownloadFileFromS3 = async (type, signed_url) => {\n    const result = await downloadSingleFile(signed_url.url, process);\n    if (result.error) {\n      setDownloadFailed(true);\n    }\n    else {\n      downloadedRef.current = downloadedRef.current + result.data.size;\n\n      let mimeType = signed_url.type;\n      let fileName = signed_url.key;\n      let blob = new Blob([result.data], { type: mimeType });\n      if (type === 'folder') downloadZip.file(fileName, blob);\n      else if (type === 'file') downloadBlob(blob, fileName);\n    }\n  };\n\n  const handleClick = async (e, data) => {\n    if (data.foo === \"new_folder\") {\n      setCreatingModal(true);\n    }\n    if (data.foo === \"upload_file\") {\n      fileRef.current.click();\n    }\n    if (data.foo === \"upload_folder\") {\n      folderRef.current.directory = true;\n      folderRef.current.webkitdirectory = true;\n      folderRef.current.click();\n    }\n    if (data.foo === \"download\") {\n      setDownloadPercentage(0);\n      setDownloadFailed(false);\n      setDownloadingModal(true);\n      setDownloaded(false);\n      if (selected_file && selected_file.path) {\n\n        let formData = new FormData();\n        formData.append('file', selected_file.id);\n\n        const result = await fileSingedUrl(formData);\n        const signed_urls = result.data.data.signed_urls;\n\n        totalSizeRef.current = parseInt(selected_file.size);\n        downloadedRef.current = 0;\n        for (let i = 0; i < signed_urls.length; i++) {\n          await DownloadFileFromS3('file', signed_urls[i]);\n        }\n        setDownloaded(true);\n        // new Downloader({ url: selected_file.path })\n        //   .then((res) => {\n        //     setDownloaded(true);\n        //     console.log(res);\n        //   })\n        //   .catch((e) => console.warn(e));\n      }\n\n      if (selected_folder && selected_folder.id) {\n        setDownloadingModal(true);\n        setDownloaded(false);\n        let formData = new FormData();\n        formData.append('folder', selected_folder.id);\n\n        downloadZip = zip.folder(selected_folder.name);\n\n        const result = await folderSignedUrls(formData);\n        const signed_urls = result.data.data.signed_urls;\n        for (let i = 0; i < signed_urls.length; i++) {\n          await DownloadFileFromS3('folder', signed_urls[i]);\n        }\n\n        zip.generateAsync({ type: \"blob\" })\n          .then(function (content) {\n            saveAs(content, selected_folder.name);\n            setDownloaded(true);\n          });\n      }\n    }\n  };\n\n  let loadedOffset = 0;\n  const waitUpload = async (chunk, index, callback) => {\n    let formData = new FormData();\n    formData.append('file', chunk.file);\n    formData.append('mpuId', chunk.mpuId);\n    formData.append('partNo', chunk.partNo);\n    formData.append('directory', chunk.directory);\n    formData.append('clientMethod', 'upload_part');\n\n    const res = await getSignedPostUrl(formData);\n    if (res.error) setUploadFailed(true);\n\n    const response = await uploadChunk(\n      res.data.data.signed_url,\n      chunk.data,\n      index,\n      callback\n    );\n    if (response.error) setUploadFailed(true);\n    let etag = response.data.headers['etag'];\n    return {\n      'ETag': etag.substring(1, etag.length - 1),\n      'PartNumber': chunk.partNo\n    };\n  };\n\n  const uploadMinorFile = async (file_data, totalFileSize) => {\n\n    var formData = new FormData();\n    formData.append('file', file_data.file);\n    formData.append('clientMethod', 'put_object');\n    formData.append('filetype', file_data.file.type);\n    formData.append('directory', file_data.directory);\n\n    let progress = new Array(1);\n    const onHandleProgress = (loaded, index) => {\n      if (loaded > file_data.file.size) {\n        loaded = file_data.file.size;\n      }\n      progress[index] = loaded;\n      const sum = progress.reduce((a, b) => a + b, 0);\n      console.log((loadedOffset + sum) / totalFileSize * 100);\n      setUploadPercent(parseFloat((loadedOffset + sum) / totalFileSize * 100).toFixed(0));\n    };\n\n    const res = await getSignedPostUrl(formData);\n    if (res.error) setUploadFailed(true);\n    const fileResponse = await uploadSingleFile(res.data.data.signed_url, file_data.file, onHandleProgress);\n    if (fileResponse.error) setUploadFailed(true);\n    console.log(fileResponse);\n\n    const complete = await completeUpload(file_data.file.name, file_data.directory, file_data.file.type, file_data.file.size);\n    if (complete.error) setUploadFailed(true);\n    return complete.data;\n  }\n\n  const uploadChunks = async (chunks, totalFileSize) => {\n    let parts = [];\n\n    let chunk = chunks[0];\n\n    let progress = new Array(chunks.length);\n    const onHandleProgress = (loaded, index) => {\n      progress[index] = loaded;\n      const sum = progress.reduce((a, b) => a + b, 0);\n      console.log((loadedOffset + sum) / totalFileSize * 100);\n      setUploadPercent(parseFloat((loadedOffset + sum) / totalFileSize * 100).toFixed(0));\n    };\n    const promises = chunks.map((c, index) => waitUpload(c, index, onHandleProgress));\n    parts = await Promise.all(promises);\n\n    const complete = await completeMultiUpload(chunk.file, chunk.directory, parts, chunk.mpuId, chunk.type, chunk.size);\n    if (complete.error) setUploadFailed(true);\n    return complete.data;\n  };\n\n  const calculateChunks = (file) => {\n    var minChunksCount = parseInt(file.size / CHUNK_SIZE);\n    var result = file.size % CHUNK_SIZE < CHUNK_LIMIT ? minChunksCount : minChunksCount + 1;\n    return result;\n  };\n\n  const onHandleUploadFileSelect = (file) => {\n    const selected_file = files.find((ele, index) => ele.name === file.name);\n    setSelectedFile(selected_file);\n    const element_name = is_gridType ? selected_file.name + \"_grid_file_\" + selected_file.id : selected_file.name + \"list_file_\" + selected_file.id;\n    scroller.scrollTo(element_name, {\n      containerId: \"context-area\",\n      duration: 1500,\n      delay: 100,\n      offset: 0,\n      smooth: true,\n    });\n  };\n  const handleChangeFile = async (e) => {\n    var file_arr = [];\n\n    let overLimit = false;\n    let totalFileSize = 0;\n    Object.values(e.target.files).forEach((file) => {\n      if (file.size > LIMIT) {\n        toast.dark(\n          <CustomToast\n            text=\"The size is too big and it cannot be uploaded\"\n            type=\"error\"\n          />,\n          {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            className: \"toast-custom\",\n          }\n        );\n        overLimit = true;\n      }\n      file.uploaded = false;\n      totalFileSize += file.size;\n      file_arr.push(file);\n    });\n    if (overLimit) return;\n\n    setUploadingFiles((uploading_files) => uploading_files.concat(file_arr));\n    setFileCount(file_count + e.target.files.length);\n    if (isMobileOnly) {\n      scroll.scrollToTop({ containerId: \"context-area\" });\n    } else {\n      setUploadingModal(true);\n    }\n    setUploaded(false);\n    setUploadFailed(false);\n\n    let response = [];\n    for (let file of file_arr) {\n\n      if (file.size < CHUNK_LIMIT) {\n\n        const data = {\n          'file': file,\n          'directory': cur_dir\n        };\n\n        const fileResponse = await uploadMinorFile(data, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      else {\n        const chunkCounts = calculateChunks(file);\n        let partNo = 1;\n        const res = await getMultiPartUploadId(file.name, cur_dir);\n        if (res.error) setUploadFailed(true);\n        const mpuId = res.data.data.mpu_id;\n        let chunks = [];\n        let _offset = 0;\n        while (partNo <= chunkCounts) {\n          let readLength = CHUNK_SIZE;\n          if (file.size - _offset - CHUNK_SIZE < CHUNK_LIMIT) {\n            readLength = file.size - _offset;\n          }\n          var blob = file.slice(_offset, readLength + _offset);\n          chunks.push({\n            'file': file.name,\n            'type': file.type,\n            'size': file.size,\n            'mpuId': mpuId,\n            'partNo': partNo,\n            'directory': cur_dir,\n            'data': blob\n          });\n          _offset += readLength;\n          partNo++;\n        }\n        const fileResponse = await uploadChunks(chunks, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      loadedOffset += file.size;\n    }\n    loadedOffset = 0;\n\n    isMobileOnly && setUploadingFiles([]);\n    let res_arr = [...files];\n    response.forEach((file) => {\n      res_arr.push(file);\n    });\n    setFiles(res_arr);\n    setUploaded(true);\n    setFileCount(0);\n    setUploadPercent(0);\n    if (isMobileOnly) {\n      toast.dark(\n        <CustomToast\n          text=\"All pending uploads have completed\"\n          type=\"upload\"\n        />,\n        {\n          position: toast.POSITION.BOTTOM_CENTER,\n          hideProgressBar: true,\n          closeOnClick: false,\n          pauseOnHover: true,\n          draggable: true,\n          className: \"toast-custom\",\n        }\n      );\n    }\n  };\n\n  const onHandleUploadFolderSelect = (folder) => {\n    const selected_folder = foldersRef.current.find(\n      (ele, index) => ele.name === folder.name\n    );\n    setSelectedFolder(selected_folder);\n    const element_name = is_gridType ? selected_folder.name + \"_grid_folder_\" + selected_folder.id : selected_folder.name + \"_list_folder_\" + selected_folder.id;\n    scroller.scrollTo(element_name, {\n      containerId: \"context-area\",\n      duration: 1500,\n      delay: 100,\n      offset: 0,\n      smooth: true,\n    });\n  };\n  const handleChangeFolder = async (e) => {\n    var formData = new FormData();\n    var directory = \"\";\n    var file_arr = [];\n\n    let overLimit = false;\n    let totalFileSize = 0;\n    Object.values(e.target.files).forEach((file) => {\n      if (file.size > LIMIT) {\n        toast.dark(\n          <CustomToast\n            text=\"The size is too big and it cannot be uploaded\"\n            type=\"error\"\n          />,\n          {\n            position: toast.POSITION.TOP_CENTER,\n            hideProgressBar: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            className: \"toast-custom\",\n          }\n        );\n        overLimit = true;\n      }\n      file.uploaded = false;\n      file_arr.push(file);\n      totalFileSize += file.size;\n      directory = file.webkitRelativePath;\n    });\n    formData.append(\"parent_id\", props.location.state.id);\n\n    if (overLimit) return;\n\n    var arr = [];\n    arr.push({\n      name: directory.split(\"/\")[0],\n      count: e.target.files.length,\n      uploaded: false,\n    });\n\n    setUploadingFolders((uploading_folders) => uploading_folders.concat(arr));\n    setFileCount(file_count + 1);\n    setUploadingModal(true);\n    setUploaded(false);\n    setUploadFailed(false);\n\n    let response = [];\n    for (let file of file_arr) {\n\n      if (file.size < CHUNK_LIMIT) {\n        const data = {\n          'file': file,\n          'directory': directory.split(\"/\")[0]\n        };\n\n        const fileResponse = await uploadMinorFile(data, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      else {\n        const chunkCounts = calculateChunks(file);\n        let partNo = 1;\n        const res = await getMultiPartUploadId(file.name, directory.split(\"/\")[0]);\n        if (res.error) setUploadFailed(true);\n        const mpuId = res.data.data.mpu_id;\n        let chunks = [];\n        let _offset = 0;\n        while (partNo <= chunkCounts) {\n          let readLength = CHUNK_SIZE;\n          if (file.size - _offset - CHUNK_SIZE < CHUNK_LIMIT) {\n            readLength = file.size - _offset;\n          }\n          var blob = file.slice(_offset, readLength + _offset);\n          chunks.push({\n            'file': file.name,\n            'type': file.type,\n            'size': file.size,\n            'mpuId': mpuId,\n            'partNo': partNo,\n            'directory': directory.split(\"/\")[0],\n            'data': blob\n          });\n          _offset += readLength;\n          partNo++;\n        }\n        const fileResponse = await uploadChunks(chunks, totalFileSize);\n        response.push(fileResponse.data);\n      }\n      loadedOffset += file.size;\n    }\n    loadedOffset = 0;\n    const res = await completeFolderUpload(directory.split(\"/\")[0], props.location.state.id);\n    if (res.error) setUploadFailed(true);\n    // complete folder upload\n    const res_arr = [];\n    res_arr.push(res);\n    setFolders((folders) => folders.concat(res_arr));\n    setUploaded(true);\n    setFileCount(0);\n    setUploadPercent(0);\n    if (isMobileOnly) {\n      toast.dark(\n        <CustomToast\n          text=\"All pending uploads have completed\"\n          type=\"upload\"\n        />,\n        {\n          position: toast.POSITION.BOTTOM_CENTER,\n          hideProgressBar: true,\n          closeOnClick: false,\n          pauseOnHover: true,\n          draggable: true,\n          className: \"toast-custom\",\n        }\n      );\n    }\n  };\n\n  const closeModal = () => {\n    setUploadingModal(false);\n    setDownloadingModal(false);\n    setTotalFileCount(0);\n    setUploadingFiles([]);\n    setUploadingFolders([]);\n  };\n\n  const minimizeModal = () => {\n    setMinimize(!is_minimized);\n  };\n\n  const afterOpenCreateModal = (e) => {\n    inputRef.current.focus();\n    inputRef.current.select();\n  };\n\n  const closeCreateModal = () => {\n    setCreatingModal(false);\n  };\n\n  const handleChangeLayout = () => {\n    setViewType(!is_gridType);\n  };\n\n  const handleShowDetail = () => {\n    console.log(\"Show Detail View\");\n  };\n\n  const onHandleFolderTitle = (e) => {\n    setFolderTitle(e.target.value);\n  };\n\n  const onCreateNewFolder = () => {\n    createFolder(new_folder_title, props.location.state.id).then((res) => {\n      setCreatingModal(false);\n      const arr = [];\n      arr.push(res);\n      setFolders((folders) => folders.concat(arr));\n      setUploaded(true);\n      setFolderTitle(\"Untitled folder\");\n      setSelectedFile({});\n      setSelectedFolder(res);\n    });\n  };\n\n  const onHandleMobilePopupOpen = () => {\n    setMobilePopup(true);\n  };\n  const onHandleMobilePopupClose = () => {\n    setMobilePopup(false);\n  };\n  const onHandleMobilePopupItem = (type) => {\n    setMobilePopup(false);\n    if (type === \"upload\") {\n      fileRef.current.click();\n    }\n    if (type === \"create_folder\") {\n      setCreatingModal(true);\n    }\n  };\n\n  const onHandleMobileSideOpen = () => {\n    setMobileSide(true);\n  };\n  const onHandleMobileSideClose = () => {\n    setMobileSide(false);\n  };\n  const onHandleMobileSideItem = async (type) => {\n    setMobileSide(false);\n    if (type === \"download\") {\n      setDownloadPercentage(0);\n      setDownloadFailed(false);\n      if (selected_file) {\n        setDownloadingModal(true);\n        setDownloaded(false);\n        console.log(selected_file);\n\n        let formData = new FormData();\n        formData.append('file', selected_file.id);\n\n        const result = await fileSingedUrl(formData);\n        const signed_urls = result.data.data.signed_urls;\n\n        totalSizeRef.current = parseInt(selected_file.size);\n        downloadedRef.current = 0;\n\n        for (let i = 0; i < signed_urls.length; i++) {\n          await DownloadFileFromS3('file', signed_urls[i]);\n        }\n        setDownloaded(true);\n\n        toast.dark(\n          <CustomToast\n            text=\"1 item will be download. See notification for details\"\n            type=\"download\"\n          />,\n          {\n            position: toast.POSITION.BOTTOM_CENTER,\n            hideProgressBar: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            className: \"toast-custom\",\n          }\n        );\n\n        // new Downloader({\n        //   url: selected_file.path,\n        //   mobileDisabled: false,\n        //   forceDesktopMode: true,\n        // })\n        //   .then((res) => {\n        //     setDownloaded(true);\n\n        //     return toast.dark(\n        //       <CustomToast\n        //         text=\"1 item will be download. See notification for details\"\n        //         type=\"download\"\n        //       />,\n        //       {\n        //         position: toast.POSITION.BOTTOM_CENTER,\n        //         hideProgressBar: true,\n        //         closeOnClick: false,\n        //         pauseOnHover: true,\n        //         draggable: true,\n        //         className: \"toast-custom\",\n        //       }\n        //     )\n        //   }\n        //   )\n        //   .catch((e) => console.warn(e));\n      }\n    }\n    if (type === \"trash\") {\n      console.log(type);\n    }\n  };\n\n  const bind = useGesture({\n    onMouseDown: async (e) => {\n      if (e.button === 0) {\n        setContextTrigger(true);\n        if (isMobileOnly) {\n          const cur = e.target.id.split(\" \")[2];\n          const type = e.target.id.split(\" \")[1];\n          if (cur !== \"0\") {\n            if (type === \"file\") {\n              setSelectedFolder({});\n              setDownloadPercentage(0);\n              setDownloadFailed(false);\n              const file = files.find((file) => file.id === parseInt(cur));\n              setSelectedFile(file);\n              if (!e.target.className.includes(\"info-box\")) {\n                setDownloadingModal(true);\n                setDownloaded(false);\n\n                let formData = new FormData();\n                formData.append('file', file.id);\n\n                const result = await fileSingedUrl(formData);\n                const signed_urls = result.data.data.signed_urls;\n\n                totalSizeRef.current = parseInt(file.size);\n                downloadedRef.current = 0;\n\n                for (let i = 0; i < signed_urls.length; i++) {\n                  await DownloadFileFromS3('file', signed_urls[i]);\n                }\n                setDownloaded(true);\n\n                toast.dark(\n                  <CustomToast\n                    text=\"1 item will be download. See notification for details\"\n                    type=\"download\"\n                  />,\n                  {\n                    position: toast.POSITION.BOTTOM_CENTER,\n                    hideProgressBar: true,\n                    closeOnClick: false,\n                    pauseOnHover: true,\n                    draggable: true,\n                    className: \"toast-custom\",\n                  }\n                );\n\n                // new Downloader({\n                //   url: file.path,\n                //   mobileDisabled: false,\n                //   forceDesktopMode: true,\n                // })\n                //   .then((res) => {\n                //     setDownloaded(true);\n\n                //     return toast.dark(\n                //       <CustomToast\n                //         text=\"1 item will be download. See notification for details\"\n                //         type=\"download\"\n                //       />,\n                //       {\n                //         position: toast.POSITION.BOTTOM_CENTER,\n                //         hideProgressBar: true,\n                //         closeOnClick: false,\n                //         pauseOnHover: true,\n                //         draggable: true,\n                //         className: \"toast-custom\",\n                //       }\n                //     )\n                //   }\n                //   )\n                //   .catch((e) => console.warn(e));\n              }\n            } else {\n              setSelectedFile({});\n              const folder = foldersRef.current.find(\n                (folder) => folder.id === parseInt(cur)\n              );\n              setSelectedFolder(folder);\n              if (!e.target.className.includes(\"info-box\")) {\n                props.history.push({\n                  pathname:\n                    props.location.pathname[\n                      props.location.pathname.length - 1\n                    ] !== \"/\"\n                      ? `${props.location.pathname}/${folder.name}`\n                      : `${props.location.pathname}${folder.name}`,\n                  state: { name: folder.name, id: folder.id },\n                });\n              }\n            }\n          } else {\n            setSelectedFile({});\n            setSelectedFolder({});\n          }\n        } else {\n          const cur = e.target.id.split(\" \")[2];\n          const type = e.target.id.split(\" \")[1];\n          if (type === \"file\") {\n            setSelectedFolder({});\n            const file = files.find((file) => file.id === parseInt(cur));\n            setSelectedFile(file);\n          } else {\n            setSelectedFile({});\n            const folder = foldersRef.current.find(\n              (folder) => folder.id === parseInt(cur)\n            );\n            setSelectedFolder(folder);\n          }\n        }\n      } else {\n        setContextTrigger(true);\n      }\n    },\n  });\n\n  const dateFormat = (date) => {\n    return moment(date).format(\"MMM DD, YYYY\");\n  };\n\n  useEventListener(\"mousedown\", eventContextHandler);\n\n  return (\n    <Layout>\n      {is_page_loaded ? (\n        <div className=\"explorer-page\">\n          <Modal\n            isOpen={is_uploadingModal}\n            onRequestClose={closeModal}\n            className=\"file-upload-modal\"\n            overlayClassName=\"file-upload-modal-overlay\"\n          >\n            <div className=\"modal-header\">\n              <div className=\"loading-status\">\n                {is_upload_failed && (\n                  <span>\n                    Upload Failed\n                  </span>\n                )}\n                {!is_upload_failed && !is_uploaded && (\n                  <span>\n                    Uploading {file_count} {file_count > 1 ? \"items\" : \"item\"} - {upload_percent}% completed\n                  </span>\n                )}\n                {!is_upload_failed && is_uploaded && (\n                  <span>\n                    {total_file_count} &nbsp;\n                    {total_file_count > 1 ? \"uploads \" : \"upload \"}\n                    completed\n                  </span>\n                )}\n              </div>\n              <div className=\"btn-group\">\n                <Popup\n                  trigger={\n                    <button className=\"tooltip\" onClick={minimizeModal}>\n                      {!is_minimized ? (\n                        <svg\n                          x=\"0px\"\n                          y=\"0px\"\n                          width=\"14px\"\n                          height=\"14px\"\n                          viewBox=\"0 0 24 24\"\n                          focusable=\"false\"\n                        >\n                          <path\n                            fill=\"#FFFFFF\"\n                            d=\"M21.17,5.17L12,14.34l-9.17-9.17L0,8l12,12,12-12z\"\n                          ></path>\n                        </svg>\n                      ) : (\n                          <svg\n                            x=\"0px\"\n                            y=\"0px\"\n                            width=\"14px\"\n                            height=\"14px\"\n                            viewBox=\"0 0 24 24\"\n                            focusable=\"false\"\n                          >\n                            <path\n                              fill=\"#FFFFFF\"\n                              d=\"M2.83,18.83L12,9.66l9.17,9.17L24,16,12,4,0,16z\"\n                            ></path>\n                          </svg>\n                        )}\n                    </button>\n                  }\n                  position=\"bottom center\"\n                  on=\"hover\"\n                  arrow={false}\n                >\n                  <span className=\"content\">Minimize</span>\n                </Popup>\n                <Popup\n                  trigger={\n                    <button className=\"tooltip\" onClick={closeModal}>\n                      <svg\n                        x=\"0px\"\n                        y=\"0px\"\n                        width=\"14px\"\n                        height=\"14px\"\n                        viewBox=\"0 0 10 10\"\n                        focusable=\"false\"\n                        fill=\"#FFFFFF\"\n                      >\n                        <polygon points=\"10,1.01 8.99,0 5,3.99 1.01,0 0,1.01 3.99,5 0,8.99 1.01,10 5,6.01 8.99,10 10,8.99 6.01,5 \"></polygon>\n                      </svg>\n                    </button>\n                  }\n                  position=\"bottom center\"\n                  on=\"hover\"\n                  arrow={false}\n                >\n                  <span className=\"content\">Close</span>\n                </Popup>\n              </div>\n            </div>\n            {is_upload_failed && (\n              <>\n                Upload failed &nbsp;\n                <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <g>\n                    <path stroke=\"null\" id=\"svg_1\" fill=\"#D72828\" d=\"m10,0.11117c-5.461519,0 -9.88883,4.427312 -9.88883,9.88883s4.427312,9.88883 9.88883,9.88883s9.88883,-4.427312 9.88883,-9.88883s-4.427312,-9.88883 -9.88883,-9.88883zm4.943179,13.958496l-0.874337,0.873513l-4.068842,-4.06843l-4.06843,4.06843l-0.874749,-0.873513l4.069254,-4.069254l-4.069254,-4.069254l0.873513,-0.874337l4.069666,4.069666l4.070078,-4.069666l0.873101,0.874337l-4.068842,4.069254l4.068842,4.069254z\" />\n                  </g>\n                </svg>\n              </>\n            )}\n            {!is_upload_failed && !is_minimized && (\n              <div\n                className={\n                  total_file_count > 10 ? \"modal-body extra\" : \"modal-body\"\n                }\n              >\n                {Object.values(uploading_files).map((file, i) => (\n                  <div className=\"item\" key={i}>\n                    <div className=\"content\">\n                      <div className={!file.uploaded ? \"logo loading\" : \"logo\"}>\n                        <img src={matchImageResource16(file)} alt={file.name} />\n                      </div>\n                      <div className={!file.uploaded ? \"name loading\" : \"name\"}>\n                        <span>{file.name}</span>\n                        <span></span>\n                      </div>\n                      <div className=\"status\">\n                        {!file.uploaded ? (\n                          <ReactLoading\n                            type=\"spin\"\n                            color=\"#929292\"\n                            className=\"loading\"\n                          />\n                        ) : (\n                            <div className=\"icon\">\n                              <ReactHoverObserver>\n                                {({ isHovering }) => (\n                                  <React.Fragment>\n                                    {isHovering ? (\n                                      <svg\n                                        width=\"24px\"\n                                        height=\"24px\"\n                                        viewBox=\"0 0 24 24\"\n                                        focusable=\"false\"\n                                        onClick={() =>\n                                          onHandleUploadFileSelect(file)\n                                        }\n                                      >\n                                        <path d=\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"></path>\n                                      </svg>\n                                    ) : (\n                                        <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"#0F9D58\"\n                                        >\n                                          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n                                        </svg>\n                                      )}\n                                  </React.Fragment>\n                                )}\n                              </ReactHoverObserver>\n                            </div>\n                          )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                {Object.values(uploading_folders).map((folder, i) => (\n                  <div className=\"item\" key={i}>\n                    <div className=\"content\">\n                      <div className={!folder.uploaded ? \"logo loading\" : \"logo\"}>\n                        <svg\n                          x=\"0px\"\n                          y=\"0px\"\n                          focusable=\"false\"\n                          viewBox=\"0 0 24 24\"\n                          height=\"24px\"\n                          width=\"24px\"\n                          fill=\"#5f6368\"\n                        >\n                          <g>\n                            <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"></path>\n                            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                          </g>\n                        </svg>\n                      </div>\n                      <div className={!folder.uploaded ? \"name loading\" : \"name\"}>\n                        <span>{folder.name}</span>\n                        <span>\n                          {!folder.uploaded ? 0 : folder.count} of {folder.count}\n                        </span>\n                      </div>\n                      <div className=\"status\">\n                        {!folder.uploaded ? (\n                          <ReactLoading\n                            type=\"spin\"\n                            color=\"#929292\"\n                            className=\"loading\"\n                          />\n                        ) : (\n                            <div className=\"icon\">\n                              <ReactHoverObserver>\n                                {({ isHovering }) => (\n                                  <React.Fragment>\n                                    {isHovering ? (\n                                      <svg\n                                        width=\"24px\"\n                                        height=\"24px\"\n                                        viewBox=\"0 0 24 24\"\n                                        focusable=\"false\"\n                                        onClick={() =>\n                                          onHandleUploadFolderSelect(folder)\n                                        }\n                                      >\n                                        <path d=\"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"></path>\n                                      </svg>\n                                    ) : (\n                                        <svg\n                                          width=\"24px\"\n                                          height=\"24px\"\n                                          viewBox=\"0 0 24 24\"\n                                          fill=\"#0F9D58\"\n                                        >\n                                          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n                                        </svg>\n                                      )}\n                                  </React.Fragment>\n                                )}\n                              </ReactHoverObserver>\n                            </div>\n                          )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </Modal>\n          <Modal\n            isOpen={is_downloadingModal}\n            onRequestClose={closeModal}\n            className=\"file-download-modal\"\n            overlayClassName=\"file-download-modal-overlay\"\n          >\n            <div className=\"modal-header\">\n              <div className=\"loading-status\">\n                {is_download_failed && (\n                  <span>\n                    Download Failed\n                  </span>\n                )}\n                {!is_download_failed && !is_downloaded && (\n                  <span>\n                    Downloading - {download_percent}% completed\n                  </span>\n                )}\n                {!is_download_failed && is_downloaded && (\n                  <span>\n                    Download Completed\n                  </span>\n                )}\n              </div>\n              <div className=\"btn-group\">\n                <Popup\n                  trigger={\n                    <button className=\"tooltip\" onClick={closeModal}>\n                      <svg\n                        x=\"0px\"\n                        y=\"0px\"\n                        width=\"14px\"\n                        height=\"14px\"\n                        viewBox=\"0 0 10 10\"\n                        focusable=\"false\"\n                        fill=\"#FFFFFF\"\n                      >\n                        <polygon points=\"10,1.01 8.99,0 5,3.99 1.01,0 0,1.01 3.99,5 0,8.99 1.01,10 5,6.01 8.99,10 10,8.99 6.01,5 \"></polygon>\n                      </svg>\n                    </button>\n                  }\n                  position=\"bottom center\"\n                  on=\"hover\"\n                  arrow={false}\n                >\n                  <span className=\"content\">Close</span>\n                </Popup>\n              </div>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"item\">\n                <div className=\"content\">\n                  <div className=\"status\">\n                    {is_download_failed && (\n                      <>\n                        Failed &nbsp;\n                        <svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <g>\n                            <path stroke=\"null\" id=\"svg_1\" fill=\"#D72828\" d=\"m10,0.11117c-5.461519,0 -9.88883,4.427312 -9.88883,9.88883s4.427312,9.88883 9.88883,9.88883s9.88883,-4.427312 9.88883,-9.88883s-4.427312,-9.88883 -9.88883,-9.88883zm4.943179,13.958496l-0.874337,0.873513l-4.068842,-4.06843l-4.06843,4.06843l-0.874749,-0.873513l4.069254,-4.069254l-4.069254,-4.069254l0.873513,-0.874337l4.069666,4.069666l4.070078,-4.069666l0.873101,0.874337l-4.068842,4.069254l4.068842,4.069254z\" />\n                          </g>\n                        </svg>\n                      </>\n                    )\n                    }\n                    {!is_download_failed && !is_downloaded ? (\n                      <>\n                        Preparing &nbsp;\n                      <ReactLoading\n                          type=\"spin\"\n                          color=\"#929292\"\n                          className=\"loading\"\n                        />\n                      </>\n                    ) : !is_download_failed && is_downloaded ? <>\n                      Done &nbsp;\n                        <svg\n                        width=\"24px\"\n                        height=\"24px\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"#0F9D58\"\n                      >\n                        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"></path>\n                      </svg>\n                    </>\n                        : null\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Modal>\n          <Modal\n            isOpen={is_creatingModal}\n            onRequestClose={closeCreateModal}\n            onAfterOpen={afterOpenCreateModal}\n            className=\"create-folder-modal\"\n            overlayClassName=\"modal-overlay\"\n          >\n            <div className=\"modal-header\">\n              <span>New folder</span>\n              <Popup\n                trigger={\n                  <button className=\"tooltip\" onClick={closeCreateModal}>\n                    <svg\n                      x=\"0px\"\n                      y=\"0px\"\n                      width=\"14px\"\n                      height=\"14px\"\n                      viewBox=\"0 0 10 10\"\n                      focusable=\"false\"\n                      fill=\"#000000\"\n                    >\n                      <polygon points=\"10,1.01 8.99,0 5,3.99 1.01,0 0,1.01 3.99,5 0,8.99 1.01,10 5,6.01 8.99,10 10,8.99 6.01,5 \"></polygon>\n                    </svg>\n                  </button>\n                }\n                position=\"bottom center\"\n                on=\"hover\"\n                arrow={false}\n              >\n                <span className=\"content\">Close</span>\n              </Popup>\n            </div>\n            <div className=\"modal-body\">\n              <Input\n                className=\"input\"\n                onChange={onHandleFolderTitle}\n                defaultValue=\"Untitled folder\"\n                ref={inputRef}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button className=\"btn\" onClick={closeCreateModal}>\n                Close\n              </button>\n              <button className=\"btn save\" onClick={onCreateNewFolder}>\n                Save\n              </button>\n            </div>\n          </Modal>\n          <ContextMenuTrigger id=\"dir-context\" disable={is_triggerable}>\n            <Sidebar as={Menu} vertical visible={true}>\n              <Dropdown text=\"New\" icon={null} labeled className=\"button-tool\">\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    icon=\"folder outline\"\n                    label=\"New folder\"\n                    onClick={() => handleDropdown(\"new_folder\")}\n                  ></Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item\n                    icon=\"upload\"\n                    label=\"Upload files\"\n                    onClick={() => handleDropdown(\"upload_file\")}\n                  ></Dropdown.Item>\n                  <Dropdown.Item\n                    icon=\"folder outline\"\n                    label=\"Upload folder\"\n                    onClick={() => handleDropdown(\"upload_folder\")}\n                  ></Dropdown.Item>\n                  <Dropdown.Divider />\n                  <Dropdown.Item\n                    icon=\"google\"\n                    label=\"Google Docs\"\n                    onClick={() => handleDropdown(\"google_docs\")}\n                  ></Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n              <Menu.Item as={Link} to=\"/drive\">\n                <svg\n                  width=\"24px\"\n                  height=\"24px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"#000000\"\n                  focusable=\"false\"\n                >\n                  <path d=\"M19 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 18H5v-1h14v1zm0-3H5V4h14v13zm-9.35-2h5.83l1.39-2.77h-5.81zm7.22-3.47L13.65 6h-2.9L14 11.53zm-5.26-2.04l-1.45-2.52-3.03 5.51L8.6 15z\"></path>\n                </svg>\n                <span>My Drive</span>\n              </Menu.Item>\n            </Sidebar>\n            <div className=\"page-container\">\n              <div className=\"page-navbar\">\n                <div className=\"navbar-dropdown-menu\">\n                  {routeTree.map((item, index) => (\n                    <React.Fragment key={index}>\n                      {index !== routeTree.length - 1 ? (\n                        <Button\n                          as={Link}\n                          to={item.path}\n                          labelPosition=\"right\"\n                          icon=\"right chevron\"\n                          content={item.name}\n                        />\n                      ) : (\n                          <Dropdown\n                            text={item.name}\n                            labeled\n                            className=\"navbar-dropdown\"\n                          >\n                            <Dropdown.Menu>\n                              <Dropdown.Item\n                                icon=\"folder outline\"\n                                label=\"New folder\"\n                                onClick={() => handleDropdown(\"new_folder\")}\n                              ></Dropdown.Item>\n                              <Dropdown.Divider />\n                              <Dropdown.Item\n                                icon=\"upload\"\n                                label=\"Upload files\"\n                                onClick={() => handleDropdown(\"upload_file\")}\n                              ></Dropdown.Item>\n                              <Dropdown.Item\n                                icon=\"folder outline\"\n                                label=\"Upload folder\"\n                                onClick={() => handleDropdown(\"upload_folder\")}\n                              ></Dropdown.Item>\n                              <Dropdown.Divider />\n                              <Dropdown.Item\n                                icon=\"google\"\n                                label=\"Google Docs\"\n                                onClick={() => handleDropdown(\"google_docs\")}\n                              ></Dropdown.Item>\n                            </Dropdown.Menu>\n                          </Dropdown>\n                        )}\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div className=\"navbar-mobile\">\n                  <Button\n                    as={Link}\n                    to={mobileCurRoute.path}\n                    labelPosition=\"left\"\n                    icon=\"arrow left\"\n                    content={mobileCurRoute.name}\n                  />\n                </div>\n                <div className=\"navbar-tools\">\n                  <button className=\"btn-layout\" onClick={handleChangeLayout}>\n                    {is_gridType ? (\n                      <svg\n                        width=\"24px\"\n                        height=\"24px\"\n                        viewBox=\"0 0 24 24\"\n                        focusable=\"false\"\n                        fill=\"#000000\"\n                      >\n                        <path d=\"M3,5v14h18V5H3z M7,7v2H5V7H7z M5,13v-2h2v2H5z M5,15h2v2H5V15z M19,17H9v-2h10V17z M19,13H9v-2h10V13z M19,9H9V7h10V9z\"></path>\n                      </svg>\n                    ) : (\n                        <svg\n                          width=\"24px\"\n                          height=\"24px\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"#000000\"\n                        >\n                          <path d=\"M2,5v14h20V5H2z M14,7v4h-4V7H14z M4,7h4v4H4V7z M16,11V7h4v4H16z M4,17v-4h4v4H4z M10,17v-4h4v4H10z M20,17 h-4v-4h4V17z\"></path>\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                        </svg>\n                      )}\n                  </button>\n                  <button className=\"btn-layout\" onClick={handleShowDetail}>\n                    <svg\n                      width=\"24px\"\n                      height=\"24px\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"#000000\"\n                    >\n                      <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                      <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n              <div className=\"context-area\" id=\"context-area\">\n                {isMobileOnly && uploading_files.length > 0 && (\n                  <div className=\"layout-view upload\">\n                    <div className=\"layout-content\">\n                      <div className=\"layout-header\">\n                        <h2>Uploads</h2>\n                      </div>\n                      <div className=\"main-content\">\n                        {uploading_files.map((item, i) => (\n                          <div className=\"guesture\">\n                            <UploadViews key={i} file={item} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div className=\"layout-view\">\n                  {folders.length > 0 && (\n                    <div\n                      className={\n                        is_gridType\n                          ? \"layout-content folder\"\n                          : \"layout-content folder list\"\n                      }\n                      id=\"layout-folder\"\n                    >\n                      <div className=\"layout-header\" id=\"folder-header\">\n                        <h2>Folders</h2>\n                      </div>\n                      <div className=\"main-content\" id=\"folder-view\">\n                        {folders.map((item, i) => (\n                          <animated.div\n                            {...bind()}\n                            className={\n                              selected_folder &&\n                                item.id === selected_folder.id\n                                ? \"guesture active\"\n                                : \"guesture\"\n                            }\n                            data-value=\"guesture\"\n                            key={i}\n                          >\n                            <Element name={item.name + \"_grid_folder_\" + item.id}>\n                              <FolderViews\n                                name={item.name}\n                                id={item.id}\n                                onHandleSide={onHandleMobileSideOpen}\n                              />\n                            </Element>\n                          </animated.div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"layout-content file\" id=\"layout-file\">\n                    <div className=\"layout-header\" id=\"file-header\">\n                      {files.length > 0 &&\n                        (is_gridType || (!is_gridType && isMobileOnly)) && (\n                          <h2>Files</h2>\n                        )}\n                      {!is_gridType && !isMobileOnly && (\n                        <div className=\"list-tool\">\n                          <div className=\"th-name\">\n                            <span>Name</span>\n                            <button class=\"direction\" onClick={handleSortOrder}>\n                              {order_desc ? (\n                                <svg\n                                  width=\"18px\"\n                                  height=\"18px\"\n                                  viewBox=\"0 0 48 48\"\n                                  focusable=\"false\"\n                                  fill=\"#000000\"\n                                >\n                                  <path fill=\"none\" d=\"M0 0h48v48H0V0z\"></path>\n                                  <path d=\"M8 24l2.83 2.83L22 15.66V40h4V15.66l11.17 11.17L40 24 24 8 8 24z\"></path>\n                                </svg>\n                              ) : (\n                                  <svg\n                                    width=\"18px\"\n                                    height=\"18px\"\n                                    viewBox=\"0 0 48 48\"\n                                    focusable=\"false\"\n                                    fill=\"#000000\"\n                                  >\n                                    <path fill=\"none\" d=\"M0 0h48v48H0V0z\"></path>\n                                    <path d=\"M40 24l-2.82-2.82L26 32.34V8h-4v24.34L10.84 21.16 8 24l16 16 16-16z\"></path>\n                                  </svg>\n                                )}\n                            </button>\n                          </div>\n                          <div className=\"th-owner\">\n                            <span>Owner</span>\n                          </div>\n                          <div className=\"th-modified\">\n                            <span>Last modified</span>\n                          </div>\n                          <div className=\"th-size\">\n                            <span>File size</span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"main-content\" id=\"detail-view\">\n                      {is_gridType &&\n                        files.length > 0 &&\n                        files.map((item, i) => (\n                          <animated.div\n                            {...bind()}\n                            className={\n                              selected_file && item.id === selected_file.id\n                                ? \"guesture active\"\n                                : \"guesture\"\n                            }\n                            data-value=\"guesture\"\n                            key={i}\n                          >\n                            <Element name={item.name + \"_grid_file_\" + item.id}>\n                              <FileViews\n                                path={item.path}\n                                type={item.content_type}\n                                name={item.name}\n                                id={item.id}\n                                access=\"detail\"\n                                onHandleSide={onHandleMobileSideOpen}\n                              />\n                            </Element>\n                          </animated.div>\n                        ))}\n                      {!is_gridType && (\n                        <div className=\"list-group\">\n                          {!isMobileOnly &&\n                            folders.map((item, i) => (\n                              <animated.div\n                                {...bind()}\n                                className={\n                                  selected_folder &&\n                                    item.id === selected_folder.id\n                                    ? \"guesture active\"\n                                    : \"guesture\"\n                                }\n                                data-value=\"guesture\"\n                                key={i}\n                              >\n                                <Element name={item.name + \"_list_folder_\" + item.id}>\n                                  <ListViews\n                                    owner=\"\"\n                                    last_modified={item.modified_date}\n                                    type=\"folder\"\n                                    name={item.name}\n                                    size=\"\"\n                                    id={item.id}\n                                    onHandleSide={onHandleMobileSideOpen}\n                                  />\n                                </Element>\n                              </animated.div>\n                            ))}\n                          {files.map((item, i) => (\n                            <animated.div\n                              {...bind()}\n                              className={\n                                selected_file && item.id === selected_file.id\n                                  ? \"guesture active\"\n                                  : \"guesture\"\n                              }\n                              data-value=\"guesture\"\n                              key={i}\n                            >\n                              <Element name={item.name + \"_list_file_\" + item.id}>\n                                <ListViews\n                                  owner=\"\"\n                                  last_modified={item.modified_date}\n                                  type={item.content_type}\n                                  name={item.name}\n                                  size={item.size}\n                                  id={item.id}\n                                  onHandleSide={onHandleMobileSideOpen}\n                                />\n                              </Element>\n                            </animated.div>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  {files.length === 0 && folders.length === 0 && (\n                    <div className=\"layout-empty\">\n                      <div className=\"main-content\">\n                        <div className=\"icon-box rotate\"></div>\n                        <div className=\"icon-box\"></div>\n                        <div className=\"text-box\">\n                          <div className=\"text\">No files uploaded</div>\n                          <div className=\"text small\">\n                            use the \"New\" button to upload\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {isMobileOnly && (\n                    <a\n                      className=\"mobile-btn-add\"\n                      onClick={onHandleMobilePopupOpen}\n                    />\n                  )}\n                </div>\n              </div>\n              {isMobileOnly && (\n                <React.Fragment>\n                  {is_mobilePopup && (\n                    <div className=\"mobile-side-overlay\"></div>\n                  )}\n                  <TransitionablePortal\n                    open={is_mobilePopup}\n                    onClose={onHandleMobilePopupClose}\n                  >\n                    <Segment className=\"mobile-popup\">\n                      <div className=\"header\">\n                        <h3>Create new</h3>\n                      </div>\n                      <div className=\"body\">\n                        <div className=\"item-row\">\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"create_folder\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <Icon name=\"folder\" />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Folder</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() => onHandleMobilePopupItem(\"upload\")}\n                          >\n                            <div className=\"icon-box\">\n                              <Icon name=\"upload\" />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Upload</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() => onHandleMobilePopupItem(\"scan\")}\n                          >\n                            <div className=\"icon-box\">\n                              <Icon name=\"camera\" />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Scan</Label>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"item-row\">\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"google_doc\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <img\n                                src={imageGroup16.google_doc}\n                                alt=\"google_doc\"\n                              />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Google Docs</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"google_sheet\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <img\n                                src={imageGroup16.google_sheet}\n                                alt=\"google_sheet\"\n                              />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Google Sheets</Label>\n                            </div>\n                          </div>\n                          <div\n                            className=\"item\"\n                            onClick={() =>\n                              onHandleMobilePopupItem(\"google_slide\")\n                            }\n                          >\n                            <div className=\"icon-box\">\n                              <img\n                                src={imageGroup16.google_slide}\n                                alt=\"google_slide\"\n                              />\n                            </div>\n                            <div className=\"name\">\n                              <Label>Google Slides</Label>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </Segment>\n                  </TransitionablePortal>\n                </React.Fragment>\n              )}\n              {isMobileOnly && (\n                <React.Fragment>\n                  {is_mobileSide && <div className=\"mobile-side-overlay\"></div>}\n                  <TransitionablePortal\n                    open={is_mobileSide}\n                    onClose={onHandleMobileSideClose}\n                    transition={{ animation: \"fade left\", duration: 500 }}\n                  >\n                    <Segment className=\"mobile-side\">\n                      <div className=\"header\">\n                        {selected_file.name && (\n                          <React.Fragment>\n                            {selected_file.content_type.includes(\"image\") ? (\n                              <div className=\"image\">\n                                <div\n                                  style={{\n                                    backgroundImage: `url(${selected_file.path})`,\n                                    backgroundRepeat: \"no-repeat\",\n                                    backgroundSize: \"cover\",\n                                    width: 30,\n                                    height: 30,\n                                  }}\n                                />\n                              </div>\n                            ) : (\n                                <div className=\"image\">\n                                  <img\n                                    src={matchImageResource16({\n                                      type: selected_file.content_type,\n                                    })}\n                                    alt={selected_file.name}\n                                    className=\"icon\"\n                                  />\n                                </div>\n                              )}\n                            <h3>{selected_file.name}</h3>\n                          </React.Fragment>\n                        )}\n                        {selected_folder.name && (\n                          <React.Fragment>\n                            <div className=\"svg-box\">\n                              <svg\n                                x=\"0px\"\n                                y=\"0px\"\n                                focusable=\"false\"\n                                viewBox=\"0 0 24 24\"\n                                height=\"24px\"\n                                width=\"24px\"\n                                fill=\"#5f6368\"\n                              >\n                                <g>\n                                  <path d=\"M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z\"></path>\n                                  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                                </g>\n                              </svg>\n                            </div>\n                            <h3>{selected_folder.name}</h3>\n                          </React.Fragment>\n                        )}\n                      </div>\n                      <div className=\"body\">\n                        <div className=\"detail\">\n                          <div className=\"item\">\n                            <label>Type</label>\n                            <div className=\"info\">\n                              <p>\n                                {selected_file.name\n                                  ? selected_file.content_type\n                                  : \"Google Drive Folder\"}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"item\">\n                            <label>Location</label>\n                            <div className=\"info\">\n                              <p>{mobileCurRoute.name}</p>\n                            </div>\n                          </div>\n                          <div className=\"item\">\n                            <label>Created</label>\n                            <div className=\"info\">\n                              <p>\n                                {selected_file.name\n                                  ? dateFormat(selected_file.created_date)\n                                  : dateFormat(selected_folder.created_date)}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"item\">\n                            <label>Modified</label>\n                            <div className=\"info\">\n                              <p>\n                                {selected_file.name\n                                  ? dateFormat(selected_file.modified_date)\n                                  : dateFormat(selected_folder.modified_date)}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                        {selected_file.name && (\n                          <div className=\"tools\">\n                            <div\n                              className=\"item\"\n                              onClick={() => onHandleMobileSideItem(\"download\")}\n                            >\n                              <div className=\"icon-box\">\n                                <Icon name=\"download\" />\n                              </div>\n                              <label>Download</label>\n                            </div>\n                            <div\n                              className=\"item\"\n                              onClick={() => onHandleMobileSideItem(\"trash\")}\n                            >\n                              <div className=\"icon-box\">\n                                <Icon name=\"trash alternate\" />\n                              </div>\n                              <label>Remove</label>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </Segment>\n                  </TransitionablePortal>\n                </React.Fragment>\n              )}\n            </div>\n            <ContextMenu\n              id=\"dir-context\"\n              className={is_triggerable ? \"context hide\" : \"context\"}\n            >\n              {is_context ? (\n                <React.Fragment>\n                  <MenuItem data={{ foo: \"new_folder\" }} onClick={handleClick}>\n                    <Icon name=\"folder outline\" /> New folder\n                  </MenuItem>\n                  <MenuItem divider />\n                  <MenuItem data={{ foo: \"upload_file\" }} onClick={handleClick}>\n                    <Icon name=\"upload\" /> Upload files\n                    <input\n                      type=\"file\"\n                      hidden\n                      multiple\n                      onChange={handleChangeFile}\n                      ref={fileRef}\n                    />\n                  </MenuItem>\n                  <MenuItem\n                    data={{ foo: \"upload_folder\" }}\n                    onClick={handleClick}\n                  >\n                    <Icon name=\"folder outline\" /> Upload folder\n                    <input\n                      type=\"file\"\n                      hidden\n                      multiple\n                      webkitdirectory\n                      onChange={handleChangeFolder}\n                      ref={folderRef}\n                    />\n                  </MenuItem>\n                  <MenuItem divider />\n                  <MenuItem data={{ foo: \"google_doc\" }} onClick={handleClick}>\n                    <Icon name=\"google\" /> Google Docs\n                  </MenuItem>\n                </React.Fragment>\n              ) : (\n                  <React.Fragment>\n                    <MenuItem data={{ foo: \"download\" }} onClick={handleClick}>\n                      <Icon name=\"cloud download\" /> Download\n                  </MenuItem>\n                  </React.Fragment>\n                )}\n            </ContextMenu>\n          </ContextMenuTrigger>\n        </div>\n      ) : (\n          <Segment className=\"page-loader\">\n            <Dimmer active inverted>\n              <Loader size=\"large\"></Loader>\n            </Dimmer>\n          </Segment>\n        )}\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n  Redirect,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport { Home } from \"./pages/Home\";\nimport { Drive } from \"./pages/Drive\";\nimport { Directory } from \"./pages/Directory\";\n\nexport const PublicRoute = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route render={() => <Redirect to=\"/\" />} />\n    </Switch>\n  </Router>\n);\n\nexport const PrivateRoute = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/login\" render={() => <Redirect to=\"/drive\" />} />\n      <Route path=\"/signup\" render={() => <Redirect to=\"/drive\" />} />\n      <Route exact path=\"/drive\" component={Drive} />\n      <Route path=\"/drive/:name\" component={Directory} />\n    </Switch>\n  </Router>\n);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/auth\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./sass/App.scss\";\nimport { PublicRoute, PrivateRoute } from \"./routes\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onAuthCheck();\n  }\n\n  render() {\n    return (\n      <Router>\n        {this.props.isAuthenticated ? <PrivateRoute /> : <PublicRoute />}\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthCheck: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true,\n  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n  });\n};\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport authReducer from \"./store/reducers/auth\";\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n});\n\nconst initialState = {\n  auth: {\n    token: localStorage.getItem(\"token\"),\n    error: null,\n    loading: false,\n  },\n};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhances(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}